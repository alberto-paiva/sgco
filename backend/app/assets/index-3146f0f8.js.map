{"version":3,"mappings":"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CE,MAAO,aACP,KAAM,oBACN,KAAM,mBACN,QAAS,EACX,EACA,CACE,MAAO,cACP,KAAM,uBACN,KAAM,oBACN,QAAS,EACX,EACA,CACE,MAAO,WACP,KAAM,kBACN,KAAM,iBACN,QAAS,EACX,EACA,CACE,MAAO,YACP,KAAM,mBACN,KAAM,kBACN,QAASD,EACX,EACA,CACE,MAAO,eACP,KAAM,oBACN,KAAM,iBACN,QAASA,EACX,EAOA,CACE,MAAO,aACP,KAAM,qBACN,QAAS,GACT,SAAU,CACR,CACE,MAAO,WACP,KAAM,8BACN,KAAM,iBACN,QAASA,EACX,EACA,CACE,MAAO,WACP,KAAM,gCACN,KAAM,iBACN,QAASA,EACX,EACA,CACE,MAAO,eACP,KAAM,0BACN,KAAM,qBACN,QAAS,CAACA,EACZ,CACF,CACF,EACA,CACE,MAAO,aACP,KAAM,wBACN,QAAS,GACT,SAAU,CACR,CACE,MAAO,aACP,KAAM,mBACN,KAAM,yBACN,QAASA,EACX,EACA,CACE,MAAO,WACP,KAAM,mBACN,KAAM,uBACN,QAASA,EACX,EACA,CACE,MAAO,aACP,KAAM,8BACN,KAAM,yBACN,QAAS,EACX,CACF,CACF,CACF,CACF,EACA,CAAE,UAAW,GAAM,QAAS,EAAK,CACnC,EC3HgB,SAAAE,GAAW,CAAE,WAAAvE,GAA+B,CAC1D,KAAM,CAACwE,EAAOC,CAAO,EAAItE,EAAsB,WACzC,CAACuE,EAAaC,CAAc,EAAIxE,WAAS,EAAE,EAC3C,CAACyE,EAAYC,CAAa,EAAI1E,WAAS,EAAE,EACzC,CAAChE,EAAUC,CAAQ,EAAIC,EAAY,EAEnCyI,EAAqBC,GAA2BA,IAASL,EAEzDM,EAAY,CAChBjB,EACAkB,EACAC,IACG,CAKH,GAHcL,EAAAD,IAAeM,EAAM,GAAKA,CAAG,EAGvCD,EAAK,SAAU,CACjBlB,EAAM,eAAe,EACrB,MACF,CAGIkB,EAAK,mBACPA,EAAK,kBAAkB,CAAE,cAAelB,EAAM,YAAa,KAAAkB,EAAM,CACnE,EAGIE,EAAc,CAClBC,EACAH,EACAC,EACAG,IACG,CACOL,E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","names":["enotfoundimage","NotFound404","location","navigate","useLocation","jsx","jsxs","Button","logo$1","AppFooter","logo","IMAGE_UPLOAD_BASE_URL","FILE_UPLOAD_BASE_URL","randomString","sleep","ms","resolve","formatDate","value","format","dayjs","validateFileSize","file","maxFileSize","formatSize","getCurrentYear","makeYearArray","startDate","steps","up","_","i","bytes","isValidCPF","cpf","_cpf","el","rest","count","soma","index","generateUUID","uuidv4","formatCEP","cep","capitalize","str","fileExistsOnServer","imageUrl","http","createFileFromUrl","url","data","metadata","filename","getImageUrlOnServer","imageName","uuid","ProfileDialog","title","content","visible","setVisible","loggedUser","usuario","setUsuario","useState","id","UniqueComponentId","useMountEffect","header","Fragment","Avatar","InputMask","classNames","InputText","body","_a","footerContent","Dialog","baseUrl","baseApi","customTransformRequest","reqData","reqHeaders","baseConfig","response","apiInstance","axios","getUserIP","props","ipifyIpv4URL","ipifyIpv64URL","params","error","API_URL","jca","jscrudapi","UsuarioField","UsuarioField2","AuthService","__publicField","username","password","result","fullUser","userActivated","userStr","userField","userLogged","userRole","isUserActivated","valid","timestampFromServer","actualTimestamp","AuthService$1","AppNavbar","profileSidebarVisible","onMenuToggle","showProfileSidebar","showProfile","setShowProfile","settingsMenuRef","useRef","useEffect","toggleSettingsMenu","event","settingsMenuItems","_item","_options","prev","Menu","isVisible","defaultItems","AppSidebar","_user","setUser","currentPage","setCurrentPage","currentKey","setCurrentKey","activeCurrentPage","href","itemClick","item","key","onLinkClick","e","to","renderItem","classes","link","Ripple","child","cKey","CSSTransition","subItem","sKey","initialLayoutConfig","initialLayoutState","DefaultLayout","children","layoutConfig","setLayoutConfig","layoutState","setLayoutState","setLoggedUser","isDesktop","isOverlay","toggleMenu","prevLayoutState","overlayMenuActive","staticMenuDesktopInactive","staticMenuMobileActive","profileSidebarToggle","profileSidebarActive","blockBodyScroll","unblockBodyScroll","hideMenu","unbindMenuOutsideClickListener","handleOutsideClick","bindMenuOutsideClickListener","useEventListener","hideProfileMenu","unbindProfileMenuOutsideClickListener","handleProfileMenuOutsideClick","bindProfileMenuOutsideClickListener","useUnmountEffect","containerClass","ErrorDialog","labelYes","labelNo","showYes","showNo","Divider","validFileTypes","PhotoUploader","label","selectedImage","disabled","setSelectedImage","fileUploadRef","setFile","fileInfo","setFileInfo","showErrorDialog","setShowErrorDialog","handleClick","getExtension","updateFileInfo","useCallback","fileUploaded","fileInfoProps","isValidFileUploaded","fileSelected","fileType","handleChange","err","useDataReducer","initialState","reducer","state","action","dispatch","useReducer","initialFormState","ErrorBase","name","message","cause","details","errorString","APIError","_CondominoService","bloco","perPage","_perPage","request","condomino","condominoID","CondominoService","_FileUploadService","fileModel","formData","FileUploadService","_UnidadeService","idCondominio","unidade","unidadeID","UnidadeService","CondominosAdd","condominoDataReducer","blocosDataReducer","unidadesDataReducer","condominoImage","setCondominoImage","formInputs","setFormInputs","toast","isReadOnly","control","handleSubmit","reset","errors","useForm","requiredFieldError","getFormErrorMessage","showSuccessToast","handleFormSubmit","verifiedUuid","_condomino","image","myRenamedFile","fetchCondominoData","fetchBlocoData","r","makeProfileImage","condominoProfileImage","foto","_b","Controller","field","fieldState","Dropdown","InputSwitch","imagePath","InputTextarea","condominoNomeTemplate","rowData","condominoStatusTemplate","condominoCpfTemplate","condominoContatoTemplate","condominoUnidadeTemplate","useExportHeader","dt","showEditModal","setSelectedBloco","blocos","setBlocos","currentSelectedBloco","setCurrentSelectedBloco","setMessage","exportCSV","fetchNomeBlocos","CondominosTable","condominos","loading","loadingMessage","reload","exportSelectedBloco","setShowEditModal","showDeleteModal","setShowDeleteModal","selectedCondomino","setSelectedCondomino","selectedBloco","showModalEdit","user","showModalDelete","deleteCondomino","deleteCondominoDialogFooter","ProgressSpinner","Toast","DataTable","Column","CondominosList","setReload","MensagensList","Clock","dateState","setDateState","Dashboard","userCount","setUserCount","receitas","setReceitas","despesas","setDespesas","apartamentos","setApartamentos","condominios","setCondominios","userLimited","userIdUnidade","userIdCondominio","getUsuarios","getReceitas","getDespesas","getApartamentos","getCondominios","_CondominioService","idEndereco","condominio","CondominioService","_EnderecoService","uf","endereco","enderecoID","EnderecoService","regexCNPJ","validCNPJ","isString","digitsOnly","validFormat","numbers","matchNumbers","digits","validCalc","x","slice","factor","sum","n","match","CondominiosAdd","condominioDataReducer","enderecosDataReducer","condominioImage","setCondominioImage","_condominio","userProfileImage","EnderecoField","_inline","condominioNameTemplate","cnpjFormatTemplate","phoneFormatTemplate","enderecoTemplate","CondominiosTable","selectedCondominio","setSelectedCondominio","fireReload","setFireReload","deleteCondominio","deleteCondominioDialogFooter","CondominiosList","selectedEndereco","condominioID","logradouroTemplate","complementoTemplate","bairroTemplate","municipioTemplate","ufTemplate","cepTemplate","paisTemplate","EnderecoTable","enderecos","setSelectedEndereco","condition","deleteEndereco","deleteEnderecoDialogFooter","EnderecosList","_CEPService","CEPService","CODIGOS_ESTADOS","getUFKeys","EnderecosAdd","_endereco","getCEPFromApi","UnidadesAdd","unidadeDataReducer","_unidade","unidadeBlocoTemplate","unidadeNumeroTemplate","unidadeObservacaoTemplate","unidadeIdCondominioTemplate","setCondominio","UnidadesTable","unidades","exportSelectedCondominio","selectedUnidade","setSelectedUnidade","deleteUnidade","deleteUnidadeDialogFooter","UnidadesList","condominioId","_SindicoService","onlyActives","sindico","sindicoID","SindicoService","SindicosAdd","sindicoDataReducer","enderecoFormatadoDataReducer","sindicoImage","setSindicoImage","_sindico","fetchSindicoData","fetchCondominioData","fetchEnderecoFormatadoData","sindicoProfileImage","sindicoNomeTemplate","sindicoStatusTemplate","sindicoCpfTemplate","sindicoContatoTemplate","sindicoCondominioTemplate","currentSelectedCondominio","setCurrentSelectedCondominio","fetchCondominios","SindicoTable","sindicos","sindicodt","selectedSindico","setSelectedSindico","deleteSindico","deleteSindicoDialogFooter","SindicosList","LoginDemo3","checked","setChecked","statusMessage","setStatusMessage","login","setLogin","senha","setSenha","goToHome","refreshPage","Checkbox","tituloTemplate","valorTemplate","InputNumber","dataVencimentoTemplate","dataPagamentoTemplate","statusTemplate","Tag","tipoTemplate","observacaoTemplate","unidadeTemplate","financeiroTableToolbar","selectedData","openNew","confirmDeleteSelected","leftToolbarTemplate","rightToolbarTemplate","exportFinanceiroCSV","Toolbar","_FinanceiroService","anoCalendario","status","tipo","idUnidade","financeiro","financeiroID","FinanceiroService","FinanceiroTable","financeirosData","exportAnoCalendario","emptyFinanceiro","msgs","selectedFinanceiro","setSelectedFinanceiro","globalFilter","setGlobalFilter","setSubmitted","financeiroDialog","setFinanceiroDialog","deleteFinanceiroDialog","setDeleteFinanceiroDialog","deleteFinanceirosDialog","setDeleteFinanceirosDialog","financeiros","setFinanceiros","setFinanceiro","setUnidades","comprovante","setComprovante","setAnoCalendario","hideDialog","hideDeleteFinanceiroDialog","hideDeleteFinanceirosDialog","editFinanceiro","confirmDeleteFinanceiro","deleteFinanceiro","_financeiro","deleteSelectedFinanceiros","_financeiros","ids","saveFinanceiro","vencimento","pagamento","renamedFile","findIndexById","deleteFinanceiroDialogFooter","deleteFinanceirosDialogFooter","financeiroTableHeader","fileurl","Calendar","FileUpload","_c","Messages","ScrollPanel","f","FinanceirosList","selectedAnoCalendario","setSelectedAnoCalendario","ano","FinanceiroReport","componentRef","makeUnidadeLabelById","handlePrint","useReactToPrint","_UsuarioService","UsuarioService","CondominoReport","setCondominos","c","UnidadeReport","u","customParseFormat","App","hashLocation","hashNavigate","useHashLocation","useLocationProperty","loggedInUser","setLoggedInUser","addLocale","customLocale","Router","Switch","Route","About","reportWebVitals","onPerfEntry","__vitePreload","onCLS","onFID","onFCP","onLCP","onTTFB","ReactDOM","React"],"sources":["../../../../../Users/alber/Desenv/projects/node/sgco-react/src/assets/images/exception/bxs-minus-circle.svg","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/_404.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/assets/images/preact.svg","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/Footer.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/utils.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/file-utils.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/dialogs/ProfileDialog.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/base-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/ip-address.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/services/auth.service.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/navbar/AppNavbar.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/sidebar/SidebarMenuItems.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/sidebar/AppSidebar.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/layouts/LayoutContext.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/layouts/DefaultLayout.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/dialogs/ErrorDialog.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/PhotoUploader/PhotoUploader.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/data-utils.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominos/utils/form-hooks.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/errors.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/condomino-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/file-upload-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/unidade-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominos/add.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominos/table/table-options.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominos/table/table.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominos/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/mensagens/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/Clock.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/dashboard/Dashboard.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominio/utils/form-hooks.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/condominio-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/endereco-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/valid-cnpj.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominio/add.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/components/EnderecoField.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominio/table/table-options.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominio/table/table.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/condominio/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/endereco/table/table-options.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/endereco/table/table.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/endereco/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/endereco/utils/form-hooks.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/cep-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/braziliam-ufs.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/endereco/add.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/unidades/utils/form-hooks.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/unidades/add.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/unidades/table/table-options.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/unidades/table/table.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/unidades/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/sindico/utils/form-hooks.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/sindico-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/sindico/add.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/sindico/table/table-options.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/sindico/table/table.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/sindico/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/assets/images/SGCO.2-transparente.png","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/auth/login.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/financeiro/table/table-options.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/financeiro-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/financeiro/table/base-table.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/financeiro/list.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/relatorios/financeiro/financeiro_report.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/libs/api/usuario-api.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/relatorios/condomino/condomino_report.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/pages/relatorios/unidade/unidade_report.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/App.tsx","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/reportWebVitals.ts","../../../../../Users/alber/Desenv/projects/node/sgco-react/src/main.tsx"],"sourcesContent":["export default \"__VITE_ASSET__599ef4b6__\"","import { Button } from \"primereact/button\";\n\nimport enotfoundimage from \"@/assets/images/exception/bxs-minus-circle.svg\";\nimport { useLocation } from \"wouter\";\n\nexport function NotFound404() {\n  const [location, navigate] = useLocation();\n\n  return (\n    <section>\n      <div className=\"exception-body notfound\">\n        <div className=\"exception-panel\" style={{ borderRadius: \"25px;\" }}>\n          <div className=\"exception-image\">\n            <img src={enotfoundimage} alt=\"Exception Icon\" />\n          </div>\n          <div className=\"exception-detail\">\n            <div className=\"text-center bg-gray-200\">\n              <span className=\"font-bold text-3xl inline-block px-3\">404</span>\n            </div>\n            <h1 className=\"pt-2\">PÁGINA NÃO ENCONTRADA</h1>\n            <p>{`Requested resource is not available. [${location}]`}</p>\n            <a\n              aria-label=\"GO TO DASHBOARD\"\n              onClick={() => {\n                navigate(\"/\", { replace: true });\n              }}\n            >\n              <Button\n                label=\"GO TO DASHBOARD\"\n                size={\"small\"}\n                icon=\"pi pi-replay\"\n                tabIndex={0}\n                // path='/'\n              ></Button>\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","export default \"__VITE_ASSET__bfacf6e8__\"","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport logo from \"assets/images/preact.svg\";\n\nexport function AppFooter() {\n  return (\n    <div className=\"layout-footer\">\n      <img src={logo} alt=\"Logo\" height=\"20\" className=\"mr-2\" />\n      <div>SGCO &copy; {new Date().getFullYear()}</div>\n      &nbsp; by\n      <span className=\"font-medium ml-2\">\n        <a\n          className=\"\"\n          href=\"https://github.com/alberto-paiva\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Alberto Paiva\n        </a>\n      </span>\n    </div>\n  );\n}\n","import dayjs from \"dayjs\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const BASE_URL = \"/sgco/app/\";\nexport const UPLOAD_BASE_URL = \"/sgco/uploads/\";\nexport const IMAGE_UPLOAD_BASE_URL = \"/sgco/uploads/images/\";\nexport const FILE_UPLOAD_BASE_URL = \"/sgco/uploads/archives/\";\n\n/**\n * Generate a random string\n *\n * @see https://dev.to/rahmanfadhil/how-to-generate-unique-id-in-javascript-1b13#comment-1ol48\n *\n */\nexport const randomString = () =>\n  String(Date.now().toString(32) + Math.random().toString(16)).replace(\n    /\\./g,\n    \"\",\n  );\n\nexport const sleep = (ms: number) =>\n  new Promise<void>((resolve) => setTimeout(resolve, ms));\n\nexport const formatDate = (value: string, format = \"YYYY-MM-DD\") => {\n  const parseValue = dayjs(value, [\n    \"DD/MM/YYYY\",\n    \"DDMMYYYY\",\n    \"DD-MM-YYYY\",\n    \"YYYY-MM-DD\",\n    \"YYYYMMDD\",\n    \"YYYY\",\n  ]);\n  return parseValue.format(format);\n};\n\nexport const validateFileSize = (file: File, maxFileSize?: number) => {\n  if (maxFileSize && file.size > maxFileSize) {\n    const message = {\n      severity: \"error\",\n      summary: `${file.name}: Tamanho inválido!`,\n      detail: `Máximo: ${formatSize(maxFileSize)}.`,\n    };\n    return { message, status: false };\n  }\n  return { message: null, status: true };\n};\n\nexport const getCurrentYear = () => String(new Date().getFullYear());\n\nexport const makeYearArray = (\n  startDate?: number,\n  steps?: number,\n  up?: boolean,\n) => {\n  return Array.from({ length: steps ?? 10 }, (_, i) =>\n    up\n      ? String(startDate ?? new Date().getFullYear() + i)\n      : String(startDate ?? new Date().getFullYear() - i),\n  );\n};\n\nexport const formatSize = (bytes: number): string => {\n  if (bytes === 0) {\n    return \"0 B\";\n  }\n\n  const i = bytes === 0 ? 0 : Math.floor(Math.log(bytes) / Math.log(1024));\n  const value = Number(bytes / Math.pow(1024, i)).toFixed(2);\n  return value + \" \" + [\"B\", \"kB\", \"MB\", \"GB\", \"TB\", \"P\", \"E\", \"Z\", \"Y\"][i];\n};\n\nexport function isValidCPF(cpf: string): boolean {\n  cpf = cpf.replace(/\\D+/g, \"\");\n\n  if (cpf.length !== 11 || !!cpf.match(/(\\d)\\1{10}/)) return false;\n\n  const _cpf = cpf.split(\"\").map((el) => +el);\n\n  const rest = (count: number): number => {\n    return (\n      ((_cpf\n        .slice(0, count - 12)\n        .reduce(\n          (soma: number, el: number, index: number) =>\n            soma + el * (count - index),\n          0,\n        ) *\n        10) %\n        11) %\n      10\n    );\n  };\n\n  return rest(10) === _cpf[9] && rest(11) === _cpf[10];\n}\n\nexport const lengthString = (value: string) =>\n  value.replace(/[_\\-()]/g, \"\").length;\n\nexport function generateUUID(): string {\n  return uuidv4();\n}\n\nexport function formatCEP(cep?: string): string {\n  if (cep && cep.length === 8) {\n    // Formatação do CEP: 99999-99. Retorna o valor formatado\n    cep = cep.replace(/(\\d{5})(\\d{3})/, \"$1-$2\");\n  }\n\n  return cep ?? \"\";\n}\n\nexport function capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function capitalizeAll(str: string) {\n  const arr = str.split(\" \");\n\n  // loop through each element of the array and capitalize the first letter.\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n  }\n  // Join all the elements of the array back into a string using a blankspace as a separator\n  return arr.join(\" \");\n}\n\nexport const formatBrazilianCurrency = (value: number) => {\n  return value.toLocaleString(\"pt-BR\", {\n    style: \"currency\",\n    currency: \"BRL\",\n  });\n};\n","import { IMAGE_UPLOAD_BASE_URL } from \"libs/utils.ts\";\n\n/**\n * Check if image exists in server\n *\n * @see https://stackoverflow.com/a/18837750\n *\n */\nexport function fileExistsOnServer(imageUrl?: string | URL) {\n  if (!imageUrl) return false;\n\n  const http = new XMLHttpRequest();\n\n  http.open(\"HEAD\", imageUrl, false);\n  http.send();\n\n  return http.status !== 404;\n}\n\nexport async function createFileFromUrl(url: string): Promise<File> {\n  const response = await fetch(url);\n  const data = await response.blob();\n  const metadata = { type: data.type };\n  const filename = url.replace(/\\?.+/, \"\").split(\"/\").pop() ?? \"unknown\";\n  return new File([data], filename, metadata);\n}\n\nexport const downloadFile = ({\n  data,\n  fileName,\n  fileType,\n}: {\n  data: string;\n  fileName: string;\n  fileType: string;\n}): void => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  const clickEvt = new MouseEvent(\"click\", {\n    view: window,\n    bubbles: true,\n    cancelable: true,\n  });\n  a.dispatchEvent(clickEvt);\n  a.remove();\n};\n\n// export interface ImageFromServerProps {\n//   imageName: string;\n//   uuid: string;\n// }\nexport function getImageUrlOnServer(\n  imageName?: string,\n  uuid?: string,\n): string | undefined {\n  if (imageName && uuid) {\n    const imageUrl = `${IMAGE_UPLOAD_BASE_URL}${uuid}/${imageName}`;\n\n    if (fileExistsOnServer(imageUrl)) {\n      return imageUrl;\n    } else {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { Button } from \"primereact/button\";\nimport { Dialog } from \"primereact/dialog\";\nimport { classNames, UniqueComponentId } from \"primereact/utils\";\nimport { type ReactNode, useState } from \"react\";\nimport { Avatar } from \"primereact/avatar\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { formatDate } from \"libs/utils.ts\";\nimport { useMountEffect } from \"primereact/hooks\";\nimport { InputText } from \"primereact/inputtext\";\nimport { getImageUrlOnServer } from \"libs/file-utils.ts\";\n\ninterface ProfileDialogProps {\n  title?: string;\n  content?: ReactNode;\n  visible: boolean;\n  setVisible: (value: boolean) => void;\n  loggedUser?: UsuarioData;\n}\n\nexport default function ProfileDialog({\n  title = \"Perfil\",\n  content,\n  visible,\n  setVisible,\n  loggedUser,\n}: ProfileDialogProps) {\n  const [usuario, setUsuario] = useState<UsuarioData>();\n  const id = UniqueComponentId();\n\n  useMountEffect(() => {\n    setUsuario(loggedUser);\n  });\n\n  const header = (\n    <>\n      {/* CATEGORIA */}\n      <div>\n        <span style={{ margin: \"0.5rem\" }}>{title}</span>{\" \"}\n        {usuario?.tipo === \"C\"\n          ? \"Condômino\"\n          : usuario?.tipo === \"S\"\n          ? \"Síndico\"\n          : usuario?.tipo === \"P\"\n          ? \"Profissional\"\n          : usuario?.tipo === \"A\"\n          ? \"Administrador\"\n          : \"\"}\n      </div>\n      <hr />\n      {/* NOME TEMPLATE */}\n      <div className=\"flex align-items-center gap-2\">\n        {/* IMAGE */}\n        <div>\n          <Avatar\n            // imageAlt={rowData.nome}\n            image={\n              usuario?.imagemPerfil &&\n              getImageUrlOnServer(usuario?.imagemPerfil, usuario?.uuid)\n            }\n            imageAlt=\"Avatar\"\n            className=\"text-blue-700 p-mr-2\"\n            style={{\n              verticalAlign: \"middle\",\n              fontSize: \"1.5rem\",\n              margin: \"0.5rem\",\n            }}\n            size=\"xlarge\"\n            shape=\"circle\"\n            icon=\"pi pi-user\"\n            pt={{ image: { width: 32 } }}\n          />\n        </div>\n        <div>\n          {/* NOME */}\n          <div>\n            <span style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}>\n              Nome: {usuario?.nome}\n            </span>\n          </div>\n          {/* EMAIL */}\n          <div>\n            <span\n              className=\"text-color-secondary text-sm\"\n              style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n            >\n              E-mail: {usuario?.email}\n            </span>\n          </div>\n        </div>\n      </div>\n      <hr />\n      {/* CPF */}\n      <div>\n        CPF:{\"  \"}\n        <InputMask\n          id=\"cpf\"\n          mask=\"999.999.999-99\"\n          placeholder=\"000.000.000-00\"\n          value={usuario?.cpf}\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputMask>\n      </div>\n      <hr />\n      {/* CONTATO */}\n      <div>\n        Contato:{\" \"}\n        <InputMask\n          id=\"telefone\"\n          mask={\n            usuario?.contato.length === 11 ? \"(99)99999-9999\" : \"(99)9999-9999\"\n          }\n          placeholder=\"(00)00000-0000\"\n          value={usuario?.contato}\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputMask>\n      </div>\n      <hr />\n      {/* STATUS */}\n      <div>\n        {usuario?.tipo === \"C\" ? \"Proprietário: \" : \"\"}\n        {usuario?.tipo === \"C\" && (\n          <i\n            className={classNames(\"pi\", {\n              \"text-green-500 pi-check-circle\": usuario?.proprietario,\n              \"text-pink-500 pi-times-circle\": !usuario?.proprietario,\n            })}\n          ></i>\n        )}\n        Ativo:{\" \"}\n        <i\n          className={classNames(\"pi\", {\n            \"text-green-500 pi-check-circle\": usuario?.ativo,\n            \"text-pink-500 pi-times-circle\": !usuario?.ativo,\n          })}\n        ></i>\n      </div>\n      <hr />\n      {/* ENTRADA/SAIDA */}\n      <div>\n        Data entrada:{\" \"}\n        <InputMask\n          id=\"telefone\"\n          mask={\"99/99/9999\"}\n          placeholder=\"00/00/0000\"\n          value={\n            usuario?.dataEntrada\n              ? formatDate(usuario?.dataEntrada, \"DD/MM/YYYY\")\n              : undefined\n          }\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputMask>\n        {/* {usuario?.dataEntrada ? formatDate(usuario?.dataEntrada) : undefined} */}\n      </div>\n      <hr />\n      <div>\n        Data saída:{\" \"}\n        <InputMask\n          id=\"telefone\"\n          mask={\"99/99/9999\"}\n          placeholder=\"00/00/0000\"\n          value={\n            usuario?.dataSaida\n              ? formatDate(usuario?.dataSaida, \"DD/MM/YYYY\")\n              : undefined\n          }\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputMask>\n        {/* {usuario?.dataSaida ? formatDate(usuario?.dataSaida) : undefined} */}\n      </div>\n      <hr />\n      {/* OBSERVACAO */}\n      <div>\n        Observacao:{\" \"}\n        <InputText\n          type=\"text\"\n          value={usuario?.observacao}\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputText>\n        {/* {usuario?.observacao} */}\n      </div>\n      <hr />\n    </>\n  );\n\n  const body = (\n    <>\n      <>\n        <hr />\n        {content}\n        <span\n          className=\"text-color-secondary text-xs\"\n          style={{ verticalAlign: \"middle\" }}\n        >\n          Last IP: {usuario?.lastIP} | Last Login:{\" \"}\n          {loggedUser?.lastLogin &&\n            new Date(+loggedUser?.lastLogin).toLocaleString()}\n        </span>\n        <br />\n        {/* ID */}\n        <span\n          className=\"text-color-secondary text-xs\"\n          style={{ verticalAlign: \"middle\" }}\n        >\n          IDX: [ {usuario?.id}/{usuario?.uuid}/T: {usuario?.tipo?.toUpperCase()}{\" \"}\n          ]\n        </span>\n      </>\n    </>\n  );\n\n  const footerContent = (\n    <>\n      <hr />\n      <Button\n        label={\"Fechar\"}\n        icon=\"pi pi-times\"\n        onClick={() => {\n          setVisible(false);\n        }}\n        severity=\"danger\"\n        className=\"align-left mr-4\"\n        pt={{\n          root: { style: { margin: \"0\" } },\n        }}\n        size=\"small\"\n        raised\n      />\n\n      <Button\n        label={\"Salvar\"}\n        icon=\"pi pi-check\"\n        onClick={() => {\n          setVisible(false);\n        }}\n        className=\"align-right\"\n        size=\"small\"\n        raised\n        autoFocus\n      />\n    </>\n  );\n\n  return (\n    <div className=\"card flex justify-content-center\">\n      <Dialog\n        id={id}\n        header={header}\n        visible={visible}\n        onHide={() => {\n          setVisible(false);\n        }}\n        footer={footerContent}\n        contentStyle={{ width: \"auto\", padding: \"0 1.5rem\" }}\n        headerStyle={{ width: \"auto\", padding: \"1.5rem 1.5rem 0rem\" }}\n        // style={{ width: '50vw' }}\n        // breakpoints={{ '960px': '75vw', '641px': '100vw' }}\n      >\n        <p className=\"m-0\">{body}</p>\n      </Dialog>\n    </div>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport axios, {\n  type AxiosInstance,\n  type AxiosRequestConfig,\n  type AxiosResponseTransformer,\n} from \"axios\";\n\nexport const baseUrl = \"http://localhost/sgco\";\nexport const baseApi = \"/api.php/records\";\n\n// Default JSON Transformer for request data\nconst customTransformRequest: AxiosResponseTransformer = (\n  reqData,\n  reqHeaders,\n) => {\n  if (reqData) {\n    reqHeaders[\"Content-Type\"] = \"application/json\";\n    return JSON.stringify(reqData);\n  }\n  return reqData;\n};\n\nconst baseConfig: Partial<AxiosRequestConfig> = {\n  method: \"GET\",\n  maxBodyLength: Infinity,\n  baseURL: baseUrl,\n  headers: { \"content-type\": \"application/octet-stream\" },\n  responseType: \"json\",\n  transformRequest: [customTransformRequest],\n  transformResponse: [\n    (response) => {\n      const hasRecordsKey = Object.prototype.hasOwnProperty.call(\n        JSON.parse(response),\n        \"records\",\n      );\n      return hasRecordsKey\n        ? JSON.parse(response).records\n        : JSON.parse(response);\n    },\n  ],\n};\n\nexport const apiInstance: AxiosInstance = axios.create(baseConfig);\n","import axios from \"axios\";\n\n// Define an interface for the response from the ipify API\ninterface IPAddressResponse {\n  ip: string;\n}\n\ninterface GetUserIPProps {\n  format?: \"text\" | \"json\" | \"jsonp\" | \"getip\";\n  protocol?: \"ipv4\" | \"ipv6\";\n  callback?: string;\n}\n\n// Function to get the user's public IP address\nexport async function getUserIP(\n  props?: GetUserIPProps,\n): Promise<string | IPAddressResponse> {\n  try {\n    const ipifyIpv4URL = \"https://api.ipify.org\";\n    const ipifyIpv64URL = \"https://api64.ipify.org\";\n\n    // Set the request format and callback if specified\n    const params: Record<string, string> = {};\n\n    // If the format is specified, add it to the parameters\n    if (props?.format) {\n      params.format = props?.format;\n    }\n\n    // If a callback is specified for JSONP, add it to the parameters\n    if (props?.callback && props?.format === \"jsonp\") {\n      params.callback = props?.callback;\n    }\n\n    if (props?.format === \"getip\") {\n      params.format = \"jsonp\";\n      params.callback = \"getip\";\n    }\n\n    const url = props?.protocol === \"ipv6\" ? ipifyIpv64URL : ipifyIpv4URL;\n\n    const response = await axios.get<IPAddressResponse>(url, {\n      params,\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\n// Usage examples\nexport const testeGetIP = async () => {\n  try {\n    const plainTextIP = await getUserIP({ protocol: \"ipv6\" });\n    console.log(\"Plain Text IP (IPV6:\", plainTextIP);\n\n    const jsonIP = await getUserIP({ format: \"json\" });\n    console.log(\"JSON IP:\", jsonIP);\n\n    const jsonpIP = await getUserIP({\n      format: \"jsonp\",\n      protocol: \"ipv4\",\n    });\n    console.log(\"JSONP IP:\", jsonpIP);\n\n    const jsonpIPCustomCallback = await getUserIP({\n      format: \"jsonp\",\n      protocol: \"ipv4\",\n      callback: \"myCallBack\",\n    });\n    console.log(\"JSONP IP Custom Callback:\", jsonpIPCustomCallback);\n\n    const jsonpGet = await getUserIP({ format: \"getip\" });\n    console.log(\"JSONP GETIP:\", jsonpGet);\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n};\n","import { baseUrl } from \"libs/api/base-api.ts\";\nimport { getUserIP } from \"libs/api/ip-address.ts\";\nimport jscrudapi from \"js-crud-api\";\n\nexport const API_URL = `${baseUrl}/api.php`;\n\nconst jca = jscrudapi<UsuarioData>(API_URL);\n\n// const config={ headers : { 'X-API-Key':'afancyapikey' }}\n// const jca=jscrudapi(api_url, config);const config={ headers : { 'X-API-Key':'afancyapikey' }}\n// const jca=jscrudapi(api_url, config);\n\nexport enum UsuarioField {\n  Id,\n  NomeUsuario,\n  Senha,\n  Tipo,\n  Ativo,\n  IdPessoa,\n  //\n  LastIP,\n  LastLogin,\n  //\n  IdTable2,\n  Uuid,\n  Nome,\n  Email,\n  CPF,\n  Contato,\n  DataEntrada,\n  DataSaida,\n  ImagemPerfil,\n  Observacao,\n  Proprietario,\n  PessoaAtiva,\n  //\n  IdUnidade,\n  Bloco,\n  Numero,\n  ObservacaoUnidade,\n  //\n  IdCondominio,\n  NomeCondominio,\n}\n\nclass AuthService {\n  public readonly USER_KEY = \"yuploggeduser\";\n  private userip: unknown;\n\n  async login(username: string, password: string) {\n    try {\n      const result = await jca.login(username, password);\n      let fullUser = null;\n      this.userip = await getUserIP();\n\n      const userActivated = result?.ativo;\n\n      if (result && userActivated && !(await this.isValidLoginTime())) {\n        await jca.update(\"usuario\", result.id, {\n          lastLogin: Date.now().toString(),\n          lastIP: this.userip,\n        });\n      }\n\n      if (result) {\n        fullUser = await jca.read(\n          result.tipo === \"C\"\n            ? \"usuarioscondominos\"\n            : result.tipo === \"S\"\n            ? \"usuariossindicos\"\n            : \"\",\n          result.id,\n        );\n      }\n\n      localStorage.setItem(this.USER_KEY, JSON.stringify(fullUser));\n\n      return result?.id && userActivated && fullUser;\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return false;\n    }\n  }\n\n  async logout() {\n    try {\n      return jca.logout();\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return error;\n    } finally {\n      localStorage.removeItem(this.USER_KEY);\n    }\n  }\n\n  async register(username: string, password: string) {\n    try {\n      return jca.register(username, password);\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return error;\n    }\n  }\n\n  getCurrentUser() {\n    try {\n      const userStr = localStorage.getItem(this.USER_KEY);\n      if (userStr) return JSON.parse(userStr);\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return null;\n    }\n  }\n\n  getCurrentUserField(userField: UsuarioField) {\n    try {\n      const userLogged: UsuarioData | null = this.getCurrentUser();\n      switch (userField) {\n        case UsuarioField.Id:\n          return userLogged?.id;\n        case UsuarioField.NomeUsuario:\n          return userLogged?.nomeusuario;\n        case UsuarioField.Senha:\n          return \"\";\n        case UsuarioField.Tipo:\n          return userLogged?.tipo;\n        case UsuarioField.IdPessoa:\n          return userLogged?.idPessoa;\n        case UsuarioField.LastIP:\n          return userLogged?.lastIP;\n        case UsuarioField.LastLogin:\n          return userLogged?.lastLogin;\n        case UsuarioField.IdTable2:\n          return userLogged?.idTable2;\n        case UsuarioField.Uuid:\n          return userLogged?.uuid;\n        case UsuarioField.Nome:\n          return userLogged?.nome;\n        case UsuarioField.Email:\n          return userLogged?.email;\n        case UsuarioField.CPF:\n          return userLogged?.cpf;\n        case UsuarioField.Contato:\n          return userLogged?.contato;\n        case UsuarioField.DataEntrada:\n          return userLogged?.dataEntrada;\n        case UsuarioField.DataSaida:\n          return userLogged?.dataSaida;\n        case UsuarioField.ImagemPerfil:\n          return userLogged?.imagemPerfil;\n        case UsuarioField.Observacao:\n          return userLogged?.observacao;\n        case UsuarioField.Proprietario:\n          return userLogged?.proprietario;\n        case UsuarioField.PessoaAtiva:\n          return userLogged?.pessoaAtiva;\n        case UsuarioField.IdUnidade:\n          return userLogged?.idUnidade;\n        case UsuarioField.Bloco:\n          return userLogged?.bloco;\n        case UsuarioField.Numero:\n          return userLogged?.numero;\n        case UsuarioField.ObservacaoUnidade:\n          return userLogged?.observacaoUnidade;\n        case UsuarioField.IdCondominio:\n          return userLogged?.idCondominio;\n        case UsuarioField.NomeCondominio:\n          return userLogged?.nomeCondominio;\n        case UsuarioField.Ativo:\n          return userLogged?.ativo;\n        default:\n          return null;\n      }\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return null;\n    }\n  }\n\n  getCurrentUserRole() {\n    try {\n      const userStr = localStorage.getItem(this.USER_KEY);\n      let userRole: UsuarioData | null = null;\n      if (userStr) userRole = JSON.parse(userStr);\n      return userRole?.tipo;\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return null;\n    }\n  }\n\n  userIsCondomino() {\n    try {\n      return this.getCurrentUserRole() === \"C\";\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return false;\n    }\n  }\n\n  async getCurrentFullUser() {\n    try {\n      const result = await jca.read(\"usuario\", this.getCurrentUser().id);\n\n      const isUserActivated = result?.ativo;\n\n      if (result && isUserActivated && !(await this.isValidLoginTime())) {\n        return result;\n      }\n      return null;\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return error;\n    }\n  }\n\n  async isValidLoginTime() {\n    let valid = false;\n    try {\n      const loggedUser = this.getCurrentUser();\n      if (loggedUser) {\n        const timestampFromServer = new Date(+loggedUser.lastLogin).setUTCHours(\n          0,\n          0,\n          0,\n          0,\n        );\n        const actualTimestamp = new Date(Date.now()).setUTCHours(0, 0, 0, 0);\n\n        valid =\n          timestampFromServer === actualTimestamp &&\n          loggedUser.lastIP === (await getUserIP());\n      }\n\n      return valid;\n    } catch (error) {\n      console.log(JSON.stringify(error));\n      return valid;\n    }\n  }\n}\n\nexport default new AuthService();\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { sleep } from \"@/libs/utils\";\nimport logo from \"assets/images/preact.svg\";\nimport ProfileDialog from \"components/dialogs/ProfileDialog.tsx\";\nimport { Button } from \"primereact/button\";\nimport { Menu } from \"primereact/menu\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { type MenuItem } from \"primereact/menuitem\";\nimport { Avatar } from \"primereact/avatar\";\nimport { getImageUrlOnServer } from \"libs/file-utils.ts\";\n\ninterface AppNavbarProps {\n  title?: string;\n  profileSidebarVisible?: boolean;\n  onMenuToggle: () => void;\n  showProfileSidebar: () => void;\n  loggedUser?: UsuarioData;\n}\n\nexport function AppNavbar({\n  title = \"SGCO\",\n  profileSidebarVisible,\n  onMenuToggle,\n  showProfileSidebar,\n  loggedUser,\n}: AppNavbarProps) {\n  const [usuario, setUsuario] = useState<UsuarioData>();\n  const [showProfile, setShowProfile] = useState<boolean>(false);\n  // const [showConfig, setShowConfig] = useState<boolean>(false);\n  const [, navigate] = useLocation();\n\n  const settingsMenuRef = useRef<Menu>(null);\n\n  useEffect(() => {\n    if (loggedUser) {\n      setUsuario(loggedUser);\n    }\n  }, [loggedUser]);\n\n  const toggleSettingsMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    settingsMenuRef.current?.toggle(event);\n  };\n\n  const settingsMenuItems: MenuItem[] = [\n    {\n      label: \"Opções\",\n      template: (_item, _options) => {\n        return (\n          <div className=\"flex align-items-center gap-2\">\n            {/* IMAGE */}\n            <div>\n              <Avatar\n                // imageAlt={rowData.nome}\n                image={\n                  usuario?.imagemPerfil &&\n                  getImageUrlOnServer(usuario?.imagemPerfil, usuario?.uuid)\n                }\n                imageAlt=\"Avatar\"\n                className=\"text-blue-700 p-mr-2\"\n                style={{\n                  verticalAlign: \"middle\",\n                  fontSize: \"1.5rem\",\n                  margin: \"0.5rem\",\n                }}\n                size=\"normal\"\n                shape=\"circle\"\n                icon=\"pi pi-user\"\n                pt={{ image: { width: 32 } }}\n              />\n            </div>\n            <div>\n              {/* NOME */}\n              <div>\n                <span\n                  className=\"text-color-secondary text-xs\"\n                  style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n                >\n                  {usuario?.nome}\n                </span>\n              </div>\n              {/* EMAIL */}\n              <div>\n                <span\n                  className=\"text-color-secondary text-xs\"\n                  style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n                >\n                  {usuario?.email}\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n      },\n    },\n    {\n      separator: true,\n    },\n    {\n      label: \"Perfil\",\n      icon: \"pi pi-user\",\n      command: () => {\n        setShowProfile((prev) => !prev);\n      },\n    },\n    {\n      separator: true,\n    },\n    {\n      label: \"Sair\",\n      icon: \"pi pi-sign-out\",\n      command: () => {\n        AuthService.logout().then(() => {\n          sleep(500).then(() => {\n            navigate(\"/login\", { replace: true });\n          });\n        });\n      },\n    },\n  ];\n\n  return (\n    <div className=\"layout-topbar\">\n      <a\n        className=\"layout-topbar-logo\"\n        onClick={() => {\n          navigate(\"/\", { replace: true });\n        }}\n      >\n        <img src={logo} width=\"47.22px\" height=\"35px\" alt=\"logo\" />\n        <span>{title}</span>\n      </a>\n\n      <Button\n        type=\"button\"\n        icon={\"pi pi-bars\"}\n        rounded\n        text\n        raised\n        pt={{\n          root: { style: { fontSize: \"0.75rem\", margin: \"0.4rem\" } },\n        }}\n        // className=\"p-link layout-menu-button layout-topbar-button\"\n        onClick={onMenuToggle}\n      ></Button>\n      <Button\n        type=\"button\"\n        icon={\"pi pi-ellipsis-v\"}\n        rounded\n        text\n        raised\n        pt={{\n          root: { style: { fontSize: \"0.75rem\", margin: \"0.4rem\" } },\n        }}\n        aria-label={\"Profile\"}\n        className=\"layout-topbar-menu-button\"\n        onClick={() => {\n          showProfileSidebar();\n          setShowProfile((prev) => !prev);\n        }}\n      ></Button>\n      <div\n        className={classNames(\"layout-topbar-menu\", {\n          \"layout-topbar-menu-mobile-active\": profileSidebarVisible,\n        })}\n      >\n        <Button\n          type=\"button\"\n          icon={\"pi pi-calendar\"}\n          rounded\n          text\n          raised\n          pt={{\n            root: { style: { fontSize: \"0.75rem\", margin: \"0.4rem\" } },\n          }}\n          aria-label={\"Calendar\"}\n          // className=\"p-link layout-topbar-button\"\n        ></Button>\n        <Menu ref={settingsMenuRef} model={settingsMenuItems} popup />\n        <Button\n          type=\"button\"\n          // label=\"Options\"\n          icon=\"pi pi-cog\"\n          rounded\n          text\n          raised\n          pt={{\n            root: { style: { fontSize: \"0.75rem\", margin: \"0.4rem\" } },\n          }}\n          aria-label={\"Settings\"}\n          onClick={toggleSettingsMenu}\n        />\n      </div>\n      {showProfile && (\n        <ProfileDialog\n          title=\"Perfil\"\n          content={<pre>Informações do Usuário</pre>}\n          visible={showProfile}\n          setVisible={(prev) => {\n            setShowProfile(prev);\n          }}\n          loggedUser={usuario}\n        />\n      )}\n    </div>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport AuthService from \"@/services/auth.service.ts\";\n\ninterface CommandProps {\n  originalEvent: MouseEvent;\n  item: MenuItemModel;\n}\n\nexport interface MenuItemModel {\n  label?: string;\n  href?: string;\n  target?: never;\n  icon?: string;\n  separator?: boolean;\n  items?: MenuItemModel[];\n  subItems?: MenuItemModel[];\n  className?: string;\n  visible: boolean;\n  disabled?: boolean;\n  root?: boolean;\n  onMenuButtonClick?: ({ originalEvent, item }: CommandProps) => void;\n}\n\nconst isVisible = !AuthService.userIsCondomino();\n\nexport const defaultItems: MenuItemModel[] = [\n  {\n    // label: 'Início',\n    root: true,\n    visible: true,\n    items: [\n      {\n        label: \"Dashboard\",\n        icon: \"pi pi-fw pi-th-large\",\n        href: `/`,\n        visible: true,\n      },\n    ],\n  },\n  { separator: true, visible: true },\n  {\n    // label: 'Administração',\n    root: true,\n    visible: true,\n    items: [\n      {\n        label: \"Condôminos\",\n        icon: \"pi pi-fw pi-users\",\n        href: `/condominos/list`,\n        visible: true,\n      },\n      {\n        label: \"Condôminios\",\n        icon: \"pi pi-fw pi-building\",\n        href: `/condominios/list`,\n        visible: true,\n      },\n      {\n        label: \"Síndicos\",\n        icon: \"pi pi-fw pi-eye\",\n        href: `/sindicos/list`,\n        visible: true,\n      },\n      {\n        label: \"Endereços\",\n        icon: \"pi pi-fw pi-book\",\n        href: `/enderecos/list`,\n        visible: isVisible,\n      },\n      {\n        label: \"Apartamentos\",\n        icon: \"pi pi-fw pi-table\",\n        href: `/unidades/list`,\n        visible: isVisible,\n      },\n      // {\n      //   label: \"Mensagens\",\n      //   icon: \"pi pi-fw pi-comment\",\n      //   href: `/mensagens/list`,\n      //   visible: true,\n      // },\n      {\n        label: \"Financeiro\",\n        icon: \"pi pi-fw pi-dollar\",\n        visible: true,\n        subItems: [\n          {\n            label: \"Receitas\",\n            icon: \"pi pi-fw pi-arrow-circle-up\",\n            href: `/receitas/list`,\n            visible: isVisible,\n          },\n          {\n            label: \"Despesas\",\n            icon: \"pi pi-fw pi-arrow-circle-down\",\n            href: `/despesas/list`,\n            visible: isVisible,\n          },\n          {\n            label: \"Mensalidades\",\n            icon: \"pi pi-fw pi-credit-card\",\n            href: `/mensalidades/list`,\n            visible: !isVisible,\n          },\n        ],\n      },\n      {\n        label: \"Relatórios\",\n        icon: \"pi pi-fw pi-chart-bar\",\n        visible: true,\n        subItems: [\n          {\n            label: \"Condôminos\",\n            icon: \"pi pi-fw pi-user\",\n            href: `/relatorios/condominos`,\n            visible: isVisible,\n          },\n          {\n            label: \"Unidades\",\n            icon: \"pi pi-fw pi-home\",\n            href: `/relatorios/unidades`,\n            visible: isVisible,\n          },\n          {\n            label: \"Financeiro\",\n            icon: \"pi pi-fw pi-sort-numeric-up\",\n            href: `/relatorios/financeiro`,\n            visible: true,\n          },\n        ],\n      },\n    ],\n  },\n  { separator: true, visible: true },\n];\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { Ripple } from \"primereact/ripple\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useLocation } from \"wouter\";\nimport { defaultItems, type MenuItemModel } from \"./SidebarMenuItems.tsx\";\n\ninterface AppSidebarProps {\n  loggedUser?: UsuarioData;\n}\nexport function AppSidebar({ loggedUser }: AppSidebarProps) {\n  const [_user, setUser] = useState<UsuarioData>();\n  const [currentPage, setCurrentPage] = useState(\"\");\n  const [currentKey, setCurrentKey] = useState(\"\");\n  const [location, navigate] = useLocation();\n\n  const activeCurrentPage = (href?: string): boolean => href === currentPage;\n\n  const itemClick = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    item: MenuItemModel,\n    key: never | string,\n  ) => {\n    // toggle active menu item\n    setCurrentKey(currentKey === key ? \"\" : key);\n\n    // avoid processing disabled items\n    if (item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (item.onMenuButtonClick) {\n      item.onMenuButtonClick({ originalEvent: event.nativeEvent, item });\n    }\n  };\n\n  const onLinkClick = (\n    e: React.MouseEvent<HTMLAnchorElement>,\n    item: MenuItemModel,\n    key: never | string,\n    to: string,\n  ) => {\n    itemClick(e, item, key);\n    navigate(to, { replace: false });\n  };\n\n  useEffect(() => {\n    setCurrentPage(location);\n  }, [setCurrentPage, setCurrentKey, location]);\n\n  useEffect(() => {\n    if (loggedUser) {\n      setUser(loggedUser);\n    }\n  }, [loggedUser]);\n\n  function renderItem(item: MenuItemModel, key: never | string) {\n    const classes = classNames(item.className, \"p-ripple\", {\n      \"active-route\": activeCurrentPage(item.href),\n    });\n\n    const link = (\n      <>\n        <a\n          onClick={(e: React.MouseEvent<HTMLAnchorElement>) => {\n            onLinkClick(e, item, key, item.href ?? location);\n          }}\n          className={classNames(classes)}\n          target={item.target}\n          tabIndex={0}\n        >\n          <i className={classNames(\"layout-menuitem-icon\", item.icon)}></i>\n          <span className=\"layout-menuitem-text\">{item.label}</span>\n          {item.subItems && (\n            <i className=\"pi pi-fw pi-angle-down layout-submenu-toggler\"></i>\n          )}\n          <Ripple />\n        </a>\n      </>\n    );\n\n    return item.visible ? link : null;\n  }\n\n  return (\n    <>\n      <ul className=\"layout-menu\">\n        {defaultItems.map((item, i) => {\n          return item.separator ? (\n            <li key={i} className={\"menu-separator\"}></li>\n          ) : (\n            <li\n              key={i}\n              className={classNames({\n                \"layout-root-menuitem\": item.root,\n                \"active-menuitem\": activeCurrentPage(item.href),\n              })}\n            >\n              {/* MENU HEADERS */}\n              {item.root && item.visible && (\n                <div className=\"text-center\">\n                  <span className=\"layout-menuitem-root-text\">\n                    {item.label}\n                  </span>\n                </div>\n              )}\n              {item.items && item.visible && (\n                <ul>\n                  {item.items?.map((child, cKey) => {\n                    return (\n                      <li key={`${cKey}-${child.label}`}>\n                        {renderItem(child, `${cKey}-${child.label}`)}\n                        {child.subItems && child.visible && (\n                          <div>\n                            <CSSTransition\n                              timeout={{ enter: 1000, exit: 450 }}\n                              classNames=\"layout-submenu\"\n                              in={currentKey.includes(`${cKey}-${child.label}`)}\n                              key={child.label}\n                            >\n                              <ul>\n                                {child.subItems?.map((subItem, sKey) => {\n                                  return (\n                                    <li key={`${sKey}-${subItem.label}`}>\n                                      {renderItem(\n                                        subItem,\n                                        `${sKey}-${subItem.label}`,\n                                      )}\n                                    </li>\n                                  );\n                                })}\n                              </ul>\n                            </CSSTransition>\n                          </div>\n                        )}\n                      </li>\n                    );\n                  })}\n                </ul>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nexport interface LayoutConfig {\n  ripple: boolean;\n  inputStyle: \"outlined\" | \"filled\";\n  menuMode: \"static\" | \"overlay\" | \"popup\";\n  colorScheme: \"light\" | \"dark\";\n  theme:\n    | \"lara-light-indigo\"\n    | \"lara-dark-indigo\"\n    | \"lara-light-pink\"\n    | \"lara-dark-pink\";\n  scale: number;\n}\n\nexport interface LayoutState {\n  overlayMenuActive: boolean;\n  profileSidebarVisible: boolean;\n  configSidebarVisible: boolean;\n  staticMenuDesktopInactive: boolean;\n  staticMenuMobileActive: boolean;\n  menuHoverActive: boolean;\n}\n\nexport const initialLayoutConfig: LayoutConfig = {\n  ripple: false,\n  inputStyle: \"outlined\",\n  menuMode: \"static\",\n  colorScheme: \"light\",\n  theme: \"lara-light-indigo\",\n  scale: 14,\n};\n\nexport const initialLayoutState: LayoutState = {\n  overlayMenuActive: false,\n  profileSidebarVisible: false,\n  configSidebarVisible: false,\n  staticMenuDesktopInactive: false,\n  staticMenuMobileActive: false,\n  menuHoverActive: false,\n};\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { AppFooter } from \"components/Footer.tsx\";\nimport { AppNavbar } from \"components/navbar/AppNavbar.tsx\";\nimport { AppSidebar } from \"components/sidebar/AppSidebar.tsx\";\nimport { useEventListener, useUnmountEffect } from \"primereact/hooks\";\nimport { classNames } from \"primereact/utils\";\nimport { type ReactNode, useEffect, useState } from \"react\";\nimport {\n  initialLayoutConfig,\n  initialLayoutState,\n  type LayoutConfig,\n  type LayoutState,\n} from \"./LayoutContext\";\nimport AuthService from \"@/services/auth.service.ts\";\n\ninterface DefaultLayoutProps {\n  title?: string;\n  children?: ReactNode;\n}\n\nexport function DefaultLayout({ title, children }: DefaultLayoutProps) {\n  const [layoutConfig, setLayoutConfig] =\n    useState<LayoutConfig>(initialLayoutConfig);\n  const [layoutState, setLayoutState] =\n    useState<LayoutState>(initialLayoutState);\n  const [loggedUser, setLoggedUser] = useState<UsuarioData>();\n\n  const isDesktop = () => window.innerWidth > 991;\n  const isOverlay = () => layoutConfig.menuMode === \"overlay\";\n\n  const toggleMenu = () => {\n    setLayoutState((prevLayoutState) => {\n      const overlayMenuActive = isOverlay()\n        ? !prevLayoutState.overlayMenuActive\n        : false;\n      const staticMenuDesktopInactive = isDesktop()\n        ? !prevLayoutState.staticMenuDesktopInactive\n        : false;\n      const staticMenuMobileActive = !isDesktop()\n        ? !prevLayoutState.staticMenuMobileActive\n        : false;\n\n      return {\n        ...prevLayoutState,\n        overlayMenuActive,\n        staticMenuDesktopInactive,\n        staticMenuMobileActive,\n      };\n    });\n  };\n\n  const profileSidebarToggle = () => {\n    setLayoutConfig((prev) => prev);\n\n    const changeProfileState = () => {\n      const profileSidebarActive = layoutState.profileSidebarVisible;\n      setLayoutState({\n        ...layoutState,\n        profileSidebarVisible: !profileSidebarActive,\n      });\n    };\n\n    changeProfileState();\n  };\n\n  const blockBodyScroll = () => {\n    document.body.classList.add(\"blocked-scroll\");\n  };\n  const unblockBodyScroll = () => {\n    document.body.classList.remove(\"blocked-scroll\");\n  };\n\n  const hideMenu = () => {\n    setLayoutState((prevLayoutState: LayoutState) => ({\n      ...prevLayoutState,\n      overlayMenuActive: false,\n      staticMenuMobileActive: false,\n      menuHoverActive: false,\n    }));\n    unbindMenuOutsideClickListener();\n    unblockBodyScroll();\n  };\n\n  const handleOutsideClick = (event: Event) => {\n    const isOutsideClicked = (event.target as HTMLElement).classList.contains(\n      \"layout-mask\",\n    );\n    if (isOutsideClicked) {\n      hideMenu();\n    }\n  };\n\n  const [bindMenuOutsideClickListener, unbindMenuOutsideClickListener] =\n    useEventListener({\n      type: \"click\",\n      listener: handleOutsideClick,\n    });\n\n  const hideProfileMenu = () => {\n    setLayoutState((prevLayoutState: LayoutState) => ({\n      ...prevLayoutState,\n      profileSidebarVisible: false,\n    }));\n    unbindProfileMenuOutsideClickListener();\n  };\n\n  const handleProfileMenuOutsideClick = (event: Event) => {\n    const isOutsideClicked = !(event.target as HTMLElement).classList.contains(\n      \"layout-topbar-menu-mobile-active\",\n    );\n    if (isOutsideClicked) {\n      hideProfileMenu();\n    }\n  };\n\n  const [\n    bindProfileMenuOutsideClickListener,\n    unbindProfileMenuOutsideClickListener,\n  ] = useEventListener({\n    type: \"click\",\n    listener: handleProfileMenuOutsideClick,\n  });\n\n  useEffect(() => {\n    if (layoutState.overlayMenuActive || layoutState.staticMenuMobileActive) {\n      bindMenuOutsideClickListener();\n    }\n\n    if (layoutState.staticMenuMobileActive) {\n      blockBodyScroll();\n    }\n\n    return () => {\n      unbindMenuOutsideClickListener();\n    };\n  }, [\n    bindMenuOutsideClickListener,\n    layoutState.overlayMenuActive,\n    layoutState.staticMenuMobileActive,\n    unbindMenuOutsideClickListener,\n  ]);\n\n  useEffect(() => {\n    if (layoutState.profileSidebarVisible) {\n      bindProfileMenuOutsideClickListener();\n    }\n\n    return () => {\n      unbindProfileMenuOutsideClickListener();\n    };\n  }, [\n    bindProfileMenuOutsideClickListener,\n    layoutState.profileSidebarVisible,\n    unbindProfileMenuOutsideClickListener,\n  ]);\n\n  useEffect(() => {\n    const userStr = localStorage.getItem(AuthService.USER_KEY);\n    if (userStr) {\n      setLoggedUser(JSON.parse(userStr));\n    }\n  }, []);\n\n  useUnmountEffect(() => {\n    unbindMenuOutsideClickListener();\n    unbindProfileMenuOutsideClickListener();\n  });\n\n  const containerClass = classNames(\"layout-wrapper\", \"page-break\", {\n    \"layout-overlay\": layoutConfig.menuMode === \"overlay\",\n    \"layout-static\": layoutConfig.menuMode === \"static\",\n    \"layout-static-inactive\":\n      layoutState.staticMenuDesktopInactive &&\n      layoutConfig.menuMode === \"static\",\n    \"layout-overlay-active\": layoutState.overlayMenuActive,\n    \"layout-mobile-active\": layoutState.staticMenuMobileActive,\n    \"p-input-filled\": layoutConfig.inputStyle === \"filled\",\n    \"p-ripple-disabled\": !layoutConfig.ripple,\n  });\n\n  return (\n    <>\n      <div className={containerClass}>\n        <AppNavbar\n          title={title}\n          onMenuToggle={toggleMenu}\n          showProfileSidebar={profileSidebarToggle}\n          profileSidebarVisible={layoutState.profileSidebarVisible}\n          loggedUser={loggedUser}\n        />\n        <div className=\"layout-sidebar\">\n          <AppSidebar />\n        </div>\n        <div className=\"layout-main-container flex-auto\">\n          <div className=\"layout-main\">{children}</div>\n          <AppFooter />\n        </div>\n        <div className=\"layout-mask\"></div>\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { Button } from \"primereact/button\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Divider } from \"primereact/divider\";\nimport { UniqueComponentId } from \"primereact/utils\";\nimport { type ReactNode } from \"react\";\n\ninterface ErrorDialogProps {\n  title?: string;\n  content?: ReactNode;\n  labelYes?: string;\n  labelNo?: string;\n  showYes?: boolean;\n  showNo?: boolean;\n  visible: boolean;\n  setVisible: (value: boolean) => void;\n}\n\nexport default function ErrorDialog({\n  title = \"ERRO\",\n  content,\n  labelYes = \"Sim\",\n  labelNo = \"Não\",\n  showYes = true,\n  showNo = true,\n  visible,\n  setVisible,\n}: ErrorDialogProps) {\n  const id = UniqueComponentId();\n\n  const header = (\n    <>\n      <i\n        className=\"pi pi-exclamation-triangle text-red-700 pr-2\"\n        style={{ fontSize: \"1.5rem\" }}\n      ></i>\n      <span>{title}</span>\n    </>\n  );\n\n  const body = (\n    <>\n      <Divider />\n      {content}\n    </>\n  );\n\n  const footerContent = (\n    <>\n      <Divider />\n      {showNo && (\n        <Button\n          label={labelNo}\n          icon=\"pi pi-times\"\n          onClick={() => {\n            setVisible(false);\n          }}\n          severity=\"danger\"\n          className=\"align-left\"\n          pt={{\n            root: { style: { margin: \"0\" } },\n          }}\n          size=\"small\"\n          raised\n        />\n      )}\n      {showYes && (\n        <Button\n          label={labelYes}\n          icon=\"pi pi-check\"\n          onClick={() => {\n            setVisible(false);\n          }}\n          className=\"align-right\"\n          size=\"small\"\n          raised\n          autoFocus\n        />\n      )}\n    </>\n  );\n\n  return (\n    <div className=\"card flex justify-content-center\">\n      <Dialog\n        id={id}\n        header={header}\n        visible={visible}\n        onHide={() => {\n          setVisible(false);\n        }}\n        footer={footerContent}\n        contentStyle={{ width: \"auto\", padding: \"0 1.5rem\" }}\n        headerStyle={{ width: \"auto\", padding: \"1.5rem 1.5rem 0rem\" }}\n        // style={{ width: '50vw' }}\n        // breakpoints={{ '960px': '75vw', '641px': '100vw' }}\n      >\n        <p className=\"m-0\">{body}</p>\n      </Dialog>\n    </div>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport ErrorDialog from \"components/dialogs/ErrorDialog\";\nimport { formatSize } from \"libs/utils\";\nimport { Avatar } from \"primereact/avatar\";\nimport React, {\n  type FormEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\ninterface FileProps {\n  name?: string;\n  size?: string;\n  type?: string;\n  ext?: string;\n}\n\ninterface PhotoUploaderProps {\n  label?: string;\n  buttonLabel?: string;\n  selectedImage?: File;\n  disabled?: boolean;\n\n  setSelectedImage: (imageFile: File | undefined) => void;\n}\n\nconst validFileTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\n\nconst PhotoUploader = ({\n  label = \"Selecionar\",\n  selectedImage,\n  disabled,\n  setSelectedImage,\n}: PhotoUploaderProps) => {\n  const fileUploadRef = useRef<HTMLInputElement | null>(null);\n  const [file, setFile] = useState<File | undefined>();\n  const [fileInfo, setFileInfo] = useState<FileProps>({});\n  const [showErrorDialog, setShowErrorDialog] = useState(false);\n\n  function handleClick(e: React.MouseEvent<HTMLElement>) {\n    e.preventDefault();\n    if (!disabled) {\n      fileUploadRef.current?.click();\n    }\n  }\n\n  const getExtension = (filename: string) => {\n    return filename.split(\".\").pop();\n  };\n\n  const updateFileInfo = useCallback(\n    (fileUploaded: File) => {\n      const fileInfoProps: FileProps = {\n        name: fileUploaded.name,\n        size: formatSize(fileUploaded.size || 0),\n        type: fileUploaded.type,\n        ext: getExtension(fileUploaded.name),\n      };\n      setFileInfo(fileInfoProps);\n      setFile(fileUploaded);\n      setSelectedImage(fileUploaded);\n    },\n    [setSelectedImage],\n  );\n\n  const isValidFileUploaded = (fileSelected: File) => {\n    const fileType = fileSelected.type;\n    return validFileTypes.includes(fileType);\n  };\n\n  const handleChange = (e: HTMLInputElement) => {\n    if (e.files && e.files.length > 0) {\n      const fileUploaded = e.files[0];\n      if (isValidFileUploaded(fileUploaded)) {\n        try {\n          updateFileInfo(fileUploaded);\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        setShowErrorDialog(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (selectedImage) {\n      setFile(selectedImage);\n      updateFileInfo(selectedImage);\n    }\n  }, [setFile, selectedImage, updateFileInfo]);\n\n  return (\n    <>\n      <label htmlFor=\"photo-uploader\">{label}</label>\n      <div className=\"flex align-items-center gap-2\">\n        <input\n          id=\"photo-uploader\"\n          type=\"file\"\n          ref={fileUploadRef}\n          accept={validFileTypes.join()}\n          onInput={(e: FormEvent<HTMLInputElement>) => {\n            handleChange(e.target as HTMLInputElement);\n          }}\n          style={{ display: \"none\" }}\n        />\n\n        {file ? (\n          <>\n            <div>\n              <Avatar\n                imageAlt={fileInfo?.name}\n                image={URL.createObjectURL(file)}\n                className=\"p-mr-2\"\n                style={{ verticalAlign: \"middle\" }}\n                size=\"xlarge\"\n                shape=\"circle\"\n                icon=\"pi pi-user\"\n                pt={{ image: { width: 32 } }}\n                onClick={handleClick}\n              />\n            </div>\n            <div>\n              <div>\n                <span style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}>\n                  {fileInfo?.name}\n                </span>\n              </div>\n              <div>\n                <span\n                  className=\"text-color-secondary text-sm\"\n                  style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n                >\n                  {`${fileInfo?.size} / 30 MB`}\n                </span>\n              </div>\n            </div>\n          </>\n        ) : (\n          <div>\n            <Avatar\n              imageAlt=\"Avatar\"\n              className=\"p-mr-2\"\n              style={{ verticalAlign: \"middle\" }}\n              size=\"xlarge\"\n              shape=\"circle\"\n              icon=\"pi pi-user\"\n              pt={{ image: { width: 32 } }}\n              onClick={handleClick}\n            />\n          </div>\n        )}\n      </div>\n      {showErrorDialog && (\n        <ErrorDialog\n          title=\"Arquivo Inválido!\"\n          content={\n            <>\n              <div>\n                O arquivo que você selecionou possui uma extensão inválida!\n              </div>\n              <pre>Extensão selecionada: {fileInfo?.ext}</pre>\n              <pre>Formatos aceitos: png, jpeg ou jpg.</pre>\n            </>\n          }\n          showYes={false}\n          labelNo={\"Fechar\"}\n          visible={showErrorDialog}\n          setVisible={(prev) => {\n            setShowErrorDialog(prev);\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PhotoUploader;\n","import { useReducer } from \"react\";\n\nexport const useDataReducer = <T>() => {\n  interface State<T> {\n    data: T | null;\n    dataArray: T[] | null;\n    loading: boolean;\n    error: string;\n  }\n\n  type Action =\n    | { type: \"FETCH_DATA_REQUEST\" }\n    | { type: \"FETCH_DATA_SUCCESS\"; payload: T | null }\n    | { type: \"FETCH_DATA_ARRAY_SUCCESS\"; payload: T[] | null }\n    | { type: \"FETCH_DATA_FAILURE\"; payload: string };\n\n  const initialState: State<T> = {\n    data: null,\n    dataArray: null,\n    loading: false,\n    error: \"\",\n  };\n\n  const reducer = (state: State<T>, action: Action): State<T> => {\n    switch (action.type) {\n      case \"FETCH_DATA_REQUEST\":\n        return { ...state, loading: true };\n      case \"FETCH_DATA_SUCCESS\":\n        return { ...state, data: action.payload, loading: false };\n      case \"FETCH_DATA_ARRAY_SUCCESS\":\n        return { ...state, dataArray: action.payload, loading: false };\n      case \"FETCH_DATA_FAILURE\":\n        return { ...state, error: action.payload, loading: false };\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return { state, dispatch };\n};\n","// Copyright 2023 Alberto L. Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { formatDate, generateUUID } from \"@/libs/utils\";\nimport { useEffect, useState } from \"react\";\n\nexport interface CondominoFormInputs {\n  uuid: string;\n  nome: string;\n  email?: string;\n  cpf?: string;\n  contato: string;\n  proprietario: boolean;\n  dataEntrada: string;\n  dataSaida?: string;\n  observacao?: string;\n  tipo?: \"C\";\n  imagemPerfil?: string;\n  idUnidade?: number;\n  bloco?: string;\n  numero?: string;\n  observacaoUnidade?: string;\n  idCondominio?: number;\n}\n\nexport const initialFormState: CondominoFormInputs = {\n  nome: \"\",\n  uuid: generateUUID(),\n  email: \"\",\n  cpf: undefined,\n  contato: \"\",\n  proprietario: false,\n  dataEntrada: \"\",\n  dataSaida: undefined,\n  observacao: undefined,\n  tipo: \"C\",\n  imagemPerfil: undefined,\n  idUnidade: undefined,\n  bloco: undefined,\n  numero: undefined,\n  observacaoUnidade: undefined,\n  idCondominio: undefined,\n};\n\nconst useFormInputs = (initialState: CondominoData | null) => {\n  const [formInputs, setFormInputs] = useState<CondominoFormInputs>(\n    initialState ?? initialFormState,\n  );\n\n  const resetForm = () => {\n    setFormInputs(initialFormState);\n  };\n\n  useEffect(() => {\n    setFormInputs({\n      uuid: initialFormState?.uuid ?? generateUUID(),\n      nome: initialState?.nome ?? \"\",\n      email: initialState?.email ?? undefined,\n      cpf: initialState?.cpf ?? undefined,\n      contato: initialState?.contato ?? \"\",\n      proprietario: initialState?.proprietario ?? false,\n      dataEntrada: initialState?.dataEntrada\n        ? formatDate(initialState?.dataEntrada, \"DD/MM/YYYY\")\n        : \"\",\n      dataSaida: initialState?.dataSaida\n        ? formatDate(initialState?.dataSaida, \"DD/MM/YYYY\")\n        : undefined,\n      observacao: initialState?.observacao ?? \"\",\n      tipo: \"C\",\n      imagemPerfil: initialState?.imagemPerfil ?? undefined,\n      idUnidade: initialState?.idUnidade ?? undefined,\n      bloco: initialState?.bloco ?? \"\",\n      numero: initialState?.numero ?? undefined,\n      observacaoUnidade: initialState?.observacaoUnidade ?? undefined,\n      idCondominio: initialState?.idCondominio ?? undefined,\n    });\n  }, [initialState]);\n\n  return {\n    formInputs,\n    setFormInputs,\n    resetForm,\n  };\n};\n\nexport default useFormInputs;\n","class ErrorBase<T extends string> extends Error {\n  readonly name: T;\n\n  readonly cause?: string | never;\n\n  readonly details?: Record<string, string | number | never>;\n\n  constructor({\n    name,\n    message,\n    cause,\n    details,\n  }: {\n    name: T;\n    message: string;\n    cause?: string | never;\n    details?: Record<string, string | number | never>;\n  }) {\n    super(message);\n    this.name = name;\n    this.cause = cause;\n    this.details = details;\n    Object.setPrototypeOf(this, ErrorBase.prototype);\n  }\n\n  toString(): string {\n    let errorString = `${this.name}: ${this.message}`;\n    if (this.cause) {\n      errorString += `\\nCaused by: ${this.cause.toString()}`;\n    }\n    if (this.details) {\n      errorString += `\\nDetails: ${JSON.stringify(this.details, null, 2)}`;\n    }\n    return errorString;\n  }\n\n  toJSON(): {\n    name: T;\n    cause: string | never | undefined;\n    details: Record<string, string | number | never> | undefined;\n    message: string;\n  } {\n    return {\n      name: this.name,\n      message: this.message,\n      cause: this.cause,\n      details: this.details,\n    };\n  }\n}\n\ntype APIErrorName =\n  | \"GET_ERROR\"\n  | \"CREATE_ERROR\"\n  | \"UPDATE_ERROR\"\n  | \"DELETE_ERROR\"\n  | \"API_LIMIT_REACHED \";\n\ntype FileErrorName =\n  | \"GET_FILE_ERROR\"\n  | \"CREATE_FILE_ERROR\"\n  | \"EXPORT_FILE_ERROR\"\n  | \"FILE_LIMIT_REACHED \";\n\nexport class APIError extends ErrorBase<APIErrorName> {}\n\nexport class FileError extends ErrorBase<FileErrorName> {}\n","import { type AxiosResponse } from \"axios\";\nimport { APIError } from \"libs/errors.ts\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\n\nexport class CondominoService {\n  private static instance: CondominoService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): CondominoService {\n    if (!CondominoService.instance) {\n      CondominoService.instance = new CondominoService();\n    }\n    return CondominoService.instance;\n  }\n\n  getAllCondominos = async (\n    bloco?: string,\n    perPage?: PerPage,\n  ): Promise<CondominoData[]> => {\n    const _perPage: string = perPage\n      ? `page=${perPage.start},${perPage.end}`\n      : \"page=0,100\";\n    const request: AxiosResponse<CondominoData[]> = await apiInstance({\n      method: \"GET\",\n      url: bloco\n        ? `${baseApi}/condominocompleto?filter=bloco,eq,${bloco}&${_perPage}`\n        : `${baseApi}/condominocompleto?${_perPage}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar a lista de Condôminos.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n\n  getCondominoById = async (id: string | number): Promise<CondominoData> => {\n    const request: AxiosResponse<CondominoData> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/condominocompleto/${id}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar o Condômino.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  addUpdateCondomino = async (\n    condomino: CondominoData,\n  ): Promise<CondominoData> => {\n    const request: AxiosResponse<CondominoData> = await apiInstance({\n      method: condomino.id ? \"PUT\" : \"POST\",\n      url: condomino.id\n        ? `${baseApi}/condomino/${condomino.id}`\n        : `${baseApi}/condomino`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      data: condomino,\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao ${\n          condomino.id ? \"atualizar\" : \"salvar\"\n        } o Condômino.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  deleteCondomino = (condominoID: number | string) =>\n    apiInstance({\n      method: \"DELETE\",\n      url: `${baseApi}/condomino/${condominoID}`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n}\n","import { type AxiosResponse } from \"axios\";\nimport { apiInstance } from \"libs/api/base-api.ts\";\n\nexport class FileUploadService {\n  private static instance: FileUploadService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): FileUploadService {\n    if (!FileUploadService.instance) {\n      FileUploadService.instance = new FileUploadService();\n    }\n    return FileUploadService.instance;\n  }\n\n  async fileUpload(fileModel: FileModel): Promise<never> {\n    try {\n      const formData: FormData = new FormData();\n      formData.append(\"_method\", \"post\");\n      formData.append(\n        \"filepath\",\n        `uploads/${fileModel.path}/${fileModel.foderName}/`,\n      );\n      formData.append(\"file\", fileModel.file);\n      // formData.append(\"filename\", fileModel.fileName);\n\n      // for (const key of formData.entries()) {\n      //   console.log(key[0], \" - \", key[1]);\n      // }\n\n      console.log(\"formData: \", ...formData);\n\n      // new Response(formData).text().then(console.log);\n\n      const response: AxiosResponse<never> = await apiInstance({\n        method: \"POST\",\n        url: \"http://localhost/sgco/api.php/fileupload\",\n        data: formData,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data;\",\n          \"cache-control\": \"no-cache\",\n        },\n        // 404 error fixed with: https://github.com/axios/axios/issues/4406#issuecomment-1048693170\n        transformRequest: (formData) => formData,\n        params: {},\n      });\n\n      if (response.status !== 200) {\n        throw new Error(\n          `Ocorreu um erro no upload do arquivo. Status: ${response.status}`,\n        );\n      }\n\n      return response.data;\n    } catch (error) {\n      throw new Error(`Ocorreu um erro no upload do arquivo: ${error.message}`);\n    }\n  }\n}\n","import { APIError } from \"libs/errors.ts\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\nimport { type AxiosResponse } from \"axios\";\n\nexport class UnidadeService {\n  private static instance: UnidadeService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): UnidadeService {\n    if (!UnidadeService.instance) {\n      UnidadeService.instance = new UnidadeService();\n    }\n    return UnidadeService.instance;\n  }\n\n  getNomeBlocos = async (): Promise<BlocoLabelsData[]> => {\n    const request: AxiosResponse<BlocoLabelsData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/unidadeblocosdistinct?page=0,100`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar os nomes dos blocos.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getApartamentosPorBlocos = async (\n    bloco: string | undefined,\n  ): Promise<ApartamentoData[]> => {\n    const request: AxiosResponse<ApartamentoData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/apartamentos${`?filter=bloco,eq,${bloco}`}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar os apartamentos.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getUnidadesPorBlocos = async (bloco?: string): Promise<UnidadeData[]> => {\n    const request: AxiosResponse<UnidadeData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/unidade${`?filter=bloco,eq,${bloco}`}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar as unidades.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getAllUnidades = async (\n    idCondominio?: string | number,\n    perPage?: PerPage,\n  ): Promise<UnidadeData[]> => {\n    const _perPage: string = perPage\n      ? `page=${perPage.start},${perPage.end}`\n      : \"page=0,100\";\n    const request: AxiosResponse<UnidadeData[]> = await apiInstance({\n      method: \"GET\",\n      url: idCondominio\n        ? `${baseApi}/unidadescompletas?filter=idCondominio,eq,${idCondominio}&${_perPage}`\n        : `${baseApi}/unidadescompletas?${_perPage}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar a lista de Unidades.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n\n  getUnidadeById = async (id: string): Promise<UnidadeData> => {\n    const request: AxiosResponse<UnidadeData> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/unidade/${id}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar a Unidade.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  addUpdateUnidade = async (unidade: UnidadeData): Promise<UnidadeData> => {\n    const request: AxiosResponse<UnidadeData> = await apiInstance({\n      method: unidade.id ? \"PUT\" : \"POST\",\n      url: unidade.id\n        ? `${baseApi}/unidade/${unidade.id}`\n        : `${baseApi}/unidade`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      data: unidade,\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao ${\n          unidade.id ? \"atualizar\" : \"salvar\"\n        } a Unidade.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  deleteUnidade = (unidadeID: number | string) =>\n    apiInstance({\n      method: \"DELETE\",\n      url: `${baseApi}/unidade/${unidadeID}`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport {\n  formatDate,\n  generateUUID,\n  IMAGE_UPLOAD_BASE_URL,\n  isValidCPF,\n  randomString,\n  sleep,\n} from \"@/libs/utils\";\nimport PhotoUploader from \"components/PhotoUploader/PhotoUploader.tsx\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { createFileFromUrl, fileExistsOnServer } from \"libs/file-utils.ts\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { InputMask } from \"primereact/inputmask\";\nimport {\n  InputSwitch,\n  type InputSwitchChangeEvent,\n} from \"primereact/inputswitch\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { type Toast } from \"primereact/toast\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, type FieldErrors, useForm } from \"react-hook-form\";\nimport { useLocation } from \"wouter\";\nimport { type CondominoFormInputs, initialFormState } from \"./utils/form-hooks\";\nimport { CondominoService } from \"libs/api/condomino-api.ts\";\nimport { FileUploadService } from \"libs/api/file-upload-api.ts\";\nimport { UnidadeService } from \"libs/api/unidade-api.ts\";\nimport AuthService from \"@/services/auth.service.ts\";\n\ninterface AddEditCondominoProps {\n  id: string | null;\n  title?: string;\n}\n\nexport function CondominosAdd({ id, title }: AddEditCondominoProps) {\n  const condominoDataReducer = useDataReducer<CondominoData>();\n  const blocosDataReducer = useDataReducer<BlocoLabelsData>();\n  const unidadesDataReducer = useDataReducer<ApartamentoData>();\n\n  // State for user image\n  const [condominoImage, setCondominoImage] = useState<File | undefined>();\n\n  const [formInputs, setFormInputs] =\n    useState<CondominoFormInputs>(initialFormState);\n\n  const toast = useRef<Toast | null>(null);\n\n  const [, navigate] = useLocation();\n\n  const isReadOnly = AuthService.userIsCondomino();\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<CondominoFormInputs>({\n    mode: \"onChange\",\n    defaultValues: formInputs,\n    values: formInputs,\n  });\n\n  const requiredFieldError = \"Este campo é obrigatório.\";\n\n  const getFormErrorMessage = (\n    name: keyof FieldErrors<CondominoFormInputs>,\n  ) => {\n    return errors[name] ? (\n      <small className=\"p-error\">{errors[name]?.message}</small>\n    ) : null;\n  };\n\n  const showSuccessToast = () => {\n    toast.current?.show({\n      severity: \"success\",\n      summary: \"Sucesso\",\n      detail: \"Operação realizada com sucesso!\",\n    });\n  };\n\n  const handleFormSubmit = (data: CondominoFormInputs) => {\n    console.log(\"Form Data:\", data);\n\n    const verifiedUuid = formInputs.uuid ?? generateUUID();\n\n    const _condomino: CondominoData = {\n      id: condominoDataReducer.state.data?.id,\n      uuid: verifiedUuid,\n      nome: data.nome,\n      email: data.email,\n      cpf: data.cpf,\n      contato: data.contato,\n      proprietario: data.proprietario,\n      dataEntrada: formatDate(data.dataEntrada),\n      dataSaida: data.dataSaida ? formatDate(data.dataSaida) : undefined,\n      observacao: data.observacao,\n      tipo: data?.tipo,\n      idUnidade: data.idUnidade,\n    };\n\n    try {\n      if (data.imagemPerfil) {\n        const image = data.imagemPerfil as unknown as File;\n\n        if (\n          !fileExistsOnServer(\n            `${IMAGE_UPLOAD_BASE_URL}${data.uuid}/${image.name}`,\n          )\n        ) {\n          const myRenamedFile = new File(\n            [image],\n            randomString() +\n              \"_\" +\n              Date.now() +\n              \".\" +\n              image.name.split(\".\").pop(),\n          );\n\n          _condomino.imagemPerfil = myRenamedFile.name;\n\n          try {\n            const fileModel: FileModel = {\n              path: \"images\",\n              file: myRenamedFile,\n              foderName: data.uuid,\n            };\n\n            const uploadStatus =\n              FileUploadService.getInstance().fileUpload(fileModel);\n\n            uploadStatus.then(console.log);\n          } catch (error) {\n            console.log(\"file_upload_error: \", error);\n          }\n        }\n      }\n\n      console.log(\"onSubmit_condomino: \", JSON.stringify(_condomino, null, 4));\n\n      CondominoService.getInstance()\n        .addUpdateCondomino(_condomino)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      showSuccessToast();\n    } catch (e) {\n      console.log(\"ERRORS: :-(\\n\\n\" + JSON.stringify(errors));\n    } finally {\n      sleep(100).then(() => {\n        // reset();\n        navigate(\"/condominos/list\", { replace: true });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fetchCondominoData = async () => {\n      condominoDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = id\n          ? await CondominoService.getInstance().getCondominoById(id)\n          : null;\n        condominoDataReducer.dispatch({\n          type: \"FETCH_DATA_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        condominoDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    const fetchBlocoData = async () => {\n      blocosDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = await UnidadeService.getInstance().getNomeBlocos();\n        blocosDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        blocosDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchCondominoData().then((r) => r);\n    fetchBlocoData().then((r) => r);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Load user image from URL (if available)\n  useEffect(() => {\n    const makeProfileImage = async () => {\n      const condominoProfileImage =\n        condominoDataReducer.state.data?.imagemPerfil;\n\n      if (condominoProfileImage) {\n        try {\n          const foto = await createFileFromUrl(\n            `${IMAGE_UPLOAD_BASE_URL}${condominoDataReducer.state.data?.uuid}/${condominoProfileImage}`,\n          );\n          setCondominoImage(foto);\n        } catch (error) {\n          console.error(\"Error loading condomino image:\", error);\n        }\n      }\n    };\n\n    // Populate form fields with condominoData when available\n    if (condominoDataReducer.state.data) {\n      makeProfileImage().then((r) => r);\n\n      setFormInputs({\n        uuid: condominoDataReducer.state.data.uuid ?? generateUUID(),\n        nome: condominoDataReducer.state.data.nome || \"\",\n        email: condominoDataReducer.state.data.email ?? undefined,\n        cpf: condominoDataReducer.state.data.cpf ?? undefined,\n        contato: condominoDataReducer.state.data.contato || \"\",\n        proprietario: condominoDataReducer.state.data.proprietario || false,\n        dataEntrada: condominoDataReducer.state.data.dataEntrada\n          ? formatDate(\n              condominoDataReducer.state.data.dataEntrada,\n              \"DD/MM/YYYY\",\n            )\n          : \"\",\n        dataSaida: condominoDataReducer.state.data.dataSaida\n          ? formatDate(condominoDataReducer.state.data.dataSaida, \"DD/MM/YYYY\")\n          : undefined,\n        observacao: condominoDataReducer.state.data.observacao ?? \"\",\n        tipo: \"C\",\n        imagemPerfil: condominoDataReducer.state.data.imagemPerfil ?? undefined,\n        idUnidade: condominoDataReducer.state.data.idUnidade ?? undefined,\n        bloco: condominoDataReducer.state.data.bloco ?? \"\",\n        numero: condominoDataReducer.state.data.numero ?? undefined,\n        observacaoUnidade:\n          condominoDataReducer.state.data.observacaoUnidade ?? undefined,\n        idCondominio: condominoDataReducer.state.data.idCondominio ?? undefined,\n      });\n    }\n  }, [condominoDataReducer.state.data]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      unidadesDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response =\n          await UnidadeService.getInstance().getApartamentosPorBlocos(\n            formInputs.bloco,\n          );\n        console.log(\"unidadesDataReducer: \", response);\n        unidadesDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        unidadesDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formInputs.bloco, blocosDataReducer.state.loading]);\n\n  return (\n    <DefaultLayout title={title ?? `${id ? \"Editar\" : \"Adicionar\"} Condômino`}>\n      <div className=\"card\">\n        <div>\n          {condominoDataReducer.state.loading ? (\n            <p>Loading...</p>\n          ) : condominoDataReducer.state.error ? (\n            <p>{condominoDataReducer.state.error}</p>\n          ) : (\n            <div>\n              <form id=\"form1\" onSubmit={handleSubmit(handleFormSubmit)}>\n                <div className=\"pt-4\">\n                  <div className=\"formgrid grid\">\n                    {/* NOME */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"nome\">Nome</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-user\" />\n                        <Controller\n                          name=\"nome\"\n                          control={control}\n                          defaultValue={formInputs.nome}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id={field.name}\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  nome: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"nome\")}\n                    </div>\n                    {/* E-MAIL */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"email\">Email</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-at\" />\n                        <Controller\n                          name=\"email\"\n                          control={control}\n                          defaultValue={formInputs.email}\n                          rules={{\n                            // required: requiredFielError,\n                            pattern: {\n                              value:\n                                /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, // Email pattern\n                              message: \"Endereço de email inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"email\"\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  email: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"email\")}\n                    </div>\n                    {/* CPF */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"cpf\">CPF</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-id-card\" />\n                        <Controller\n                          name=\"cpf\"\n                          control={control}\n                          defaultValue={formInputs.cpf}\n                          rules={{\n                            validate: (value) =>\n                              (value ? isValidCPF(value) : true) ||\n                              \"CPF inválido\",\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"cpf\"\n                              mask=\"999.999.999-99\"\n                              placeholder=\"000.000.000-00\"\n                              autoClear={false}\n                              unmask\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  cpf: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"cpf\")}\n                    </div>\n                    {/* CONTATO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"contato\">Contato</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-phone\" />\n                        <Controller\n                          name=\"contato\"\n                          control={control}\n                          defaultValue={formInputs.contato}\n                          rules={{\n                            //  validate: (value) => validatePhoneNumber(value, false) || 'Contato inválido',\n                            // /[0-9]{10,11}/g\n                            pattern: {\n                              // value: /^(0[0-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              value: /^[0-9]{10,11}$/, // DDMMYYYY\n                              message: \"Contato inválido\",\n                            },\n                            required: requiredFieldError,\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"contato\"\n                              // mask={formInputs.contato.length === 10 ? '(99)9999-9999' : '(99)99999-9999'}\n                              mask={\"(99)9999-9999?9\"}\n                              placeholder=\"(00)0000-00000\"\n                              autoClear={true}\n                              unmask\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  contato: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"contato\")}\n                    </div>\n                    {/* ENTRADA */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"dataEntrada\">Data Entrada</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"dataEntrada\"\n                          control={control}\n                          defaultValue={formInputs.dataEntrada}\n                          rules={{\n                            required: requiredFieldError,\n                            pattern: {\n                              value:\n                                /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              // value: \t/^(0[1-9]|[12][0-9]|3[01])(0[1-9]|1[0-2])\\d{4}$/, // DDMMYYYY\n                              message: \"Formato de data inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"dataEntrada\"\n                              mask=\"99/99/9999\"\n                              placeholder=\"DD/MM/YYYY\"\n                              slotChar=\"DD/MM/YYYY\"\n                              autoClear={true}\n                              unmask={false}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  dataEntrada: e.currentTarget.value,\n                                });\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"dataEntrada\")}\n                    </div>\n                    {/* SAIDA */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"dataSaida\">Data Saída</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"dataSaida\"\n                          control={control}\n                          defaultValue={formInputs.dataSaida}\n                          rules={{\n                            // required: requiredFielError,\n                            pattern: {\n                              value:\n                                /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              // value: /^(0[1-9]|[12][0-9]|3[01])(0[1-9]|1[0-2])\\d{4}$/, // DDMMYYYY\n                              message: \"Formato de data inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"dataSaida\"\n                              mask=\"99/99/9999\"\n                              placeholder=\"DD/MM/YYYY\"\n                              slotChar=\"DD/MM/YYYY\"\n                              autoClear={true}\n                              unmask={false}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  dataSaida: e.currentTarget.value,\n                                });\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"dataSaida\")}\n                    </div>\n                    {/* BLOCO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"bloco\">Bloco</label>\n                      <Controller\n                        name=\"bloco\"\n                        control={control}\n                        defaultValue={formInputs.bloco}\n                        rules={{ required: requiredFieldError }}\n                        render={({ field, fieldState }) => (\n                          <Dropdown\n                            {...field}\n                            id=\"bloco\"\n                            options={blocosDataReducer.state.dataArray?.map(\n                              (e) => e.label,\n                            )}\n                            optionLabel=\"\"\n                            placeholder=\"Selecione\"\n                            className={classNames(\"p-inputtext-sm w-full\", {\n                              \"p-invalid\": fieldState.error,\n                            })}\n                            emptyMessage={\n                              !blocosDataReducer.state.dataArray\n                                ? \"Sem resultados\"\n                                : \"Selecione o bloco!\"\n                            }\n                            value={field.value}\n                            onChange={(e: DropdownChangeEvent) => {\n                              field.onChange(e.value);\n                              setFormInputs({ ...formInputs, bloco: e.value });\n                            }}\n                            disabled={isReadOnly}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"bloco\")}\n                    </div>\n                    {/* APARTAMENTO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"idUnidade\">Apartamento</label>\n                      <Controller\n                        name=\"idUnidade\"\n                        control={control}\n                        defaultValue={formInputs.idUnidade}\n                        rules={{ required: requiredFieldError }}\n                        render={({ field, fieldState }) => (\n                          <Dropdown\n                            id=\"idUnidade\"\n                            options={unidadesDataReducer.state.dataArray ?? []}\n                            defaultValue={field.value}\n                            optionLabel=\"label\"\n                            placeholder=\"Selecione\"\n                            className={classNames(\"p-inputtext-sm w-full\", {\n                              \"p-invalid\": fieldState.error,\n                            })}\n                            emptyMessage={\n                              !unidadesDataReducer.state.dataArray?.length\n                                ? `Sem resultados`\n                                : \"Selecione a unidade!\"\n                            }\n                            disabled={!formInputs.bloco || isReadOnly}\n                            tooltip={`${\n                              formInputs.bloco\n                                ? \"\"\n                                : \"Selecione primeiro o bloco!\"\n                            }`}\n                            tooltipOptions={{\n                              position: \"bottom\",\n                              showOnDisabled: true,\n                            }}\n                            value={field.value}\n                            onChange={(e: DropdownChangeEvent) => {\n                              field.onChange(e.value);\n                              setFormInputs({\n                                ...formInputs,\n                                idUnidade: e.value,\n                              });\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"idUnidade\")}\n                    </div>\n                    {/* PROPRIETRIO */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"proprietario\">É proprietário?</label>\n                      <div>\n                        <Controller\n                          name=\"proprietario\"\n                          control={control}\n                          defaultValue={formInputs.proprietario}\n                          render={({ field, fieldState }) => (\n                            <InputSwitch\n                              id=\"proprietario\"\n                              className={classNames(\"p-inputtext-sm\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              checked={field.value}\n                              onChange={(e: InputSwitchChangeEvent) => {\n                                field.onChange(e.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  proprietario: e.value ?? false,\n                                });\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                      </div>\n                      {getFormErrorMessage(\"proprietario\")}\n                    </div>\n                    {/* FOTO */}\n                    <div className=\"field col-12\">\n                      <Controller\n                        name=\"imagemPerfil\"\n                        control={control}\n                        defaultValue={formInputs.imagemPerfil}\n                        render={({ field }) => (\n                          <PhotoUploader\n                            label={`Foto${\n                              isReadOnly\n                                ? \"\"\n                                : \" (Clique na imagem para selecionar)\"\n                            }`}\n                            disabled={isReadOnly}\n                            selectedImage={condominoImage}\n                            setSelectedImage={(imagePath: File | undefined) => {\n                              field.onChange(imagePath);\n                              setCondominoImage(imagePath);\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"imagemPerfil\")}\n                    </div>\n                    {/* OBSERVACOES */}\n                    <div className=\"field col-12\">\n                      <label htmlFor=\"observacoes\">Observações</label>\n                      <Controller\n                        name=\"observacao\"\n                        control={control}\n                        defaultValue={formInputs.observacao}\n                        render={({ field, fieldState }) => (\n                          <InputTextarea\n                            id=\"observacoes\"\n                            rows={4}\n                            autoResize\n                            pt={{\n                              root: {\n                                className: classNames(\"p-inputtext-sm w-full\", {\n                                  \"p-invalid\": fieldState.error,\n                                }),\n                              },\n                            }}\n                            value={field.value}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLTextAreaElement>,\n                            ) => {\n                              field.onChange(e.currentTarget.value);\n                              setFormInputs({\n                                ...formInputs,\n                                observacao: e.currentTarget.value,\n                              });\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"observacao\")}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex align-items-center justify-content-end gap-2\">\n                  <Button label=\"Submit\" type=\"submit\" icon=\"pi pi-check\" />\n                  <Button\n                    label=\"Resetar\"\n                    type=\"button\"\n                    severity=\"secondary\"\n                    icon=\"pi pi-refresh\"\n                    onClick={() => {\n                      reset(initialFormState);\n                      setCondominoImage(undefined);\n                    }}\n                  />\n                  <Button\n                    label=\"Cancelar\"\n                    type=\"button\"\n                    severity=\"danger\"\n                    icon=\"pi pi-times\"\n                    onClick={async () => {\n                      await sleep(100).then(() => {\n                        navigate(\"/condominos/list\", { replace: true });\n                      });\n                    }}\n                  />{\" \"}\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n}\n","import { getImageUrlOnServer } from \"libs/file-utils.ts\";\nimport React, { useState } from \"react\";\nimport { Avatar } from \"primereact/avatar\";\nimport { Button } from \"primereact/button\";\nimport { type DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { useMountEffect } from \"primereact/hooks\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { classNames } from \"primereact/utils\";\nimport { useLocation } from \"wouter\";\nimport { UnidadeService } from \"libs/api/unidade-api.ts\";\nimport AuthService from \"@/services/auth.service.ts\";\n\nexport const condominoNomeTemplate = (rowData: CondominoData) => {\n  return (\n    <>\n      <div className=\"flex align-items-center gap-2\">\n        <div>\n          <Avatar\n            imageAlt={rowData.nome}\n            image={getImageUrlOnServer(rowData.imagemPerfil, rowData.uuid)}\n            className=\"p-mr-2\"\n            style={{ verticalAlign: \"middle\" }}\n            size=\"large\"\n            shape=\"circle\"\n            icon=\"pi pi-user\"\n            pt={{ image: { width: 32 } }}\n          />\n        </div>\n        <div>\n          <div>\n            <span style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}>\n              {rowData.nome}\n            </span>\n          </div>\n          <div>\n            <span\n              className=\"text-color-secondary text-sm\"\n              style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n            >\n              {rowData.email}\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const condominoStatusTemplate = (rowData: CondominoData) => {\n  return (\n    <i\n      className={classNames(\"pi\", {\n        \"text-green-500 pi-check-circle\": rowData.proprietario,\n        \"text-pink-500 pi-times-circle\": !rowData.proprietario,\n      })}\n    ></i>\n  );\n};\n\nexport const condominoCpfTemplate = (rowData: CondominoData) => {\n  return (\n    <InputMask\n      id=\"cpf\"\n      mask=\"999.999.999-99\"\n      placeholder=\"000.000.000-00\"\n      value={rowData.cpf}\n      autoClear={false}\n      disabled\n      readOnly\n      unmask\n      pt={{\n        root: {\n          className: classNames(\"border-none\", \"pl-0\"),\n        },\n      }}\n    ></InputMask>\n  );\n};\n\nexport const condominoContatoTemplate = (rowData: CondominoData) => {\n  return (\n    <InputMask\n      id=\"telefone\"\n      mask={rowData.contato.length === 11 ? \"(99)99999-9999\" : \"(99)9999-9999\"}\n      placeholder=\"(00)00000-0000\"\n      value={rowData.contato}\n      autoClear={false}\n      disabled\n      readOnly\n      unmask\n      pt={{\n        root: {\n          className: classNames(\"border-none\", \"pl-0\"),\n        },\n      }}\n    ></InputMask>\n  );\n};\n\nexport const condominoUnidadeTemplate = (rowData: CondominoData) => {\n  return (\n    <div>\n      BL.{rowData?.bloco} - AP.{rowData?.numero}\n    </div>\n  );\n};\n\ninterface ExportCondominoHeaderProps {\n  dt: React.RefObject<DataTable<DataTableValueArray>>;\n\n  showModalEdit: () => void;\n\n  setSelectedBloco: (value?: BlocoLabelsData) => void;\n}\n\nexport const useExportHeader = ({\n  dt,\n  showModalEdit: showEditModal,\n  setSelectedBloco,\n}: ExportCondominoHeaderProps) => {\n  const [blocos, setBlocos] = useState<BlocoLabelsData[]>([]);\n  const [currentSelectedBloco, setCurrentSelectedBloco] =\n    useState<BlocoLabelsData>();\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [, navigate] = useLocation();\n\n  const exportCSV = () => {\n    dt?.current?.exportCSV({ selectionOnly: false });\n  };\n\n  const fetchNomeBlocos = () => {\n    setMessage(\"Carregando...\");\n    UnidadeService.getInstance()\n      .getNomeBlocos()\n      .then((data) => {\n        setMessage(\"\");\n        setBlocos(data);\n      })\n      .catch((error: { message: string }) => {\n        setMessage(\"Erro: \" + error.message);\n        console.log(\"ERROR: \", message);\n      });\n  };\n\n  useMountEffect(() => {\n    fetchNomeBlocos();\n  });\n\n  return (\n    <>\n      <div className=\"flex align-items-center justify-content-start gap-2\">\n        {AuthService.userIsCondomino() ? null : (\n          <Dropdown\n            id=\"filter-bloco\"\n            options={blocos}\n            optionLabel=\"label\"\n            placeholder=\"Selecione o Bloco!\"\n            className={classNames(\"p-inputtext-sm w-full\")}\n            emptyMessage={!blocos ? \"Sem resultados\" : \"Selecione o bloco!\"}\n            value={currentSelectedBloco}\n            onChange={(e: DropdownChangeEvent) => {\n              setCurrentSelectedBloco(e.value);\n              setSelectedBloco(e.value);\n            }}\n            showClear\n          />\n        )}\n        <div className=\"flex align-items-center justify-content-end gap-2\">\n          {AuthService.userIsCondomino() ? null : (\n            <Button\n              type=\"button\"\n              label=\"Novo\"\n              icon=\"pi pi-plus\"\n              rounded\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                e.preventDefault();\n                showEditModal();\n                navigate(\"/condominos/add\", { replace: true });\n              }}\n              data-pr-tooltip=\"Novo\"\n              size=\"small\"\n            />\n          )}\n          <Button\n            type=\"button\"\n            icon=\"pi pi-file\"\n            severity=\"info\"\n            label=\"CSV\"\n            rounded\n            onClick={() => {\n              exportCSV();\n            }}\n            data-pr-tooltip=\"CSV\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  condominoCpfTemplate,\n  condominoContatoTemplate,\n  condominoStatusTemplate,\n  condominoUnidadeTemplate,\n  useExportHeader,\n  condominoNomeTemplate,\n} from \"pages/condominos/table/table-options.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Column } from \"primereact/column\";\nimport { DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { useLocation } from \"wouter\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { Dialog } from \"primereact/dialog\";\nimport { Toast } from \"primereact/toast\";\nimport { CondominoService } from \"libs/api/condomino-api.ts\";\n\ninterface CondominosTableProps {\n  condominos: CondominoData[] | null;\n  loading: boolean;\n  loadingMessage: string | null;\n\n  reload: (value: boolean) => void;\n\n  exportSelectedBloco: (value?: string) => void;\n}\n\nexport function CondominosTable({\n  condominos,\n  loading,\n  loadingMessage,\n  reload,\n  exportSelectedBloco,\n}: CondominosTableProps) {\n  const dt = useRef<DataTable<DataTableValueArray>>(null);\n  const toast = useRef<Toast>(null);\n\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [selectedCondomino, setSelectedCondomino] = useState<CondominoData>();\n  const [selectedBloco, setSelectedBloco] = useState<BlocoLabelsData>();\n\n  const [, navigate] = useLocation();\n\n  const showModalEdit = (user?: CondominoData) => {\n    setShowEditModal(true);\n    setSelectedCondomino(user);\n  };\n\n  const showModalDelete = (user: CondominoData) => {\n    setShowDeleteModal(true);\n    setSelectedCondomino(user);\n  };\n\n  function deleteCondomino() {\n    const _condomino = { ...selectedCondomino };\n\n    if (_condomino.id) {\n      CondominoService.getInstance()\n        .deleteCondomino(_condomino.id)\n        .then(() => {\n          setShowDeleteModal(false);\n          setSelectedCondomino(undefined);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successo\",\n            detail: \"Condômino Excluido\",\n            life: 3000,\n          });\n        });\n    }\n\n    console.log(\"condomino excluido:\\n\", JSON.stringify(_condomino, null, 4));\n  }\n\n  const deleteCondominoDialogFooter = (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          setShowDeleteModal(false);\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={deleteCondomino}\n      />\n    </>\n  );\n\n  useEffect(() => {\n    reload(showEditModal);\n  }, [reload, showEditModal]);\n\n  useEffect(() => {\n    reload(showDeleteModal);\n  }, [reload, showDeleteModal]);\n\n  useEffect(() => {\n    setSelectedBloco(selectedBloco);\n    exportSelectedBloco(selectedBloco?.label);\n  }, [exportSelectedBloco, selectedBloco, setSelectedBloco]);\n\n  return (\n    <>\n      <div className=\"card\">\n        {loading ? (\n          <div className=\"spinner-wrapper\">\n            {loadingMessage}\n            <ProgressSpinner\n              aria-label=\"Loading\"\n              style={{ width: \"40px\", height: \"40px\", position: \"absolute\" }}\n              pt={{\n                spinner: { style: { animationDuration: \".5s\" } },\n                circle: {\n                  style: {\n                    stroke: \"#2E0357\",\n                    strokeWidth: 2,\n                    animation: \"none\",\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : null}\n        <Toast ref={toast} />\n        <DataTable\n          value={condominos ?? undefined}\n          ref={dt}\n          dataKey={\"id\"}\n          header={useExportHeader({ dt, showModalEdit, setSelectedBloco })}\n          columnResizeMode=\"expand\"\n          resizableColumns\n          showGridlines\n          stripedRows\n          size=\"small\"\n          selectionMode={\"single\"}\n          dragSelection={true}\n          selection={selectedCondomino}\n          showSelectAll={true}\n          paginator\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} registro(s)\"\n          rows={10}\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          tableStyle={{ minWidth: \"50rem\" }}\n          onSelectionChange={(e) => {\n            setSelectedCondomino(e.value as CondominoData);\n          }}\n        >\n          <Column\n            selectionMode={\"multiple\"}\n            headerStyle={{ width: \"3rem\" }}\n          ></Column>\n\n          <Column\n            field=\"id\"\n            header=\"ID\"\n            sortable\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ maxWidth: \"4rem\" }}\n          />\n          <Column\n            field=\"nome\"\n            header=\"Nome\"\n            sortable\n            style={{ minWidth: \"14rem\" }}\n            body={condominoNomeTemplate}\n          ></Column>\n          <Column\n            field=\"cpf\"\n            header=\"CPF\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={condominoCpfTemplate}\n          ></Column>\n          <Column\n            field=\"telefone\"\n            header=\"Contato\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={condominoContatoTemplate}\n          ></Column>\n          <Column\n            field=\"proprietario\"\n            header=\"Proprietário\"\n            dataType=\"boolean\"\n            sortable\n            bodyClassName=\"text-center\"\n            style={{ minWidth: \"1rem\" }}\n            body={condominoStatusTemplate}\n          />\n          <Column\n            field=\"unidadeId\"\n            header=\"Unidade\"\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={condominoUnidadeTemplate}\n          />\n          <Column\n            header=\"Ações\"\n            bodyClassName=\"text-center\"\n            body={(data: CondominoData) => (\n              <span className=\"p-buttonset\">\n                <Button\n                  className=\"mr-2\"\n                  pt={{\n                    root: { style: { fontSize: \"0.75rem\", padding: \"0.4rem\" } },\n                  }}\n                  label={\n                    AuthService.userIsCondomino() ? \"Visualizar\" : \"Editar\"\n                  }\n                  icon=\"pi pi-pencil\"\n                  size=\"small\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                    e.preventDefault();\n                    // showModalEdit(data);\n                    navigate(\"/condominos/add/\" + data.id, { replace: true });\n                  }}\n                />\n                {!AuthService.userIsCondomino() ? (\n                  <Button\n                    pt={{\n                      root: {\n                        style: { fontSize: \"0.75rem\", padding: \"0.4rem\" },\n                      },\n                    }}\n                    label=\"Excluir\"\n                    icon=\"pi pi-trash\"\n                    severity=\"danger\"\n                    size=\"small\"\n                    onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.preventDefault();\n                      showModalDelete(data);\n                    }}\n                  />\n                ) : null}\n              </span>\n            )}\n          />\n        </DataTable>\n        {showDeleteModal && selectedCondomino && (\n          <>\n            {/* Delete Financeiro Dialog */}\n            <Dialog\n              visible={showDeleteModal}\n              style={{ width: \"450px\" }}\n              header=\"Confirmação\"\n              modal\n              footer={deleteCondominoDialogFooter}\n              onHide={() => {\n                setShowDeleteModal(false);\n              }}\n            >\n              <div className=\"flex align-items-center justify-content-center\">\n                <i\n                  className=\"pi pi-exclamation-triangle mr-3\"\n                  style={{ fontSize: \"2rem\" }}\n                />\n                {selectedCondomino && (\n                  <span>\n                    Você tem certeza que deseja excluir o item{\" \"}\n                    <b>{selectedCondomino.nome}</b>?\n                  </span>\n                )}\n              </div>\n            </Dialog>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { useDataReducer } from \"@/libs/data-utils\";\nimport { type FunctionComponent, useEffect, useState } from \"react\";\nimport { type RouteComponentProps } from \"wouter\";\nimport { CondominosTable } from \"./table/table\";\nimport { CondominoService } from \"libs/api/condomino-api.ts\";\nimport AuthService, { UsuarioField } from \"@/services/auth.service.ts\";\nimport { sleep } from \"libs/utils.ts\";\n\ninterface CondominosListProps extends RouteComponentProps {\n  title?: string;\n}\n\nexport const CondominosList: FunctionComponent<CondominosListProps> = ({\n  title = \"Condominos\",\n}: CondominosListProps) => {\n  const [selectedBloco, setSelectedBloco] = useState<string>();\n  const [reload, setReload] = useState<boolean>(false);\n  const { state, dispatch } = useDataReducer<CondominoData>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const condominoID = AuthService.getCurrentUserField(\n          UsuarioField.IdPessoa,\n        );\n        let response: CondominoData[] = [];\n\n        if (AuthService.userIsCondomino()) {\n          if (condominoID) {\n            response = [\n              await CondominoService.getInstance().getCondominoById(\n                condominoID as number,\n              ),\n            ];\n          }\n        } else if (!AuthService.userIsCondomino()) {\n          response =\n            await CondominoService.getInstance().getAllCondominos(\n              selectedBloco,\n            );\n        } else {\n          response = [];\n        }\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n  }, [dispatch, selectedBloco, reload]);\n\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <div>\n          <CondominosTable\n            condominos={state.dataArray}\n            loading={state.loading}\n            loadingMessage={state.error}\n            reload={(value) => {\n              sleep(1000).then(() => {\n                setReload(value);\n              });\n            }}\n            exportSelectedBloco={(bloco) => {\n              setSelectedBloco(bloco);\n            }}\n          />\n        </div>\n      </>\n    </DefaultLayout>\n  );\n};\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { type RouteComponentProps } from \"wouter\";\nimport { type FunctionComponent } from \"react\";\n\ninterface MensagensListProps extends RouteComponentProps {\n  title?: string;\n}\n\nexport const MensagensList: FunctionComponent<MensagensListProps> = ({\n  title = \"Mensagens\",\n}: MensagensListProps) => {\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <h1>Hi 👋</h1>\n        <p>\n          Can&apos;t wait to see what you build!\n          <br />\n          Happy coding!\n        </p>\n        <p className=\"text-justify\">\n          The standard Lorem Ipsum passage, used since the 1500s `&quot;Lorem\n          ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n          tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n          veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n          ea commodo consequat. Duis aute irure dolor in reprehenderit in\n          voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur\n          sint occaecat cupidatat non proident, sunt in culpa qui officia\n          deserunt mollit anim id est laborum.`&quot;\n        </p>\n      </>\n    </DefaultLayout>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport function Clock() {\n  const [dateState, setDateState] = useState(new Date());\n  useEffect(() => {\n    setInterval(() => {\n      setDateState(new Date());\n    }, 1000);\n  }, []);\n  return (\n    <>\n      <i className=\"pi pi-calendar mr-2 text-blue-400\"></i>\n      <span>\n        {dateState.toLocaleDateString(\"pt-BR\", {\n          day: \"numeric\",\n          month: \"short\",\n          year: \"numeric\",\n        })}\n      </span>\n      <i className=\"pi pi-clock ml-2 mr-2 text-blue-400\"></i>\n      <span>\n        {dateState.toLocaleString(\"pt-BR\", {\n          hour: \"numeric\",\n          minute: \"numeric\",\n          second: \"numeric\",\n          hour12: false,\n        })}\n      </span>\n    </>\n  );\n}\n","import { DefaultLayout } from \"layouts/DefaultLayout\";\nimport { useEffect, useState } from \"react\";\nimport AuthService, { API_URL, UsuarioField } from \"@/services/auth.service.ts\";\nimport jscrudapi from \"js-crud-api\";\nimport { Clock } from \"components/Clock.tsx\";\n\ninterface HomeProps {\n  title?: string;\n}\n\nexport const Dashboard = ({ title = \"Dashboard\" }: HomeProps) => {\n  const [user, setUser] = useState<UsuarioData>();\n  const [userCount, setUserCount] = useState<number>(0);\n  const [receitas, setReceitas] = useState<FinanceiroData[]>([]);\n  const [despesas, setDespesas] = useState<FinanceiroData[]>([]);\n  const [apartamentos, setApartamentos] = useState<UnidadeData[]>([]);\n  const [condominios, setCondominios] = useState<CondominioData[]>([]);\n\n  useEffect(() => {\n    const userStr = localStorage.getItem(AuthService.USER_KEY);\n    if (userStr) {\n      setUser(JSON.parse(userStr));\n    }\n  }, []);\n\n  const userLimited = user?.tipo === \"C\" || user?.tipo === undefined;\n\n  const userIdUnidade = AuthService.getCurrentUserField(UsuarioField.IdUnidade);\n\n  const userIdCondominio = AuthService.getCurrentUserField(\n    UsuarioField.IdCondominio,\n  );\n\n  useEffect(() => {\n    const jca = jscrudapi(API_URL);\n    const getUsuarios = async () => {\n      const response = await jca.list(\"usuario\");\n      setUserCount(response.records.length);\n    };\n\n    const getReceitas = async () => {\n      const response = await jca.list(\"financeiro\", {\n        filter: [\"tipo,eq,RECEITA\", `idUnidade,eq,${userIdUnidade}`],\n      });\n      setReceitas(response.records);\n    };\n\n    const getDespesas = async () => {\n      const response = await jca.list(\"financeiro\", {\n        filter: userLimited\n          ? [\"tipo,eq,DESPESA\", `idUnidade,eq,${userIdUnidade}`]\n          : \"tipo,eq,DESPESA\",\n      });\n      setDespesas(response.records);\n    };\n\n    const getApartamentos = async () => {\n      const response = await jca.list(\"apartamentosformatados\", {\n        filter: userLimited ? `value,eq,${userIdUnidade}` : \"\",\n      });\n      setApartamentos(response.records);\n    };\n\n    const getCondominios = async () => {\n      console.log(user);\n      const response = await jca.list(\"condominiocompleto\", {\n        filter: userLimited ? `id,eq,${userIdCondominio}` : \"\",\n      });\n      setCondominios(response.records);\n    };\n\n    getUsuarios().then((r) => r);\n    getReceitas().then((r) => r);\n    getDespesas().then((r) => r);\n    getApartamentos().then((r) => r);\n    getCondominios().then((r) => r);\n  }, []);\n\n  return (\n    <>\n      <DefaultLayout title={title}>\n        <div className=\"card\">\n          <div className=\"surface-0 text-center\">\n            <div className=\"mb-1 font-bold text-3xl\">\n              <span className=\"text-900\">Olá, </span>\n              <span className=\"text-blue-600\">{user?.nome}</span>\n            </div>\n            <div className=\"mt-2 mb-6 font-semibold\">\n              <span>\n                <Clock />\n              </span>\n            </div>\n            <div className=\"grid\">\n              <div className=\"col-12 md:col-4 mb-4 px-5\">\n                <span\n                  className=\"p-3 shadow-2 mb-3 inline-block\"\n                  style={{ borderRadius: \"10px\" }}\n                >\n                  <i className=\"pi pi-desktop text-4xl text-blue-500\"></i>\n                </span>\n                <div className=\"text-900 text-xl mb-3 font-medium\">\n                  Último Acesso\n                </div>\n                <span className=\"text-700 line-height-3\">\n                  {user?.lastLogin\n                    ? String(new Date(+user?.lastLogin).toLocaleString())\n                    : \"-\"}\n                </span>\n              </div>\n              <div className=\"col-12 md:col-4 mb-4 px-5\">\n                <span\n                  className=\"p-3 shadow-2 mb-3 inline-block\"\n                  style={{ borderRadius: \"10px\" }}\n                >\n                  <i className=\"pi pi-user text-4xl text-blue-500\"></i>\n                </span>\n                <div className=\"text-900 text-xl mb-3 font-medium\">\n                  {userLimited ? \"Usuário Logado\" : \"Usuários\"}\n                </div>\n                <span className=\"text-700 line-height-3\">\n                  {userLimited ? \"\" : userCount}\n                  {userLimited ? (\n                    <>\n                      <i className=\"pi text-green-500 pi-check-circle\"></i>\n                    </>\n                  ) : null}\n                </span>\n              </div>\n              <div className=\"col-12 md:col-4 mb-4 px-5\">\n                <span\n                  className=\"p-3 shadow-2 mb-3 inline-block\"\n                  style={{ borderRadius: \"10px\" }}\n                >\n                  <i className=\"pi pi-arrow-circle-up text-4xl text-blue-500\"></i>\n                </span>\n                <div className=\"text-900 text-xl mb-3 font-medium\">\n                  {userLimited ? \"Valores a Receber\" : \"Receitas\"}\n                </div>\n                <span className=\"text-700 line-height-3\">\n                  {receitas.length}\n                </span>\n              </div>\n              <div className=\"col-12 md:col-4 mb-4 px-5\">\n                <span\n                  className=\"p-3 shadow-2 mb-3 inline-block\"\n                  style={{ borderRadius: \"10px\" }}\n                >\n                  <i className=\"pi pi-arrow-circle-down text-4xl text-blue-500\"></i>\n                </span>\n                <div className=\"text-900 text-xl mb-3 font-medium\">\n                  Despesas\n                </div>\n                <span className=\"text-700 line-height-3\">\n                  {despesas.length}\n                </span>\n              </div>\n              <div className=\"col-12 md:col-4 mb-4 px-5\">\n                <span\n                  className=\"p-3 shadow-2 mb-3 inline-block\"\n                  style={{ borderRadius: \"10px\" }}\n                >\n                  <i className=\"pi pi-building text-4xl text-blue-500\"></i>\n                </span>\n                <div className=\"text-900 text-xl mb-3 font-medium\">\n                  Condomínios\n                </div>\n                <span className=\"text-700 line-height-3\">\n                  {condominios.length}\n                </span>\n              </div>\n              <div className=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\n                <span\n                  className=\"p-3 shadow-2 mb-3 inline-block\"\n                  style={{ borderRadius: \"10px\" }}\n                >\n                  <i className=\"pi pi-table text-4xl text-blue-500\"></i>\n                </span>\n                <div className=\"text-900 text-xl mb-3 font-medium\">\n                  Apartamentos\n                </div>\n                <span className=\"text-700 line-height-3\">\n                  {apartamentos.length}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </DefaultLayout>\n    </>\n  );\n};\n","// Copyright 2023 Alberto L. Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { formatDate, generateUUID } from \"@/libs/utils\";\nimport { useEffect, useState } from \"react\";\n\nexport interface CondominioFormInputs {\n  uuid: string;\n  nome: string;\n  email?: string;\n  cnpj?: string;\n  contato?: string;\n  dataAbertura?: string;\n  dataEncerramento?: string;\n  imagemPerfil?: string;\n  observacao?: string;\n  idEndereco?: number;\n  rua?: string;\n  numero?: string;\n  complemento?: string;\n  bairro?: string;\n  cidade?: string;\n  uf?: string;\n  cep?: string;\n  pais?: string;\n}\n\nexport const initialFormState: CondominioFormInputs = {\n  uuid: generateUUID(),\n  nome: \"\",\n  email: \"\",\n  cnpj: undefined,\n  contato: undefined,\n  dataAbertura: \"\",\n  dataEncerramento: undefined,\n  imagemPerfil: undefined,\n  observacao: undefined,\n  idEndereco: undefined,\n  rua: undefined,\n  numero: undefined,\n  complemento: undefined,\n  bairro: undefined,\n  cidade: undefined,\n  uf: undefined,\n  cep: undefined,\n  pais: undefined,\n};\n\nconst useFormInputs = (initialState: CondominioData | null) => {\n  const [formInputs, setFormInputs] = useState<CondominioFormInputs>(\n    initialState ?? initialFormState,\n  );\n\n  const resetCondominioForm = () => {\n    setFormInputs(initialFormState);\n  };\n\n  useEffect(() => {\n    setFormInputs({\n      uuid: initialFormState?.uuid ?? generateUUID(),\n      nome: initialState?.nome ?? \"\",\n      email: initialState?.email ?? undefined,\n      cnpj: initialState?.cnpj ?? undefined,\n      contato: initialState?.contato ?? \"\",\n      dataAbertura: initialState?.dataAbertura\n        ? formatDate(initialState?.dataAbertura, \"DD/MM/YYYY\")\n        : \"\",\n      dataEncerramento: initialState?.dataEncerramento\n        ? formatDate(initialState?.dataEncerramento, \"DD/MM/YYYY\")\n        : undefined,\n      imagemPerfil: initialState?.imagemPerfil ?? undefined,\n      observacao: initialState?.observacao ?? \"\",\n      idEndereco: initialState?.idEndereco ?? undefined,\n      rua: initialState?.rua ?? undefined,\n      numero: initialState?.numero ?? undefined,\n      complemento: initialState?.complemento ?? undefined,\n      bairro: initialState?.bairro ?? undefined,\n      cidade: initialState?.cidade ?? undefined,\n      uf: initialState?.uf ?? undefined,\n      cep: initialState?.cep ?? undefined,\n      pais: initialState?.pais ?? undefined,\n    });\n  }, [initialState]);\n\n  return {\n    formInputs,\n    setFormInputs,\n    resetForm: resetCondominioForm,\n  };\n};\n\nexport default useFormInputs;\n","import { APIError } from \"libs/errors.ts\";\nimport { type AxiosResponse } from \"axios\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\n\nexport class CondominioService {\n  private static instance: CondominioService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): CondominioService {\n    if (!CondominioService.instance) {\n      CondominioService.instance = new CondominioService();\n    }\n    return CondominioService.instance;\n  }\n\n  getAllCondominios = async (\n    idEndereco?: string,\n    perPage?: PerPage,\n  ): Promise<CondominioData[]> => {\n    const _perPage: string = perPage\n      ? `page=${perPage.start},${perPage.end}`\n      : \"page=0,100\";\n    const request: AxiosResponse<CondominioData[]> = await apiInstance({\n      method: \"GET\",\n      url: idEndereco\n        ? `${baseApi}/condominiocompleto?filter=idEndereco,eq,${idEndereco}&${_perPage}`\n        : `${baseApi}/condominiocompleto?${_perPage}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar a lista de Condôminios.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n\n  getCondominioById = async (id: string | number): Promise<CondominioData> => {\n    const request: AxiosResponse<CondominioData> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/condominiocompleto/${id}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar o Condôminio.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  addUpdateCondominio = async (\n    condominio: CondominioData,\n  ): Promise<CondominioData> => {\n    const request: AxiosResponse<CondominioData> = await apiInstance({\n      method: condominio.id ? \"PUT\" : \"POST\",\n      url: condominio.id\n        ? `${baseApi}/condominio/${condominio.id}`\n        : `${baseApi}/condominio`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      data: condominio,\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao ${\n          condominio.id ? \"atualizar\" : \"salvar\"\n        } o Condôminio.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  deleteCondominio = (condominoID: number | string) =>\n    apiInstance({\n      method: \"DELETE\",\n      url: `${baseApi}/condominio/${condominoID}`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n}\n","import { type AxiosResponse } from \"axios\";\nimport { APIError } from \"libs/errors.ts\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\n\nexport class EnderecoService {\n  private static instance: EnderecoService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): EnderecoService {\n    if (!EnderecoService.instance) {\n      EnderecoService.instance = new EnderecoService();\n    }\n    return EnderecoService.instance;\n  }\n\n  getAllEnderecos = async (): Promise<EnderecoData[]> => {\n    const request: AxiosResponse<EnderecoData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/endereco?page=0,100`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar os enderecos.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getEnderecoFormatado = async (\n    id?: string,\n    perPage?: PerPage,\n  ): Promise<EnderecoFormatadoData[]> => {\n    const _perPage: string = perPage\n      ? `page=${perPage.start},${perPage.end}`\n      : \"page=0,100\";\n    const request: AxiosResponse<EnderecoFormatadoData[]> = await apiInstance({\n      method: \"GET\",\n      url: id\n        ? `${baseApi}/enderecoformatado?filter=id,eq,${id}&${_perPage}`\n        : `${baseApi}/enderecoformatado?${_perPage}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar o(s) endereço(s).\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n\n  getEnderecoByID = async (id: string): Promise<EnderecoData> => {\n    const request: AxiosResponse<EnderecoData> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/endereco/${id}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar o endereco.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getEnderecoByUF = async (uf?: string): Promise<EnderecoData[]> => {\n    const request: AxiosResponse<EnderecoData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/unidade${`?filter=bloco,eq,${uf}`}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar o endereco.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  addUpdateEndereco = async (endereco: EnderecoData): Promise<EnderecoData> => {\n    const request: AxiosResponse<EnderecoData> = await apiInstance({\n      method: endereco.id ? \"PUT\" : \"POST\",\n      url: endereco.id\n        ? `${baseApi}/endereco/${endereco.id}`\n        : `${baseApi}/endereco`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      data: endereco,\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao ${\n          endereco.id ? \"atualizar\" : \"salvar\"\n        } o Endereco.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  deleteEndereco = (enderecoID: string | number) =>\n    apiInstance({\n      method: \"DELETE\",\n      url: `${baseApi}/endereco/${enderecoID}`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n}\n","/**\n * @see https://gist.github.com/alexbruno/6623b5afa847f891de9cb6f704d86d02\n */\n\n// Regex para validação de string no formato CNPJ\nexport const regexCNPJ = /^\\d{2}.\\d{3}.\\d{3}\\/\\d{4}-\\d{2}$/;\n\n// Método de validação\n// Referência: https://pt.wikipedia.org/wiki/Cadastro_Nacional_da_Pessoa_Jur%C3%ADdica\nexport function validCNPJ(value: string | number | number[] = \"\") {\n  if (!value) return false;\n\n  // Aceita receber o valor como string, número ou array com todos os dígitos\n  const isString = typeof value === \"string\";\n  const validTypes =\n    isString || Number.isInteger(value) || Array.isArray(value);\n\n  // Elimina valor de tipo inválido\n  if (!validTypes) return false;\n\n  // Filtro inicial para entradas do tipo string\n  if (isString) {\n    // Teste Regex para veificar se é uma string apenas dígitos válida\n    const digitsOnly = /^\\d{14}$/.test(value);\n    // Teste Regex para verificar se é uma string formatada válida\n    const validFormat = regexCNPJ.test(value);\n    // Verifica se o valor passou em ao menos 1 dos testes\n    const isValid = digitsOnly || validFormat;\n\n    // Se o formato não é válido, retorna inválido\n    if (!isValid) return false;\n  }\n\n  // Elimina tudo que não é dígito\n  const numbers = matchNumbers(value);\n\n  // Valida a quantidade de dígitos\n  if (numbers.length !== 14) return false;\n\n  // Elimina inválidos com todos os dígitos iguais\n  const items = [...new Set(numbers)];\n  if (items.length === 1) return false;\n\n  // Separa os 2 últimos dígitos verificadores\n  const digits = numbers.slice(12);\n\n  // Valida 1o. dígito verificador\n  const digit0 = validCalc(12, numbers);\n  if (digit0 !== digits[0]) return false;\n\n  // Valida 2o. dígito verificador\n  const digit1 = validCalc(13, numbers);\n  return digit1 === digits[1];\n}\n\n// Método de formatação\nexport function formatCNPJ(value: string | number | number[] = \"\") {\n  // Verifica se o valor é válido\n  const valid = validCNPJ(value);\n\n  // Se o valor não for válido, retorna vazio\n  if (!valid) return \"\";\n\n  // Elimina tudo que não é dígito\n  const numbers = matchNumbers(value);\n  const text = numbers.join(\"\");\n\n  // Formatação do CNPJ: 99.999.999/9999-99\n  // Retorna o valor formatado\n  return text.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, \"$1.$2.$3/$4-$5\");\n}\n\n// Cálculo validador\nfunction validCalc(x: number, numbers: number[]) {\n  const slice = numbers.slice(0, x);\n  let factor = x - 7;\n  let sum = 0;\n\n  for (let i = x; i >= 1; i--) {\n    const n = slice[x - i];\n    sum += n * factor--;\n    if (factor < 2) factor = 9;\n  }\n\n  const result = 11 - (sum % 11);\n\n  return result > 9 ? 0 : result;\n}\n\n// Elimina tudo que não é dígito\nfunction matchNumbers(value: string | number | number[] = \"\") {\n  const match = value.toString().match(/\\d/g);\n  return Array.isArray(match) ? match.map(Number) : [];\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport {\n  formatDate,\n  generateUUID,\n  IMAGE_UPLOAD_BASE_URL,\n  randomString,\n  sleep,\n} from \"@/libs/utils\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { createFileFromUrl, fileExistsOnServer } from \"libs/file-utils.ts\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { type Toast } from \"primereact/toast\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, type FieldErrors, useForm } from \"react-hook-form\";\nimport { useLocation } from \"wouter\";\nimport {\n  type CondominioFormInputs,\n  initialFormState,\n} from \"./utils/form-hooks\";\nimport { FileUploadService } from \"libs/api/file-upload-api.ts\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport { EnderecoService } from \"libs/api/endereco-api.ts\";\nimport { validCNPJ } from \"libs/valid-cnpj.ts\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport PhotoUploader from \"components/PhotoUploader/PhotoUploader.tsx\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport AuthService from \"@/services/auth.service.ts\";\n\ninterface AddEditCondominioState {\n  id: string | null;\n  title?: string;\n}\n\nexport function CondominiosAdd({ id, title }: AddEditCondominioState) {\n  const condominioDataReducer = useDataReducer<CondominioData>();\n  const enderecosDataReducer = useDataReducer<EnderecoData>();\n\n  // State for user image\n  const [condominioImage, setCondominioImage] = useState<File | undefined>();\n\n  const [formInputs, setFormInputs] =\n    useState<CondominioFormInputs>(initialFormState);\n\n  const toast = useRef<Toast | null>(null);\n\n  const [, navigate] = useLocation();\n\n  const isReadOnly = AuthService.userIsCondomino();\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<CondominioFormInputs>({\n    mode: \"onChange\",\n    defaultValues: formInputs,\n    values: formInputs,\n  });\n\n  const requiredFieldError = \"Este campo é obrigatório.\";\n\n  const getFormErrorMessage = (\n    name: keyof FieldErrors<CondominioFormInputs>,\n  ) => {\n    return errors[name] ? (\n      <small className=\"p-error\">{errors[name]?.message}</small>\n    ) : null;\n  };\n\n  const showSuccessToast = () => {\n    toast.current?.show({\n      severity: \"success\",\n      summary: \"Sucesso\",\n      detail: \"Operação realizada com sucesso!\",\n    });\n  };\n\n  // const handleFormSubmit2 = (data: CondominioFormInputs) => {\n  //   console.log(\"Form Data:\", data);\n  //   if (data.idEndereco && data.idEndereco > 9999999999999) {\n  //     handleFormSubmit(data);\n  //   }\n  // };\n\n  const handleFormSubmit = (data: CondominioFormInputs) => {\n    console.log(\"Form Data:\", data);\n\n    const verifiedUuid = formInputs.uuid ?? generateUUID();\n\n    const _condominio: CondominioData = {\n      id: condominioDataReducer.state.data?.id,\n      uuid: verifiedUuid,\n      nome: data.nome,\n      email: data.email,\n      cnpj: data.cnpj,\n      contato: data.contato,\n      dataAbertura: data.dataAbertura\n        ? formatDate(data.dataAbertura)\n        : undefined,\n      dataEncerramento: data.dataEncerramento\n        ? formatDate(data.dataEncerramento)\n        : undefined,\n      observacao: data.observacao,\n      idEndereco: data.idEndereco,\n    };\n\n    try {\n      if (data.imagemPerfil) {\n        const image = data.imagemPerfil as unknown as File;\n\n        if (\n          !fileExistsOnServer(\n            `${IMAGE_UPLOAD_BASE_URL}${data.uuid}/${image.name}`,\n          )\n        ) {\n          const myRenamedFile = new File(\n            [image],\n            randomString() +\n              \"_\" +\n              Date.now() +\n              \".\" +\n              image.name.split(\".\").pop(),\n          );\n\n          _condominio.imagemPerfil = myRenamedFile.name;\n\n          try {\n            const fileModel: FileModel = {\n              path: \"images\",\n              file: myRenamedFile,\n              foderName: data.uuid,\n            };\n\n            const uploadStatus =\n              FileUploadService.getInstance().fileUpload(fileModel);\n\n            uploadStatus.then(console.log);\n          } catch (error) {\n            console.log(\"file_upload_error: \", error);\n          }\n        }\n      }\n\n      console.log(\n        \"onSubmit_condominio: \",\n        JSON.stringify(_condominio, null, 4),\n      );\n\n      CondominioService.getInstance()\n        .addUpdateCondominio(_condominio)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      showSuccessToast();\n    } catch (e) {\n      console.log(\"ERRORS: :-(\\n\\n\" + JSON.stringify(errors));\n    } finally {\n      sleep(100).then(() => {\n        // reset();\n        navigate(\"/condominios/list\", { replace: true });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fetchCondominioData = async () => {\n      condominioDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = id\n          ? await CondominioService.getInstance().getCondominioById(id)\n          : null;\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchCondominioData().then((r) => r);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const fetchEnderecoData = async () => {\n      enderecosDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = await EnderecoService.getInstance().getAllEnderecos();\n        enderecosDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        enderecosDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchEnderecoData().then((r) => r);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [condominioDataReducer.state.data]);\n\n  // Load user image from URL (if available)\n  useEffect(() => {\n    const makeProfileImage = async () => {\n      const userProfileImage = condominioDataReducer.state.data?.imagemPerfil;\n\n      if (userProfileImage) {\n        try {\n          const foto = await createFileFromUrl(\n            `${IMAGE_UPLOAD_BASE_URL}${condominioDataReducer.state.data?.uuid}/${userProfileImage}`,\n          );\n          setCondominioImage(foto);\n        } catch (error) {\n          console.error(\"Error loading user image:\", error);\n        }\n      }\n    };\n\n    // Populate form fields with condominoData when available\n    if (condominioDataReducer.state.data) {\n      // setFormInputs(state.data);\n      makeProfileImage().then((r) => r);\n\n      setFormInputs({\n        uuid: condominioDataReducer.state.data.uuid ?? generateUUID(),\n        nome: condominioDataReducer.state.data.nome || \"\",\n        email: condominioDataReducer.state.data.email ?? undefined,\n        cnpj: condominioDataReducer.state.data.cnpj ?? undefined,\n        contato: condominioDataReducer.state.data.contato,\n        dataAbertura: condominioDataReducer.state.data.dataAbertura\n          ? formatDate(\n              condominioDataReducer.state.data.dataAbertura,\n              \"DD/MM/YYYY\",\n            )\n          : \"\",\n        dataEncerramento: condominioDataReducer.state.data.dataEncerramento\n          ? formatDate(\n              condominioDataReducer.state.data.dataEncerramento,\n              \"DD/MM/YYYY\",\n            )\n          : undefined,\n        imagemPerfil:\n          condominioDataReducer.state.data.imagemPerfil ?? undefined,\n        observacao: condominioDataReducer.state.data.observacao ?? \"\",\n        idEndereco: condominioDataReducer.state.data.idEndereco ?? undefined,\n        rua: condominioDataReducer.state.data.rua ?? undefined,\n        numero: condominioDataReducer.state.data.numero ?? undefined,\n        complemento: condominioDataReducer.state.data.complemento ?? undefined,\n        bairro: condominioDataReducer.state.data.bairro ?? undefined,\n        cidade: condominioDataReducer.state.data.cidade ?? undefined,\n        uf: condominioDataReducer.state.data.uf ?? undefined,\n        cep: condominioDataReducer.state.data.cep ?? undefined,\n        pais: condominioDataReducer.state.data.pais ?? undefined,\n      });\n    }\n  }, [condominioDataReducer.state.data]);\n\n  return (\n    <DefaultLayout title={title ?? `${id ? \"Editar\" : \"Adicionar\"} Condômino`}>\n      <div className=\"card\">\n        <div>\n          {condominioDataReducer.state.loading ? (\n            <p>Loading...</p>\n          ) : condominioDataReducer.state.error ? (\n            <p>{condominioDataReducer.state.error}</p>\n          ) : (\n            <div>\n              <form id=\"form1\" onSubmit={handleSubmit(handleFormSubmit)}>\n                <div className=\"pt-4\">\n                  <div className=\"formgrid grid\">\n                    {/* NOME */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"nome\">Nome</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-user\" />\n                        <Controller\n                          name=\"nome\"\n                          control={control}\n                          defaultValue={formInputs.nome}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id={field.name}\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  nome: e.currentTarget.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"nome\")}\n                    </div>\n                    {/* E-MAIL */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"email\">Email</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-at\" />\n                        <Controller\n                          name=\"email\"\n                          control={control}\n                          defaultValue={formInputs.email}\n                          rules={{\n                            // required: requiredFielError,\n                            pattern: {\n                              value:\n                                /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, // Email pattern\n                              message: \"Endereço de email inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"email\"\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  email: e.currentTarget.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"email\")}\n                    </div>\n                    {/* CNPJ */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"cpf\">CNPJ</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-id-card\" />\n                        <Controller\n                          name=\"cnpj\"\n                          control={control}\n                          defaultValue={formInputs.cnpj}\n                          rules={{\n                            validate: (value) =>\n                              (value ? validCNPJ(value) : true) ||\n                              \"CNPJ inválido\",\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"cnpj\"\n                              mask=\"99.999.999/9999-99\"\n                              placeholder=\"00.000.000/0000-00\"\n                              autoClear={false}\n                              unmask\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  cnpj: e.currentTarget.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"cnpj\")}\n                    </div>\n                    {/* CONTATO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"contato\">Contato</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-phone\" />\n                        <Controller\n                          name=\"contato\"\n                          control={control}\n                          defaultValue={formInputs.contato}\n                          rules={{\n                            pattern: {\n                              value: /^[0-9]{10,11}$/,\n                              message: \"Contato inválido\",\n                            },\n                            required: requiredFieldError,\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"contato\"\n                              mask={\"(99)9999-9999?9\"}\n                              placeholder=\"(00)0000-00000\"\n                              autoClear={true}\n                              unmask\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  contato: e.currentTarget.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"contato\")}\n                    </div>\n                    {/* DATA ABERTURA */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"dataAbertura\">Data Abertura</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"dataAbertura\"\n                          control={control}\n                          defaultValue={formInputs.dataAbertura}\n                          rules={{\n                            // required: requiredFieldError,\n                            pattern: {\n                              value:\n                                /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              message: \"Formato de data inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"dataAbertura\"\n                              mask=\"99/99/9999\"\n                              placeholder=\"DD/MM/YYYY\"\n                              slotChar=\"DD/MM/YYYY\"\n                              autoClear={true}\n                              unmask={false}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  dataAbertura: e.currentTarget.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"dataAbertura\")}\n                    </div>\n                    {/* DATA ENCERRAMENTO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"dataEncerramento\">\n                        Data Encerramento\n                      </label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"dataEncerramento\"\n                          control={control}\n                          defaultValue={formInputs.dataEncerramento}\n                          rules={{\n                            // required: requiredFielError,\n                            pattern: {\n                              value:\n                                /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              message: \"Formato de data inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"dataEncerramento\"\n                              mask=\"99/99/9999\"\n                              placeholder=\"DD/MM/YYYY\"\n                              slotChar=\"DD/MM/YYYY\"\n                              autoClear={true}\n                              unmask={false}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  dataEncerramento: e.currentTarget.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"dataEncerramento\")}\n                    </div>\n                    {/* ENDERECO */}\n                    <div className=\"field col-12\">\n                      <label htmlFor=\"idEndereco\">Endereço</label>\n                      <Controller\n                        name=\"idEndereco\"\n                        control={control}\n                        defaultValue={formInputs.idEndereco}\n                        rules={{ required: requiredFieldError }}\n                        render={({ field, fieldState }) => (\n                          <>\n                            <Dropdown\n                              id=\"idEndereco\"\n                              value={field.value}\n                              options={enderecosDataReducer.state.dataArray?.map(\n                                (e) => {\n                                  return {\n                                    value: e.id,\n                                    label: `${e.rua}, ${e.numero}${\n                                      e.complemento\n                                        ? `. (${e.complemento}). `\n                                        : \"\"\n                                    } ${e.bairro}. ${\n                                      e.cidade\n                                    }, ${e.uf?.toUpperCase()}. ${\n                                      e.pais\n                                    }. CEP: ${e.cep}`,\n                                  };\n                                },\n                              )}\n                              optionLabel={\"label\"}\n                              placeholder=\"Selecione o endereço\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              emptyMessage={\n                                !enderecosDataReducer.state.dataArray\n                                  ? \"Sem resultados\"\n                                  : \"Selecione o endereço!\"\n                              }\n                              onChange={(e: DropdownChangeEvent) => {\n                                field.onChange(e.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  idEndereco: e.value,\n                                });\n                              }}\n                              readOnly={isReadOnly}\n                              disabled={isReadOnly}\n                            />\n                          </>\n                        )}\n                      />\n                      {getFormErrorMessage(\"idEndereco\")}\n                    </div>\n                    {/* FOTO */}\n                    <div className=\"field col-12\">\n                      <Controller\n                        name=\"imagemPerfil\"\n                        control={control}\n                        defaultValue={formInputs.imagemPerfil}\n                        render={({ field }) => (\n                          <PhotoUploader\n                            label={`Foto${\n                              isReadOnly\n                                ? \"\"\n                                : \" (Clique na imagem para selecionar)\"\n                            }`}\n                            disabled={isReadOnly}\n                            selectedImage={condominioImage}\n                            setSelectedImage={(imagePath: File | undefined) => {\n                              field.onChange(imagePath);\n                              setCondominioImage(imagePath);\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"imagemPerfil\")}\n                    </div>\n                    {/* OBSERVACOES */}\n                    <div className=\"field col-12\">\n                      <label htmlFor=\"observacoes\">Observações</label>\n                      <Controller\n                        name=\"observacao\"\n                        control={control}\n                        defaultValue={formInputs.observacao}\n                        render={({ field, fieldState }) => (\n                          <InputTextarea\n                            id=\"observacoes\"\n                            rows={4}\n                            autoResize\n                            pt={{\n                              root: {\n                                className: classNames(\"p-inputtext-sm w-full\", {\n                                  \"p-invalid\": fieldState.error,\n                                }),\n                              },\n                            }}\n                            value={field.value}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLTextAreaElement>,\n                            ) => {\n                              field.onChange(e.currentTarget.value);\n                              setFormInputs({\n                                ...formInputs,\n                                observacao: e.currentTarget.value,\n                              });\n                            }}\n                            readOnly={isReadOnly}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"observacao\")}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex align-items-center justify-content-end gap-2\">\n                  {AuthService.userIsCondomino() ? (\n                    <>\n                      {\" \"}\n                      <Button\n                        label=\"Retornar\"\n                        type=\"button\"\n                        severity=\"success\"\n                        icon=\"pi pi-arrow-left\"\n                        onClick={async () => {\n                          await sleep(100).then(() => {\n                            navigate(\"/condominios/list\", { replace: true });\n                          });\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <Button label=\"Submit\" type=\"submit\" icon=\"pi pi-check\" />\n                      <Button\n                        label=\"Resetar\"\n                        type=\"button\"\n                        severity=\"secondary\"\n                        icon=\"pi pi-refresh\"\n                        onClick={() => {\n                          reset(initialFormState);\n                          setCondominioImage(undefined);\n                        }}\n                      />\n                      <Button\n                        label=\"Cancelar\"\n                        type=\"button\"\n                        severity=\"danger\"\n                        icon=\"pi pi-times\"\n                        onClick={async () => {\n                          await sleep(100).then(() => {\n                            navigate(\"/condominios/list\", { replace: true });\n                          });\n                        }}\n                      />\n                    </>\n                  )}\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n}\n","import { formatCEP } from \"libs/utils.ts\";\n\ninterface EnderecoProps {\n  id?: number;\n  rua?: string;\n  numero?: string;\n  complemento?: string;\n  bairro?: string;\n  cidade?: string;\n  uf?: string;\n  cep?: string;\n  pais?: string;\n  inline?: boolean;\n}\nexport const EnderecoField = (endereco: EnderecoProps) => {\n  const _inline = <br />;\n\n  return (\n    <div>\n      {endereco.rua}, {endereco.numero}.{endereco.inline ? \" \" : _inline}\n      {endereco?.complemento ? endereco?.complemento + \". \" : \"\"}\n      {endereco.bairro}\n      {endereco.inline ? \". \" : _inline}\n      {endereco.cidade}, {endereco?.uf?.toUpperCase()}.{\" \"}\n      {endereco.cep ? `CEP: ${formatCEP(endereco.cep)}` : \"\"}\n      {endereco.inline ? \". \" : _inline}\n      {endereco?.pais}.\n    </div>\n  );\n};\n","import { getImageUrlOnServer } from \"libs/file-utils.ts\";\nimport React from \"react\";\nimport { Avatar } from \"primereact/avatar\";\nimport { Button } from \"primereact/button\";\nimport { type DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { classNames } from \"primereact/utils\";\nimport { useLocation } from \"wouter\";\nimport { EnderecoField } from \"components/EnderecoField.tsx\";\nimport AuthService from \"@/services/auth.service.ts\";\n\nexport const condominioNameTemplate = (rowData: CondominioData) => {\n  return (\n    <>\n      <div className=\"flex align-items-center gap-2\">\n        <div>\n          <Avatar\n            imageAlt={rowData.nome}\n            image={\n              rowData.imagemPerfil\n                ? getImageUrlOnServer(rowData.imagemPerfil, rowData.uuid)\n                : \"\"\n            }\n            className=\"p-mr-2\"\n            style={{ verticalAlign: \"middle\" }}\n            size=\"large\"\n            shape=\"circle\"\n            icon=\"pi pi-user\"\n            pt={{ image: { width: 32 } }}\n          />\n        </div>\n        <div>\n          <div>\n            <span style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}>\n              {rowData.nome}\n            </span>\n          </div>\n          <div>\n            <span\n              className=\"text-color-secondary text-sm\"\n              style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n            >\n              {rowData.email}\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const cnpjFormatTemplate = (rowData: CondominioData) => {\n  return (\n    <InputMask\n      id=\"cnpj\"\n      mask=\"99.999.999/9999-99\"\n      placeholder=\"00.000.000/0000-00\"\n      value={rowData.cnpj}\n      autoClear={false}\n      disabled\n      readOnly\n      unmask\n      pt={{\n        root: {\n          className: classNames(\"border-none\", \"pl-0\"),\n        },\n      }}\n    ></InputMask>\n  );\n};\n\nexport const phoneFormatTemplate = (rowData: CondominioData) => {\n  return (\n    <InputMask\n      id=\"telefone\"\n      mask={rowData.contato?.length === 11 ? \"(99)99999-9999\" : \"(99)9999-9999\"}\n      placeholder=\"(00)00000-0000\"\n      value={rowData.contato}\n      autoClear={false}\n      disabled\n      readOnly\n      unmask\n      pt={{\n        root: {\n          className: classNames(\"border-none\", \"pl-0\"),\n        },\n      }}\n    ></InputMask>\n  );\n};\n\nexport const enderecoTemplate = (rowData: CondominioData) => {\n  return (\n    <EnderecoField\n      inline={false}\n      rua={rowData?.rua}\n      numero={rowData?.numero}\n      complemento={rowData?.complemento}\n      bairro={rowData?.bairro}\n      cidade={rowData?.cidade}\n      uf={rowData?.uf}\n      cep={rowData?.cep}\n      pais={rowData?.pais}\n    />\n  );\n};\n\ninterface ExportCondominioHeaderProps {\n  dt: React.RefObject<DataTable<DataTableValueArray>>;\n\n  showModalEdit: () => void;\n}\n\nexport const useExportHeader = ({\n  dt,\n  showModalEdit: showEditModal,\n}: ExportCondominioHeaderProps) => {\n  const [, navigate] = useLocation();\n\n  const exportCSV = () => {\n    dt?.current?.exportCSV({ selectionOnly: false });\n  };\n\n  return (\n    <>\n      <div className=\"flex align-items-center justify-content-start gap-2\">\n        <div className=\"flex align-items-center justify-content-end gap-2\">\n          {AuthService.userIsCondomino() ? null : (\n            <Button\n              type=\"button\"\n              label=\"Novo\"\n              icon=\"pi pi-plus\"\n              rounded\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                e.preventDefault();\n                showEditModal();\n                navigate(\"/condominios/add\", { replace: true });\n              }}\n              data-pr-tooltip=\"Novo\"\n              size=\"small\"\n            />\n          )}\n          <Button\n            type=\"button\"\n            icon=\"pi pi-file\"\n            severity=\"info\"\n            label=\"CSV\"\n            rounded\n            onClick={() => {\n              exportCSV();\n            }}\n            data-pr-tooltip=\"CSV\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Column } from \"primereact/column\";\nimport { DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { useLocation } from \"wouter\";\nimport {\n  cnpjFormatTemplate,\n  condominioNameTemplate,\n  enderecoTemplate,\n  phoneFormatTemplate,\n  useExportHeader,\n} from \"pages/condominio/table/table-options.tsx\";\nimport { generateUUID } from \"libs/utils.ts\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport { Toast } from \"primereact/toast\";\nimport { Dialog } from \"primereact/dialog\";\n\ninterface CondominiosTableProps {\n  condominios: CondominioData[] | null;\n  loading: boolean;\n  loadingMessage: string | null;\n\n  reload: (value: boolean) => void;\n}\n\nexport function CondominiosTable({\n  condominios,\n  loading,\n  loadingMessage,\n  reload,\n}: CondominiosTableProps) {\n  const dt = useRef<DataTable<DataTableValueArray>>(null);\n  const toast = useRef<Toast>(null);\n\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [selectedCondominio, setSelectedCondominio] =\n    useState<CondominioData>();\n  const [selectedBloco, setSelectedBloco] = useState<BlocoLabelsData>();\n\n  const [fireReload, setFireReload] = useState(false);\n\n  const [, navigate] = useLocation();\n\n  const showModalEdit = (user?: CondominioData) => {\n    setShowEditModal(true);\n    setSelectedCondominio(user);\n  };\n\n  const showModalDelete = (user: CondominioData) => {\n    setShowDeleteModal(true);\n    setSelectedCondominio(user);\n  };\n\n  function deleteCondominio() {\n    const _condominio = { ...selectedCondominio };\n\n    if (_condominio.id) {\n      CondominioService.getInstance()\n        .deleteCondominio(_condominio.id)\n        .then(() => {\n          setShowDeleteModal(false);\n          setSelectedCondominio(undefined);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successo\",\n            detail: \"Condômino Excluido\",\n            life: 3000,\n          });\n        });\n    }\n\n    console.log(\"condomino excluido:\\n\", JSON.stringify(_condominio, null, 4));\n    setFireReload((prev) => !prev);\n  }\n\n  const deleteCondominioDialogFooter = (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          setShowDeleteModal(false);\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={deleteCondominio}\n      />\n    </>\n  );\n\n  useEffect(() => {\n    reload(showEditModal);\n  }, [reload, showEditModal]);\n\n  useEffect(() => {\n    reload(showDeleteModal);\n  }, [reload, showDeleteModal]);\n\n  useEffect(() => {\n    setSelectedBloco(selectedBloco);\n  }, [selectedBloco, setSelectedBloco]);\n\n  useEffect(() => {\n    reload(fireReload);\n  }, [fireReload, setFireReload, reload]);\n\n  return (\n    <>\n      <div className=\"card\">\n        {loading ? (\n          <div className=\"spinner-wrapper\">\n            {loadingMessage}\n            <ProgressSpinner\n              aria-label=\"Loading\"\n              style={{ width: \"40px\", height: \"40px\", position: \"absolute\" }}\n              pt={{\n                spinner: { style: { animationDuration: \".5s\" } },\n                circle: {\n                  style: {\n                    stroke: \"#2E0357\",\n                    strokeWidth: 2,\n                    animation: \"none\",\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : null}\n        <Toast ref={toast} />\n        <DataTable\n          value={condominios ?? undefined}\n          ref={dt}\n          dataKey={\"id\"}\n          header={useExportHeader({ dt, showModalEdit })}\n          columnResizeMode=\"expand\"\n          resizableColumns\n          showGridlines\n          stripedRows\n          size=\"small\"\n          selectionMode={\"single\"}\n          // selectAll={true}\n          dragSelection={true}\n          selection={selectedCondominio}\n          showSelectAll={true}\n          paginator\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} registro(s)\"\n          rows={10}\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          tableStyle={{ minWidth: \"50rem\" }}\n          onSelectionChange={(e) => {\n            setSelectedCondominio(e.value as CondominioData);\n          }}\n        >\n          <Column\n            selectionMode={\"multiple\"}\n            headerStyle={{ width: \"3rem\" }}\n          ></Column>\n\n          <Column\n            field=\"id\"\n            header=\"ID\"\n            sortable\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ maxWidth: \"4rem\" }}\n          />\n          <Column\n            field=\"nome\"\n            header=\"Nome\"\n            sortable\n            style={{ minWidth: \"14rem\" }}\n            body={condominioNameTemplate}\n          ></Column>\n          <Column\n            field=\"cnpj\"\n            header=\"CNPJ\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"10.5rem\" }}\n            body={cnpjFormatTemplate}\n          ></Column>\n          <Column\n            field=\"telefone\"\n            header=\"Contato\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={phoneFormatTemplate}\n          ></Column>\n          <Column\n            field=\"enderecoId\"\n            header=\"Endereço\"\n            bodyClassName=\"text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={enderecoTemplate}\n          />\n          <Column\n            key={generateUUID()}\n            header=\"Ações\"\n            bodyClassName=\"text-center\"\n            body={(data: CondominioData) => (\n              <span className=\"p-buttonset\">\n                <Button\n                  className=\"mr-2\"\n                  pt={{\n                    root: { style: { fontSize: \"0.75rem\", padding: \"0.4rem\" } },\n                  }}\n                  label={\n                    AuthService.userIsCondomino() ? \"Visualizar\" : \"Editar\"\n                  }\n                  icon=\"pi pi-pencil\"\n                  size=\"small\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                    e.preventDefault();\n                    // showModalEdit(data);\n                    navigate(\"/condominios/add/\" + data.id, { replace: true });\n                  }}\n                />\n                {!AuthService.userIsCondomino() ? (\n                  <Button\n                    pt={{\n                      root: {\n                        style: { fontSize: \"0.75rem\", padding: \"0.4rem\" },\n                      },\n                    }}\n                    label=\"Excluir\"\n                    icon=\"pi pi-trash\"\n                    severity=\"danger\"\n                    size=\"small\"\n                    onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.preventDefault();\n                      showModalDelete(data);\n                    }}\n                  />\n                ) : null}\n              </span>\n            )}\n          />\n        </DataTable>\n        {showDeleteModal && selectedCondominio && (\n          <>\n            {/* Delete Financeiro Dialog */}\n            <Dialog\n              visible={showDeleteModal}\n              style={{ width: \"450px\" }}\n              header=\"Confirmação\"\n              modal\n              footer={deleteCondominioDialogFooter}\n              onHide={() => {\n                setShowDeleteModal(false);\n              }}\n            >\n              <div className=\"flex align-items-center justify-content-center\">\n                <i\n                  className=\"pi pi-exclamation-triangle mr-3\"\n                  style={{ fontSize: \"2rem\" }}\n                />\n                {selectedCondominio && (\n                  <span>\n                    Você tem certeza que deseja excluir o item{\" \"}\n                    <b>{selectedCondominio.nome}</b>?\n                  </span>\n                )}\n              </div>\n            </Dialog>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { useDataReducer } from \"@/libs/data-utils\";\nimport { type FunctionComponent, useEffect, useState } from \"react\";\nimport { type RouteComponentProps } from \"wouter\";\nimport { CondominiosTable } from \"pages/condominio/table/table.tsx\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport AuthService, { UsuarioField } from \"@/services/auth.service.ts\";\nimport { sleep } from \"libs/utils.ts\";\n\ninterface CondominiosListProps extends RouteComponentProps {\n  title?: string;\n}\n\nexport const CondominiosList: FunctionComponent<CondominiosListProps> = ({\n  title = \"Condomínios\",\n}: CondominiosListProps) => {\n  const [selectedEndereco] = useState<string>();\n  const { state, dispatch } = useDataReducer<CondominioData>();\n\n  const [reload, setReload] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const condominioID = AuthService.getCurrentUserField(\n          UsuarioField.IdCondominio,\n        );\n        let response: CondominioData[] = [];\n\n        if (AuthService.userIsCondomino()) {\n          if (condominioID) {\n            response = [\n              await CondominioService.getInstance().getCondominioById(\n                condominioID as number,\n              ),\n            ];\n          }\n        } else if (!AuthService.userIsCondomino()) {\n          response =\n            await CondominioService.getInstance().getAllCondominios(\n              selectedEndereco,\n            );\n        } else {\n          response = [];\n        }\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n  }, [dispatch, selectedEndereco, reload]);\n\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <div>\n          <CondominiosTable\n            condominios={state.dataArray}\n            loading={state.loading}\n            loadingMessage={state.error}\n            reload={(value) => {\n              sleep(1000).then(() => {\n                setReload(value);\n              });\n            }}\n          />\n        </div>\n      </>\n    </DefaultLayout>\n  );\n};\n","import { formatCEP } from \"libs/utils\";\nimport React from \"react\";\nimport { Button } from \"primereact/button\";\nimport { type DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { useLocation } from \"wouter\";\n\nexport const logradouroTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex  gap-2\">\n        {rowData.rua}, {rowData.numero}\n      </div>\n    </>\n  );\n};\n\nexport const complementoTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.complemento}</div>\n    </>\n  );\n};\n\nexport const bairroTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.bairro}</div>\n    </>\n  );\n};\n\nexport const municipioTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.cidade}</div>\n    </>\n  );\n};\n\nexport const ufTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.uf?.toUpperCase()}</div>\n    </>\n  );\n};\n\nexport const cepTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{formatCEP(rowData.cep)}</div>\n    </>\n  );\n};\n\nexport const paisTemplate = (rowData: EnderecoData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.pais}</div>\n    </>\n  );\n};\n\ninterface ExportEnderecoHeaderProps {\n  dt: React.RefObject<DataTable<DataTableValueArray>>;\n\n  showModalEdit: () => void;\n}\n\nexport const useExportHeader = ({\n  dt,\n  showModalEdit: showEditModal,\n}: ExportEnderecoHeaderProps) => {\n  const [, navigate] = useLocation();\n\n  const exportCSV = () => {\n    dt?.current?.exportCSV({ selectionOnly: false });\n  };\n\n  return (\n    <>\n      <div className=\"flex align-items-center justify-content-start gap-2\">\n        <Button\n          type=\"button\"\n          label=\"Novo\"\n          icon=\"pi pi-plus\"\n          rounded\n          onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n            e.preventDefault();\n            showEditModal();\n            navigate(\"/enderecos/add\", { replace: true });\n          }}\n          data-pr-tooltip=\"Novo\"\n          size=\"small\"\n        />\n        <Button\n          type=\"button\"\n          icon=\"pi pi-file\"\n          severity=\"info\"\n          label=\"CSV\"\n          rounded\n          onClick={() => {\n            exportCSV();\n          }}\n          data-pr-tooltip=\"CSV\"\n          size=\"small\"\n        />\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Column } from \"primereact/column\";\nimport { DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { useLocation } from \"wouter\";\nimport { generateUUID } from \"libs/utils.ts\";\nimport {\n  bairroTemplate,\n  cepTemplate,\n  complementoTemplate,\n  logradouroTemplate,\n  municipioTemplate,\n  paisTemplate,\n  ufTemplate,\n  useExportHeader,\n} from \"pages/endereco/table/table-options.tsx\";\nimport { Toast } from \"primereact/toast\";\nimport { EnderecoService } from \"libs/api/endereco-api.ts\";\nimport { Dialog } from \"primereact/dialog\";\n\ninterface EnderecoTableProps {\n  enderecos: EnderecoData[] | null;\n  loading: boolean;\n  loadingMessage: string | null;\n\n  reload: (value: boolean) => void;\n}\n\nexport function EnderecoTable({\n  enderecos,\n  loading,\n  loadingMessage,\n  reload,\n}: EnderecoTableProps) {\n  const dt = useRef<DataTable<DataTableValueArray>>(null);\n\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [selectedEndereco, setSelectedEndereco] = useState<EnderecoData>();\n\n  const toast = useRef<Toast>(null);\n\n  const [fireReload, setFireReload] = useState(false);\n\n  const [, navigate] = useLocation();\n\n  const showModalEdit = (endereco?: EnderecoData) => {\n    setShowEditModal(true);\n    setSelectedEndereco(endereco);\n  };\n\n  const showModalDelete = (condition: boolean) => {\n    setShowDeleteModal(condition);\n  };\n\n  const deleteEndereco = (endereco: EnderecoData) => {\n    if (endereco?.id) {\n      EnderecoService.getInstance()\n        .deleteEndereco(endereco.id)\n        .then(() => {\n          showModalDelete(false);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successo\",\n            detail: \"Endereco excluido com sucesso!\",\n            life: 2000,\n          });\n        })\n        .catch((err) => {\n          toast.current?.show({\n            severity: \"error\",\n            summary: \"Erro\",\n            detail: `Endereco não foi excluido! Provavelmente está em uso! ${err.message}`,\n            life: 2000,\n          });\n        });\n    } else {\n      toast.current?.show({\n        severity: \"error\",\n        summary: \"Erro\",\n        detail: \"Endereco não foi excluido!\",\n        life: 2000,\n      });\n    }\n\n    console.log(\"financeiro excluido:\\n\", JSON.stringify(endereco, null, 4));\n    setFireReload((prev) => !prev);\n  };\n\n  const deleteEnderecoDialogFooter = (endereco: EnderecoData) => (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          showModalDelete(false);\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={() => {\n          deleteEndereco(endereco);\n        }}\n      />\n    </>\n  );\n\n  useEffect(() => {\n    reload(fireReload);\n  }, [fireReload, setFireReload, reload]);\n\n  useEffect(() => {\n    reload(showEditModal);\n  }, [reload, showEditModal]);\n\n  useEffect(() => {\n    reload(showDeleteModal);\n  }, [reload, showDeleteModal]);\n\n  return (\n    <>\n      <div className=\"card\">\n        {loading ? (\n          <div className=\"spinner-wrapper\">\n            {loadingMessage}\n            <ProgressSpinner\n              aria-label=\"Loading\"\n              style={{ width: \"40px\", height: \"40px\", position: \"absolute\" }}\n              pt={{\n                spinner: { style: { animationDuration: \".5s\" } },\n                circle: {\n                  style: {\n                    stroke: \"#2E0357\",\n                    strokeWidth: 2,\n                    animation: \"none\",\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : null}\n        <Toast ref={toast} />\n        <DataTable\n          value={enderecos ?? undefined}\n          ref={dt}\n          dataKey={\"id\"}\n          header={useExportHeader({ dt, showModalEdit })}\n          columnResizeMode=\"expand\"\n          resizableColumns\n          showGridlines\n          stripedRows\n          size=\"small\"\n          selectionMode={\"single\"}\n          // selectAll={true}\n          dragSelection={true}\n          selection={selectedEndereco}\n          showSelectAll={true}\n          paginator\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} registro(s)\"\n          rows={10}\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          tableStyle={{ minWidth: \"50rem\" }}\n          onSelectionChange={(e) => {\n            setSelectedEndereco(e.value as EnderecoData);\n          }}\n        >\n          <Column\n            selectionMode={\"multiple\"}\n            headerStyle={{ width: \"3rem\" }}\n          ></Column>\n\n          <Column\n            field=\"id\"\n            header=\"ID\"\n            sortable\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ maxWidth: \"4rem\" }}\n          />\n          <Column\n            field=\"logradouro\"\n            header=\"Logradouro\"\n            sortable\n            style={{ minWidth: \"14rem\" }}\n            body={logradouroTemplate}\n          ></Column>\n          <Column\n            field=\"complemento\"\n            header=\"Complemento\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"10.5rem\" }}\n            body={complementoTemplate}\n          ></Column>\n          <Column\n            field=\"Bairro\"\n            header=\"Bairro\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={bairroTemplate}\n          ></Column>\n          <Column\n            field=\"cidade\"\n            header=\"Município\"\n            bodyClassName=\"text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={municipioTemplate}\n          />\n          <Column\n            field=\"uf\"\n            header=\"UF\"\n            bodyClassName=\"text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={ufTemplate}\n          />\n          <Column\n            field=\"cep\"\n            header=\"CEP\"\n            bodyClassName=\"text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={cepTemplate}\n          />\n          <Column\n            field=\"pais\"\n            header=\"País\"\n            bodyClassName=\"text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={paisTemplate}\n          />\n          <Column\n            key={generateUUID()}\n            header=\"Ações\"\n            bodyClassName=\"text-center\"\n            body={(data: EnderecoData) => (\n              <>\n                {/* Delete Financeiro Dialog */}\n                <Dialog\n                  visible={showDeleteModal}\n                  style={{ width: \"450px\" }}\n                  header=\"Confirmação\"\n                  modal\n                  footer={deleteEnderecoDialogFooter(data)}\n                  onHide={() => {\n                    setShowDeleteModal(false);\n                  }}\n                >\n                  <div className=\"flex align-items-center justify-content-center\">\n                    <i\n                      className=\"pi pi-exclamation-triangle mr-3\"\n                      style={{ fontSize: \"2rem\" }}\n                    />\n                    {data && (\n                      <span>\n                        Você tem certeza que deseja excluir o endereço:{\"\\n\"}\n                        <b>{data.rua + \", \" + data.numero}</b>?\n                      </span>\n                    )}\n                  </div>\n                </Dialog>\n                <span className=\"p-buttonset\">\n                  <Button\n                    className=\"mr-2\"\n                    pt={{\n                      root: {\n                        style: { fontSize: \"0.75rem\", padding: \"0.4rem\" },\n                      },\n                    }}\n                    label=\"Editar\"\n                    icon=\"pi pi-pencil\"\n                    size=\"small\"\n                    onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.preventDefault();\n                      navigate(\"/enderecos/add/\" + data.id, { replace: true });\n                    }}\n                  />\n                  <Button\n                    pt={{\n                      root: {\n                        style: { fontSize: \"0.75rem\", padding: \"0.4rem\" },\n                      },\n                    }}\n                    label=\"Excluir\"\n                    icon=\"pi pi-trash\"\n                    severity=\"danger\"\n                    size=\"small\"\n                    onClick={() => {\n                      showModalDelete(true);\n                    }}\n                  />\n                </span>\n              </>\n            )}\n          />\n        </DataTable>\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { useDataReducer } from \"@/libs/data-utils\";\nimport { type FunctionComponent, useEffect, useState } from \"react\";\nimport { type RouteComponentProps } from \"wouter\";\nimport { EnderecoService } from \"libs/api/endereco-api.ts\";\nimport { EnderecoTable } from \"pages/endereco/table/table.tsx\";\nimport { sleep } from \"libs/utils.ts\";\n\ninterface EnderecoListProps extends RouteComponentProps {\n  title?: string;\n}\n\nexport const EnderecosList: FunctionComponent<EnderecoListProps> = ({\n  title = \"Enderecos\",\n}: EnderecoListProps) => {\n  const [selectedEndereco] = useState<string>();\n  const { state, dispatch } = useDataReducer<EnderecoData>();\n\n  const [reload, setReload] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = await EnderecoService.getInstance().getAllEnderecos();\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n  }, [dispatch, selectedEndereco, reload]);\n\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <div>\n          <EnderecoTable\n            enderecos={state.dataArray}\n            loading={state.loading}\n            loadingMessage={state.error}\n            reload={(value) => {\n              sleep(1000).then(() => {\n                setReload(value);\n              });\n            }}\n          />\n        </div>\n      </>\n    </DefaultLayout>\n  );\n};\n","// Copyright 2023 Alberto L. Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { useEffect, useState } from \"react\";\n\nexport interface EnderecoFormInputs {\n  id?: number;\n  rua: string;\n  numero: string;\n  complemento?: string;\n  bairro: string;\n  cidade: string;\n  uf?: string;\n  cep?: string;\n  pais?: string;\n}\n\nexport const initialFormState: EnderecoFormInputs = {\n  rua: \"\",\n  numero: \"\",\n  complemento: undefined,\n  bairro: \"\",\n  cidade: \"\",\n  uf: undefined,\n  cep: undefined,\n  pais: undefined,\n};\n\nconst useFormInputs = (initialState: EnderecoData | null) => {\n  const [formInputs, setFormInputs] = useState<EnderecoFormInputs>(\n    initialState ?? initialFormState,\n  );\n\n  const resetEnderecoForm = () => {\n    setFormInputs(initialFormState);\n  };\n\n  useEffect(() => {\n    setFormInputs({\n      rua: initialState?.rua ?? \"\",\n      numero: initialState?.numero ?? \"\",\n      complemento: initialState?.complemento ?? undefined,\n      bairro: initialState?.bairro ?? \"\",\n      cidade: initialState?.cidade ?? \"\",\n      uf: initialState?.uf ?? undefined,\n      cep: initialState?.cep ?? undefined,\n      pais: initialState?.pais ?? undefined,\n    });\n  }, [initialState]);\n\n  return {\n    formInputs,\n    setFormInputs,\n    resetForm: resetEnderecoForm,\n  };\n};\n\nexport default useFormInputs;\n","import { type AxiosResponse } from \"axios\";\nimport { apiInstance } from \"libs/api/base-api.ts\";\nimport { APIError } from \"libs/errors.ts\";\n\nexport class CEPService {\n  private static instance: CEPService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): CEPService {\n    if (!CEPService.instance) {\n      CEPService.instance = new CEPService();\n    }\n    return CEPService.instance;\n  }\n\n  getCep = async (cep: string): Promise<EnderecoViaCEPData> => {\n    const request: AxiosResponse<EnderecoViaCEPData> = await apiInstance({\n      method: \"GET\",\n      // url: `https://viacep.com.br/ws/${cep}/json/`,\n      url: `https://opencep.com/v1/${cep}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request?.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar o CEP informado: [${cep}].`,\n        cause: request?.statusText,\n        details: {\n          errorCode: request?.status ?? -1,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n}\n","type CodigosEstados = Record<string, string>;\n\nconst CODIGOS_ESTADOS: CodigosEstados = {\n  AC: \"Acre\",\n  AL: \"Alagoas\",\n  AP: \"Amapá\",\n  AM: \"Amazonas\",\n  BA: \"Bahia\",\n  CE: \"Ceará\",\n  DF: \"Distrito Federal\",\n  ES: \"Espírito Santo\",\n  GO: \"Goiás\",\n  MA: \"Maranhão\",\n  MT: \"Mato Grosso\",\n  MS: \"Mato Grosso do Sul\",\n  MG: \"Minas Gerais\",\n  PA: \"Pará\",\n  PB: \"Paraíba\",\n  PR: \"Paraná\",\n  PE: \"Pernambuco\",\n  PI: \"Piauí\",\n  RJ: \"Rio de Janeiro\",\n  RN: \"Rio Grande do Norte\",\n  RS: \"Rio Grande do Sul\",\n  RO: \"Rondônia\",\n  RR: \"Roraima\",\n  SC: \"Santa Catarina\",\n  SP: \"São Paulo\",\n  SE: \"Sergipe\",\n  TO: \"Tocantins\",\n};\n\nexport const getNomeUF = async (uf: string): Promise<string | undefined> => {\n  const formattedUF = uf.toUpperCase();\n  return CODIGOS_ESTADOS[formattedUF];\n};\n\nexport const getUFKeys = (): string[] => {\n  // Extract only the keys from CODIGOS_ESTADOS\n  return Object.keys(CODIGOS_ESTADOS);\n};\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { sleep } from \"@/libs/utils\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { type Toast } from \"primereact/toast\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, type FieldErrors, useForm } from \"react-hook-form\";\nimport { useLocation } from \"wouter\";\nimport { type EnderecoFormInputs, initialFormState } from \"./utils/form-hooks\";\nimport { EnderecoService } from \"libs/api/endereco-api.ts\";\nimport { CEPService } from \"libs/api/cep-api.ts\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { getUFKeys } from \"libs/braziliam-ufs.ts\";\n\ninterface AddEditEnderecoState {\n  id: string | null;\n  title?: string;\n}\n\nexport function EnderecosAdd({ id, title }: AddEditEnderecoState) {\n  const enderecosDataReducer = useDataReducer<EnderecoData>();\n\n  const [formInputs, setFormInputs] =\n    useState<EnderecoFormInputs>(initialFormState);\n\n  const toast = useRef<Toast | null>(null);\n\n  const [, navigate] = useLocation();\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<EnderecoFormInputs>({\n    mode: \"onChange\",\n    defaultValues: formInputs,\n    values: formInputs,\n  });\n\n  const requiredFieldError = \"Este campo é obrigatório.\";\n\n  const getFormErrorMessage = (name: keyof FieldErrors<EnderecoFormInputs>) => {\n    return errors[name] ? (\n      <small className=\"p-error\">{errors[name]?.message}</small>\n    ) : null;\n  };\n\n  const showSuccessToast = () => {\n    toast.current?.show({\n      severity: \"success\",\n      summary: \"Sucesso\",\n      detail: \"Operação realizada com sucesso!\",\n    });\n  };\n\n  const handleFormSubmit = (data: EnderecoFormInputs) => {\n    console.log(\"Form Data:\", data);\n\n    const _endereco: EnderecoData = {\n      id: enderecosDataReducer.state.data?.id,\n      rua: data?.rua,\n      numero: data?.numero,\n      complemento: data?.complemento,\n      bairro: data?.bairro,\n      cidade: data?.cidade,\n      uf: data?.uf,\n      cep: data?.cep,\n      pais: data?.pais,\n    };\n\n    try {\n      console.log(\"onSubmit_condominio: \", JSON.stringify(_endereco, null, 4));\n\n      EnderecoService.getInstance()\n        .addUpdateEndereco(_endereco)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      showSuccessToast();\n    } catch (e) {\n      console.log(\"ERRORS: :-(\\n\\n\" + JSON.stringify(errors));\n    } finally {\n      sleep(100).then(() => {\n        // reset();\n        navigate(\"/enderecos/list\", { replace: true });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fetchEnderecoData = async () => {\n      enderecosDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = await EnderecoService.getInstance().getEnderecoByID(\n          id ?? \"\",\n        );\n        enderecosDataReducer.dispatch({\n          type: \"FETCH_DATA_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        enderecosDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchEnderecoData().then((r) => r);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getCEPFromApi = (cep?: string) => {\n    try {\n      CEPService.getInstance()\n        .getCep(cep ?? \"\")\n        .then((data) => {\n          setFormInputs({\n            ...formInputs,\n            rua: data?.logradouro ?? formInputs.rua,\n            complemento: data?.complemento\n              ? data?.complemento + \" | \" + formInputs.complemento\n              : formInputs.complemento,\n            bairro: data?.bairro ?? formInputs.bairro,\n            cidade: data?.localidade ?? formInputs.cidade,\n            uf: data?.uf ?? formInputs.uf,\n          });\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    // Populate form fields with enderecoData when available\n    if (enderecosDataReducer.state.data) {\n      setFormInputs({\n        rua: enderecosDataReducer.state.data.rua ?? undefined,\n        numero: enderecosDataReducer.state.data.numero ?? undefined,\n        complemento: enderecosDataReducer.state.data.complemento ?? undefined,\n        bairro: enderecosDataReducer.state.data.bairro ?? undefined,\n        cidade: enderecosDataReducer.state.data.cidade ?? undefined,\n        uf: enderecosDataReducer.state.data.uf ?? undefined,\n        cep: enderecosDataReducer.state.data.cep ?? undefined,\n        pais: enderecosDataReducer.state.data.pais ?? undefined,\n      });\n      // setSelectedCEP(enderecosDataReducer.state.data.cep);\n    }\n  }, [enderecosDataReducer.state.data]);\n\n  return (\n    <DefaultLayout title={title ?? `${id ? \"Editar\" : \"Adicionar\"} Condômino`}>\n      <div className=\"card\">\n        <div>\n          {enderecosDataReducer.state.loading ? (\n            <p>Loading...</p>\n          ) : enderecosDataReducer.state.error ? (\n            <p>{enderecosDataReducer.state.error}</p>\n          ) : (\n            <div>\n              <form id=\"form1\" onSubmit={handleSubmit(handleFormSubmit)}>\n                <div className=\"pt-4\">\n                  <div className=\"formgrid grid\">\n                    {/* RUA */}\n                    <div className=\"field col-12 md:col-4\">\n                      <label htmlFor=\"rua\">Rua</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-user\" />\n                        <Controller\n                          name=\"rua\"\n                          control={control}\n                          defaultValue={formInputs.rua}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id={field.name}\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  rua: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"rua\")}\n                    </div>\n                    {/* NUMERO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"numero\">Número</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-at\" />\n                        <Controller\n                          name=\"numero\"\n                          control={control}\n                          defaultValue={formInputs.numero}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"numero\"\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  numero: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"numero\")}\n                    </div>\n                    {/* COMPLEMENTO */}\n                    <div className=\"field col-12 md:col-4\">\n                      <label htmlFor=\"complemento\">Complemento</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-id-card\" />\n                        <Controller\n                          name=\"complemento\"\n                          control={control}\n                          defaultValue={formInputs.complemento}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"complemento\"\n                              type=\"text\"\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  complemento: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"complemento\")}\n                    </div>\n                    {/* BAIRRO */}\n                    <div className=\"field col-12 md:col-4\">\n                      <label htmlFor=\"bairro\">Bairro</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-phone\" />\n                        <Controller\n                          name=\"bairro\"\n                          control={control}\n                          defaultValue={formInputs.bairro}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"bairro\"\n                              type=\"text\"\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  bairro: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"bairro\")}\n                    </div>\n                    {/* MUNICIPIO */}\n                    <div className=\"field col-12 md:col-4\">\n                      <label htmlFor=\"cidade\">Município</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"cidade\"\n                          control={control}\n                          defaultValue={formInputs.cidade}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"cidade\"\n                              type={\"text\"}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  cidade: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"cidade\")}\n                    </div>\n                    {/* UF */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"uf\">UF</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"uf\"\n                          control={control}\n                          render={({ field, fieldState }) => (\n                            <>\n                              <Dropdown\n                                id=\"uf\"\n                                value={field.value}\n                                options={getUFKeys()}\n                                optionLabel={\"\"}\n                                placeholder=\"Selecione o estado\"\n                                className={classNames(\"p-inputtext-sm w-full\", {\n                                  \"p-invalid\": fieldState.error,\n                                })}\n                                emptyMessage={\n                                  !getUFKeys()\n                                    ? \"Sem resultados\"\n                                    : \"Selecione o estado!\"\n                                }\n                                onChange={(e: DropdownChangeEvent) => {\n                                  field.onChange(e.value);\n                                  setFormInputs({\n                                    ...formInputs,\n                                    uf: e.value,\n                                  });\n                                }}\n                              />\n                            </>\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"uf\")}\n                    </div>\n                    {/* CEP */}\n                    <div className=\"field col-12 md:col-4\">\n                      <label htmlFor=\"cep\">CEP</label>\n                      <div className=\"p-inputgroup flex-1\">\n                        <Controller\n                          name=\"cep\"\n                          control={control}\n                          defaultValue={formInputs.cep}\n                          // rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <>\n                              <InputText\n                                {...field}\n                                id=\"cep\"\n                                type={\"text\"}\n                                value={field.value}\n                                pt={{\n                                  root: {\n                                    className: classNames(\n                                      \"p-inputtext-sm w-full\",\n                                      {\n                                        \"p-invalid\": fieldState.error,\n                                      },\n                                    ),\n                                  },\n                                }}\n                                onInput={(\n                                  e: React.FormEvent<HTMLInputElement>,\n                                ) => {\n                                  e.preventDefault();\n                                  field.onChange(e.currentTarget.value);\n                                  setFormInputs({\n                                    ...formInputs,\n                                    cep: e.currentTarget.value,\n                                  });\n                                }}\n                                onBlur={(\n                                  e: React.FocusEvent<HTMLInputElement>,\n                                ) => {\n                                  e.preventDefault();\n                                  getCEPFromApi(formInputs.cep);\n                                }}\n                              />\n                              <Button\n                                icon=\"pi pi-search\"\n                                className=\"p-button-warning\"\n                                onClick={(\n                                  e: React.MouseEvent<HTMLButtonElement>,\n                                ) => {\n                                  e.preventDefault();\n                                  getCEPFromApi(formInputs.cep);\n                                }}\n                              />\n                            </>\n                          )}\n                        />\n                      </div>\n                      {getFormErrorMessage(\"cep\")}\n                    </div>\n                    {/* PAIS */}\n                    {/* TODO: MAKE CEP INTERNET AUTOFILL HERE! */}\n                    <div className=\"field col-12 md:col-4\">\n                      <label htmlFor=\"pais\">País</label>\n                      <Controller\n                        name=\"pais\"\n                        control={control}\n                        defaultValue={formInputs.pais}\n                        render={({ field, fieldState }) => (\n                          <InputText\n                            {...field}\n                            id=\"pais\"\n                            type={\"text\"}\n                            value={field.value}\n                            pt={{\n                              root: {\n                                className: classNames(\"p-inputtext-sm w-full\", {\n                                  \"p-invalid\": fieldState.error,\n                                }),\n                              },\n                            }}\n                            onInput={(e: React.FormEvent<HTMLInputElement>) => {\n                              field.onChange(e.currentTarget.value);\n                              setFormInputs({\n                                ...formInputs,\n                                pais: e.currentTarget.value,\n                              });\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"pais\")}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex align-items-center justify-content-end gap-2\">\n                  <Button label=\"Submit\" type=\"submit\" icon=\"pi pi-check\" />\n                  <Button\n                    label=\"Resetar\"\n                    type=\"button\"\n                    severity=\"secondary\"\n                    icon=\"pi pi-refresh\"\n                    onClick={() => {\n                      reset(initialFormState);\n                    }}\n                  />\n                  <Button\n                    label=\"Cancelar\"\n                    type=\"button\"\n                    severity=\"danger\"\n                    icon=\"pi pi-times\"\n                    onClick={async () => {\n                      await sleep(100).then(() => {\n                        navigate(\"/enderecos/list\", { replace: true });\n                      });\n                    }}\n                  />{\" \"}\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n}\n","// Copyright 2023 Alberto L. Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { useEffect, useState } from \"react\";\n\nexport interface UnidadeFormInputs {\n  bloco: string;\n  numero: string;\n  observacao?: string;\n  idCondominio?: number;\n}\n\nexport const initialFormState: UnidadeFormInputs = {\n  bloco: \"\",\n  numero: \"\",\n  observacao: undefined,\n  idCondominio: undefined,\n};\n\nconst useFormInputs = (initialState: UnidadeData | null) => {\n  const [formInputs, setFormInputs] = useState<UnidadeFormInputs>(\n    initialState ?? initialFormState,\n  );\n\n  const resetUnidadeForm = () => {\n    setFormInputs(initialFormState);\n  };\n\n  useEffect(() => {\n    setFormInputs({\n      bloco: initialState?.bloco ?? \"\",\n      numero: initialState?.numero ?? \"\",\n      observacao: initialState?.observacao ?? undefined,\n      idCondominio: initialState?.idCondominio ?? undefined,\n    });\n  }, [initialState]);\n\n  return {\n    formInputs,\n    setFormInputs,\n    resetForm: resetUnidadeForm,\n  };\n};\n\nexport default useFormInputs;\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { sleep } from \"@/libs/utils\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { type Toast } from \"primereact/toast\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, type FieldErrors, useForm } from \"react-hook-form\";\nimport { useLocation } from \"wouter\";\nimport { initialFormState, type UnidadeFormInputs } from \"./utils/form-hooks\";\nimport { UnidadeService } from \"libs/api/unidade-api.ts\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\n\ninterface AddEditUnidadeState {\n  id: string | null;\n  title?: string;\n}\n\nexport function UnidadesAdd({ id, title }: AddEditUnidadeState) {\n  const unidadeDataReducer = useDataReducer<UnidadeData>();\n  const condominioDataReducer = useDataReducer<CondominioData>();\n\n  const [formInputs, setFormInputs] =\n    useState<UnidadeFormInputs>(initialFormState);\n\n  const toast = useRef<Toast | null>(null);\n\n  const [, navigate] = useLocation();\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<UnidadeFormInputs>({\n    mode: \"onChange\",\n    defaultValues: formInputs,\n    values: formInputs,\n  });\n\n  const requiredFieldError = \"Este campo é obrigatório.\";\n\n  const getFormErrorMessage = (name: keyof FieldErrors<UnidadeFormInputs>) => {\n    return errors[name] ? (\n      <small className=\"p-error\">{errors[name]?.message}</small>\n    ) : null;\n  };\n\n  const showSuccessToast = () => {\n    toast.current?.show({\n      severity: \"success\",\n      summary: \"Sucesso\",\n      detail: \"Operação realizada com sucesso!\",\n    });\n  };\n\n  // const handleFormSubmit2 = (data: CondominioFormInputs) => {\n  //   console.log(\"Form Data:\", data);\n  //   if (data.idEndereco && data.idEndereco > 9999999999999) {\n  //     handleFormSubmit(data);\n  //   }\n  // };\n\n  const handleFormSubmit = (data: UnidadeFormInputs) => {\n    console.log(\"Form Data:\", data);\n\n    const _unidade: UnidadeData = {\n      id: unidadeDataReducer.state.data?.id,\n      bloco: data.bloco,\n      numero: data.numero,\n      observacao: data.observacao,\n      idCondominio: data.idCondominio,\n    };\n\n    try {\n      console.log(\"onSubmit_unidade: \", JSON.stringify(_unidade, null, 4));\n\n      UnidadeService.getInstance()\n        .addUpdateUnidade(_unidade)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      showSuccessToast();\n    } catch (e) {\n      console.log(\"ERRORS: :-(\\n\\n\" + JSON.stringify(errors));\n    } finally {\n      sleep(100).then(() => {\n        // reset();\n        navigate(\"/unidades/list\", { replace: true });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fetchUnidadeData = async () => {\n      unidadeDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = id\n          ? await UnidadeService.getInstance().getUnidadeById(id)\n          : null;\n        unidadeDataReducer.dispatch({\n          type: \"FETCH_DATA_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        unidadeDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchUnidadeData().then((r) => r);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const fetchCondominioData = async () => {\n      condominioDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response =\n          await CondominioService.getInstance().getAllCondominios();\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchCondominioData().then((r) => r);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [unidadeDataReducer.state.data]);\n\n  // Load user image from URL (if available)\n  useEffect(() => {\n    // Populate form fields with condominoData when available\n    if (unidadeDataReducer.state.data) {\n      // setFormInputs(state.data);\n\n      setFormInputs({\n        bloco: unidadeDataReducer.state.data.bloco ?? \"\",\n        numero: unidadeDataReducer.state.data.numero ?? \"\",\n        observacao: unidadeDataReducer.state.data.observacao ?? undefined,\n        idCondominio: unidadeDataReducer.state.data.idCondominio ?? undefined,\n      });\n    }\n  }, [unidadeDataReducer.state.data]);\n\n  return (\n    <DefaultLayout title={title ?? `${id ? \"Editar\" : \"Adicionar\"} Condômino`}>\n      <div className=\"card\">\n        <div>\n          {unidadeDataReducer.state.loading ? (\n            <p>Loading...</p>\n          ) : unidadeDataReducer.state.error ? (\n            <p>{unidadeDataReducer.state.error}</p>\n          ) : (\n            <div>\n              <form id=\"form1\" onSubmit={handleSubmit(handleFormSubmit)}>\n                <div className=\"pt-4\">\n                  <div className=\"formgrid grid\">\n                    {/* BLOCO */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"bloco\">Bloco</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-user\" />\n                        <Controller\n                          name=\"bloco\"\n                          control={control}\n                          defaultValue={formInputs.bloco}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id={field.name}\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  bloco: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"bloco\")}\n                    </div>\n                    {/* E-MAIL */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"numero\">Número</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-at\" />\n                        <Controller\n                          name=\"numero\"\n                          control={control}\n                          defaultValue={formInputs.numero}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"numero\"\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                field.onChange(e.currentTarget.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  numero: e.currentTarget.value,\n                                });\n                              }}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"numero\")}\n                    </div>\n                    {/* CONDOMINIO */}\n                    <div className=\"field col-12\">\n                      <label htmlFor=\"idCondominio\">Condomínio</label>\n                      <Controller\n                        name=\"idCondominio\"\n                        control={control}\n                        defaultValue={formInputs.idCondominio}\n                        rules={{ required: requiredFieldError }}\n                        render={({ field, fieldState }) => (\n                          <>\n                            <Dropdown\n                              id=\"idCondominio\"\n                              value={field.value}\n                              options={condominioDataReducer.state.dataArray?.map(\n                                (e) => {\n                                  return {\n                                    value: e.id,\n                                    label: `${e.nome}: ${e.rua}, ${e.numero}. ${\n                                      e.bairro\n                                    }. ${e.cidade}, ${e.uf?.toUpperCase()}. ${\n                                      e.pais\n                                    }. CEP: ${e.cep}`,\n                                  };\n                                },\n                              )}\n                              optionLabel={\"label\"}\n                              placeholder=\"Selecione o condomínio\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              emptyMessage={\n                                !condominioDataReducer.state.dataArray\n                                  ? \"Sem resultados\"\n                                  : \"Selecione o condomínio!\"\n                              }\n                              onChange={(e: DropdownChangeEvent) => {\n                                field.onChange(e.value);\n                                setFormInputs({\n                                  ...formInputs,\n                                  idCondominio: e.value,\n                                });\n                              }}\n                            />\n                          </>\n                        )}\n                      />\n                      {getFormErrorMessage(\"idCondominio\")}\n                    </div>\n                    {/* OBSERVACOES */}\n                    <div className=\"field col-12\">\n                      <label htmlFor=\"observacoes\">Observações</label>\n                      <Controller\n                        name=\"observacao\"\n                        control={control}\n                        defaultValue={formInputs.observacao}\n                        render={({ field, fieldState }) => (\n                          <InputTextarea\n                            id=\"observacoes\"\n                            rows={4}\n                            autoResize\n                            pt={{\n                              root: {\n                                className: classNames(\"p-inputtext-sm w-full\", {\n                                  \"p-invalid\": fieldState.error,\n                                }),\n                              },\n                            }}\n                            value={field.value}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLTextAreaElement>,\n                            ) => {\n                              field.onChange(e.currentTarget.value);\n                              setFormInputs({\n                                ...formInputs,\n                                observacao: e.currentTarget.value,\n                              });\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"observacao\")}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex align-items-center justify-content-end gap-2\">\n                  <Button label=\"Submit\" type=\"submit\" icon=\"pi pi-check\" />\n                  <Button\n                    label=\"Resetar\"\n                    type=\"button\"\n                    severity=\"secondary\"\n                    icon=\"pi pi-refresh\"\n                    onClick={() => {\n                      reset(initialFormState);\n                    }}\n                  />\n                  <Button\n                    label=\"Cancelar\"\n                    type=\"button\"\n                    severity=\"danger\"\n                    icon=\"pi pi-times\"\n                    onClick={async () => {\n                      await sleep(100).then(() => {\n                        navigate(\"/unidades/list\", { replace: true });\n                      });\n                    }}\n                  />{\" \"}\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { type DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { useLocation } from \"wouter\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { classNames } from \"primereact/utils\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\n\nexport const unidadeBlocoTemplate = (rowData: UnidadeData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.bloco}</div>\n    </>\n  );\n};\n\nexport const unidadeNumeroTemplate = (rowData: UnidadeData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.numero}</div>\n    </>\n  );\n};\n\nexport const unidadeObservacaoTemplate = (rowData: UnidadeData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.observacao}</div>\n    </>\n  );\n};\n\nexport const unidadeIdCondominioTemplate = (rowData: UnidadeData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.nomeCondominio}</div>\n    </>\n  );\n};\n\ninterface ExportUnidadeHeaderProps {\n  dt: React.RefObject<DataTable<DataTableValueArray>>;\n\n  showModalEdit: () => void;\n\n  setSelectedCondominio: (value?: CondominioData) => void;\n}\n\nexport const useExportHeader = ({\n  dt,\n  showModalEdit: showEditModal,\n  setSelectedCondominio,\n}: ExportUnidadeHeaderProps) => {\n  const [condominio, setCondominio] = useState<CondominioData>();\n  const condominioDataReducer = useDataReducer<CondominioData>();\n\n  const [, navigate] = useLocation();\n\n  const exportCSV = () => {\n    dt?.current?.exportCSV({ selectionOnly: false });\n  };\n\n  useEffect(() => {\n    const fetchCondominioData = async () => {\n      condominioDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response =\n          await CondominioService.getInstance().getAllCondominios();\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchCondominioData().then((r) => r);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <div className=\"flex align-items-center justify-content-start gap-2\">\n        <Dropdown\n          id=\"filter-condominio\"\n          options={condominioDataReducer.state.dataArray ?? []}\n          optionLabel=\"nome\"\n          placeholder=\"Selecione o Condomínio!\"\n          className={classNames(\"p-inputtext-sm w-full\")}\n          emptyMessage={\n            !condominioDataReducer.state.dataArray\n              ? \"Sem resultados\"\n              : \"Selecione o condomínio!\"\n          }\n          value={condominio}\n          onChange={(e: DropdownChangeEvent) => {\n            setCondominio(e.value);\n            setSelectedCondominio(e.value);\n          }}\n          showClear\n        />\n        <div className=\"flex align-items-center justify-content-end gap-2\">\n          <Button\n            type=\"button\"\n            label=\"Novo\"\n            icon=\"pi pi-plus\"\n            rounded\n            onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n              e.preventDefault();\n              showEditModal();\n              navigate(\"/unidades/add\", { replace: true });\n            }}\n            data-pr-tooltip=\"Novo\"\n            size=\"small\"\n          />\n          <Button\n            type=\"button\"\n            icon=\"pi pi-file\"\n            severity=\"info\"\n            label=\"CSV\"\n            rounded\n            onClick={() => {\n              exportCSV();\n            }}\n            data-pr-tooltip=\"CSV\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Column } from \"primereact/column\";\nimport { DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { useLocation } from \"wouter\";\nimport { generateUUID } from \"libs/utils.ts\";\nimport {\n  unidadeBlocoTemplate,\n  unidadeIdCondominioTemplate,\n  unidadeNumeroTemplate,\n  unidadeObservacaoTemplate,\n  useExportHeader,\n} from \"pages/unidades/table/table-options.tsx\";\nimport { Toast } from \"primereact/toast\";\nimport { UnidadeService } from \"libs/api/unidade-api.ts\";\nimport { Dialog } from \"primereact/dialog\";\n\ninterface UnidadesTableProps {\n  unidades: UnidadeData[] | null;\n  loading: boolean;\n  loadingMessage: string | null;\n\n  reload: (value: boolean) => void;\n\n  exportSelectedCondominio: (value?: string) => void;\n}\n\nexport function UnidadesTable({\n  unidades,\n  loading,\n  loadingMessage,\n  reload,\n  exportSelectedCondominio,\n}: UnidadesTableProps) {\n  const dt = useRef<DataTable<DataTableValueArray>>(null);\n  const toast = useRef<Toast>(null);\n\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [selectedUnidade, setSelectedUnidade] = useState<UnidadeData>();\n  const [selectedCondominio, setSelectedCondominio] =\n    useState<CondominioData>();\n\n  const [fireReload, setFireReload] = useState(false);\n\n  const [, navigate] = useLocation();\n\n  const showModalEdit = (unidade?: UnidadeData) => {\n    setShowEditModal(true);\n    setSelectedUnidade(unidade);\n  };\n\n  const showModalDelete = (unidade: UnidadeData) => {\n    setShowDeleteModal(true);\n    setSelectedUnidade(unidade);\n  };\n\n  const deleteUnidade = () => {\n    const _unidade = { ...selectedUnidade };\n\n    if (_unidade.id) {\n      UnidadeService.getInstance()\n        .deleteUnidade(_unidade.id)\n        .then(() => {\n          setShowDeleteModal(false);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successo\",\n            detail: \"Unidade Excluido\",\n            life: 3000,\n          });\n        });\n    }\n\n    console.log(\"unidade excluida:\\n\", JSON.stringify(_unidade, null, 4));\n    setFireReload((prev) => !prev);\n  };\n\n  const deleteUnidadeDialogFooter = (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          setShowDeleteModal(false);\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={deleteUnidade}\n      />\n    </>\n  );\n\n  useEffect(() => {\n    reload(fireReload);\n  }, [fireReload, setFireReload, reload]);\n\n  useEffect(() => {\n    reload(showEditModal);\n  }, [reload, showEditModal]);\n\n  useEffect(() => {\n    reload(showDeleteModal);\n  }, [reload, showDeleteModal]);\n\n  useEffect(() => {\n    setSelectedCondominio(selectedCondominio);\n    exportSelectedCondominio(selectedCondominio?.id?.toString());\n  }, [exportSelectedCondominio, selectedCondominio, setSelectedCondominio]);\n\n  return (\n    <>\n      <div className=\"card\">\n        {loading ? (\n          <div className=\"spinner-wrapper\">\n            {loadingMessage}\n            <ProgressSpinner\n              aria-label=\"Loading\"\n              style={{ width: \"40px\", height: \"40px\", position: \"absolute\" }}\n              pt={{\n                spinner: { style: { animationDuration: \".5s\" } },\n                circle: {\n                  style: {\n                    stroke: \"#2E0357\",\n                    strokeWidth: 2,\n                    animation: \"none\",\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : null}\n        <DataTable\n          value={unidades ?? undefined}\n          ref={dt}\n          dataKey={\"id\"}\n          header={useExportHeader({ dt, showModalEdit, setSelectedCondominio })}\n          columnResizeMode=\"expand\"\n          resizableColumns\n          showGridlines\n          stripedRows\n          size=\"small\"\n          selectionMode={\"single\"}\n          // selectAll={true}\n          dragSelection={true}\n          selection={selectedUnidade}\n          showSelectAll={true}\n          paginator\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} registro(s)\"\n          rows={10}\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          tableStyle={{ minWidth: \"50rem\" }}\n          // onValueChange={(value: DataTableRowData<CondominoData[]>[]) => {\n          //   console.log(\"onValueChange: \", value);\n          //   setSelectedCondominos(value);\n          //   setRenderedItems(value);\n          // }}\n          onSelectionChange={(e) => {\n            // console.log(\"onSelectionChange: \", e.value as CondominoData);\n            setSelectedUnidade(e.value as UnidadeData);\n          }}\n        >\n          <Column\n            selectionMode={\"multiple\"}\n            headerStyle={{ width: \"3rem\" }}\n          ></Column>\n\n          <Column\n            field=\"id\"\n            header=\"ID\"\n            sortable\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ maxWidth: \"4rem\" }}\n          />\n          <Column\n            field=\"bloco\"\n            header=\"Bloco\"\n            sortable\n            style={{ minWidth: \"14rem\" }}\n            body={unidadeBlocoTemplate}\n          ></Column>\n          <Column\n            field=\"numero\"\n            header=\"Número\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"10.5rem\" }}\n            body={unidadeNumeroTemplate}\n          ></Column>\n          <Column\n            field=\"observacao\"\n            header=\"Observação\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={unidadeObservacaoTemplate}\n          ></Column>\n          <Column\n            field=\"idCondominio\"\n            header=\"Condomínio\"\n            bodyClassName=\"text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={unidadeIdCondominioTemplate}\n          />\n          <Column\n            key={generateUUID()}\n            header=\"Ações\"\n            bodyClassName=\"text-center\"\n            body={(data: UnidadeData) => (\n              <span className=\"p-buttonset\">\n                <Button\n                  className=\"mr-2\"\n                  pt={{\n                    root: { style: { fontSize: \"0.75rem\", padding: \"0.4rem\" } },\n                  }}\n                  label=\"Editar\"\n                  icon=\"pi pi-pencil\"\n                  size=\"small\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                    e.preventDefault();\n                    // showModalEdit(data);\n                    navigate(\"/unidades/add/\" + data.id, { replace: true });\n                  }}\n                />\n                <Button\n                  pt={{\n                    root: { style: { fontSize: \"0.75rem\", padding: \"0.4rem\" } },\n                  }}\n                  label=\"Excluir\"\n                  icon=\"pi pi-trash\"\n                  severity=\"danger\"\n                  size=\"small\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                    e.preventDefault();\n                    showModalDelete(data);\n                  }}\n                />\n              </span>\n            )}\n          />\n        </DataTable>\n        <Toast ref={toast} />\n        {showDeleteModal && selectedUnidade && (\n          <>\n            {/* Delete Financeiro Dialog */}\n            <Dialog\n              visible={showDeleteModal}\n              style={{ width: \"450px\" }}\n              header=\"Confirmação\"\n              modal\n              footer={deleteUnidadeDialogFooter}\n              onHide={() => {\n                setShowDeleteModal(false);\n              }}\n            >\n              <div className=\"flex align-items-center justify-content-center\">\n                <i\n                  className=\"pi pi-exclamation-triangle mr-3\"\n                  style={{ fontSize: \"2rem\" }}\n                />\n                {selectedUnidade && (\n                  <span>\n                    Você tem certeza que deseja excluir o item{\" \"}\n                    <b>\n                      Ap.{selectedUnidade.numero} - Bl.{selectedUnidade.bloco}.{\" \"}\n                      {selectedUnidade.nomeCondominio}\n                    </b>\n                    ?\n                  </span>\n                )}\n              </div>\n            </Dialog>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { useDataReducer } from \"@/libs/data-utils\";\nimport { type FunctionComponent, useEffect, useState } from \"react\";\nimport { type RouteComponentProps } from \"wouter\";\nimport { UnidadesTable } from \"pages/unidades/table/table.tsx\";\nimport { UnidadeService } from \"libs/api/unidade-api.ts\";\n\ninterface UnidadesListProps extends RouteComponentProps {\n  title?: string;\n}\n\nexport const UnidadesList: FunctionComponent<UnidadesListProps> = ({\n  title = \"Unidades\",\n}: UnidadesListProps) => {\n  const [selectedCondominio, setSelectedCondominio] = useState<string>();\n  const { state, dispatch } = useDataReducer<UnidadeData>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response =\n          await UnidadeService.getInstance().getAllUnidades(selectedCondominio);\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n  }, [dispatch, selectedCondominio]);\n\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <div>\n          <UnidadesTable\n            unidades={state.dataArray}\n            loading={state.loading}\n            loadingMessage={state.error}\n            reload={(r) => r}\n            exportSelectedCondominio={(condominioId) => {\n              console.log(condominioId);\n              setSelectedCondominio(condominioId);\n            }}\n          />\n        </div>\n      </>\n    </DefaultLayout>\n  );\n};\n","// Copyright 2023 Alberto L. Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { formatDate, generateUUID } from \"@/libs/utils\";\nimport { useEffect, useState } from \"react\";\n\nexport interface SindicoFormInputs {\n  id?: number;\n  uuid: string;\n  nome: string;\n  email?: string;\n  cpf?: string;\n  contato: string;\n  dataEntrada: string;\n  dataSaida?: string;\n  imagemPerfil?: string;\n  observacao?: string;\n  tipo?: \"S\";\n  ativo: boolean;\n  idCondominio?: number;\n  idEndereco?: number;\n}\n\nexport const initialFormState: SindicoFormInputs = {\n  nome: \"\",\n  uuid: generateUUID(),\n  email: \"\",\n  cpf: undefined,\n  contato: \"\",\n  dataEntrada: \"\",\n  dataSaida: undefined,\n  imagemPerfil: undefined,\n  observacao: undefined,\n  tipo: \"S\",\n  ativo: true,\n  idCondominio: undefined,\n  idEndereco: undefined,\n};\n\nconst useFormInputs = (initialState: SindicoData | null) => {\n  const [formInputs, setFormInputs] = useState<SindicoFormInputs>(\n    initialState ?? initialFormState,\n  );\n\n  const resetSindicoForm = () => {\n    setFormInputs(initialFormState);\n  };\n\n  useEffect(() => {\n    setFormInputs({\n      uuid: initialFormState?.uuid ?? generateUUID(),\n      nome: initialState?.nome ?? \"\",\n      email: initialState?.email ?? undefined,\n      cpf: initialState?.cpf ?? undefined,\n      contato: initialState?.contato ?? \"\",\n      dataEntrada: initialState?.dataEntrada\n        ? formatDate(initialState?.dataEntrada, \"DD/MM/YYYY\")\n        : \"\",\n      dataSaida: initialState?.dataSaida\n        ? formatDate(initialState?.dataSaida, \"DD/MM/YYYY\")\n        : undefined,\n      imagemPerfil: initialState?.imagemPerfil ?? undefined,\n      observacao: initialState?.observacao ?? \"\",\n      tipo: \"S\",\n      ativo: initialState?.ativo ?? false,\n      idCondominio: initialState?.idCondominio ?? undefined,\n      idEndereco: initialState?.idEndereco ?? undefined,\n    });\n  }, [initialState]);\n\n  return {\n    formInputs,\n    setFormInputs,\n    resetSindicoForm,\n  };\n};\n\nexport default useFormInputs;\n","import { type AxiosResponse } from \"axios\";\nimport { APIError } from \"libs/errors.ts\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\n\nexport class SindicoService {\n  private static instance: SindicoService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): SindicoService {\n    if (!SindicoService.instance) {\n      SindicoService.instance = new SindicoService();\n    }\n    return SindicoService.instance;\n  }\n\n  getAllSindicos = async (\n    condominioId?: string | number,\n    onlyActives?: number,\n    perPage?: PerPage,\n  ): Promise<SindicoData[]> => {\n    const _perPage: string = perPage\n      ? `page=${perPage.start},${perPage.end}`\n      : \"page=0,100\";\n    const request: AxiosResponse<SindicoData[]> = await apiInstance({\n      method: \"GET\",\n      url: condominioId\n        ? // filter=idCondominio,eq,${condominioId}&filter=ativo,eq,${onlyActives}&${_perPage}\n          `${baseApi}/sindicoscompleto?filter=idCondominio,eq,${condominioId}&filter=ativo,eq,${onlyActives}&${_perPage}`\n        : // ? `${baseApi}/sindicoscompleto?filter=idCondominio,eq,${condominioId}&${_perPage}`\n          `${baseApi}/sindicoscompleto?${_perPage}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar a lista de Síndicos.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n\n  getSindicoById = async (id: string): Promise<SindicoData> => {\n    const request: AxiosResponse<SindicoData> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/sindicoscompleto/${id}`,\n      params: {},\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: \"Ocorreu um erro ao carregar o Síndico.\",\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  addUpdateSindico = async (sindico: SindicoData): Promise<SindicoData> => {\n    const request: AxiosResponse<SindicoData> = await apiInstance({\n      method: sindico.id ? \"PUT\" : \"POST\",\n      url: sindico.id\n        ? `${baseApi}/sindico/${sindico.id}`\n        : `${baseApi}/sindico`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      data: sindico,\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao ${\n          sindico.id ? \"atualizar\" : \"salvar\"\n        } o Síndico.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  deleteSindico = (sindicoID: number | string) =>\n    apiInstance({\n      method: \"DELETE\",\n      url: `${baseApi}/sindico/${sindicoID}`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport {\n  formatDate,\n  generateUUID,\n  IMAGE_UPLOAD_BASE_URL,\n  isValidCPF,\n  randomString,\n  sleep,\n} from \"@/libs/utils\";\nimport PhotoUploader from \"components/PhotoUploader/PhotoUploader.tsx\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { createFileFromUrl, fileExistsOnServer } from \"libs/file-utils.ts\";\nimport { Button } from \"primereact/button\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { InputMask } from \"primereact/inputmask\";\nimport {\n  InputSwitch,\n  type InputSwitchChangeEvent,\n} from \"primereact/inputswitch\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { type Toast } from \"primereact/toast\";\nimport { classNames } from \"primereact/utils\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, type FieldErrors, useForm } from \"react-hook-form\";\nimport { useLocation } from \"wouter\";\nimport { initialFormState, type SindicoFormInputs } from \"./utils/form-hooks\";\nimport { FileUploadService } from \"libs/api/file-upload-api.ts\";\nimport { SindicoService } from \"libs/api/sindico-api.ts\";\nimport { EnderecoService } from \"libs/api/endereco-api.ts\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport AuthService from \"@/services/auth.service.ts\";\n\ninterface AddEditSindicoProps {\n  id: string | null;\n  title?: string;\n}\n\nexport function SindicosAdd({ id, title }: AddEditSindicoProps) {\n  const sindicoDataReducer = useDataReducer<SindicoData>();\n  const condominioDataReducer = useDataReducer<CondominioData>();\n  const enderecoFormatadoDataReducer = useDataReducer<EnderecoFormatadoData>();\n\n  // State for user image\n  const [sindicoImage, setSindicoImage] = useState<File | undefined>();\n\n  const [formInputs, setFormInputs] =\n    useState<SindicoFormInputs>(initialFormState);\n\n  const toast = useRef<Toast | null>(null);\n\n  const [, navigate] = useLocation();\n\n  const isReadOnly = AuthService.userIsCondomino();\n\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<SindicoFormInputs>({\n    mode: \"onChange\",\n    defaultValues: formInputs,\n    values: formInputs,\n  });\n\n  const requiredFieldError = \"Este campo é obrigatório.\";\n\n  const getFormErrorMessage = (name: keyof FieldErrors<SindicoFormInputs>) => {\n    return errors[name] ? (\n      <small className=\"p-error\">{errors[name]?.message}</small>\n    ) : null;\n  };\n\n  const showSuccessToast = () => {\n    toast.current?.show({\n      severity: \"success\",\n      summary: \"Sucesso\",\n      detail: \"Operação realizada com sucesso!\",\n    });\n  };\n\n  const handleFormSubmit = (data: SindicoFormInputs) => {\n    console.log(\"Form Data:\", data);\n\n    const verifiedUuid = formInputs.uuid ?? generateUUID();\n\n    const _sindico: SindicoData = {\n      id: sindicoDataReducer.state.data?.id,\n      uuid: verifiedUuid,\n      nome: data.nome,\n      email: data.email,\n      cpf: data.cpf,\n      contato: data.contato,\n      dataEntrada: formatDate(data.dataEntrada),\n      dataSaida: data.dataSaida ? formatDate(data.dataSaida) : undefined,\n      observacao: data.observacao,\n      tipo: data?.tipo,\n      ativo: data.ativo,\n      idCondominio: data.idCondominio,\n      idEndereco: data.idEndereco,\n    };\n\n    try {\n      if (data.imagemPerfil) {\n        const image = data.imagemPerfil as unknown as File;\n\n        if (\n          !fileExistsOnServer(\n            `${IMAGE_UPLOAD_BASE_URL}${data.uuid}/${image.name}`,\n          )\n        ) {\n          const myRenamedFile = new File(\n            [image],\n            randomString() +\n              \"_\" +\n              Date.now() +\n              \".\" +\n              image.name.split(\".\").pop(),\n          );\n\n          _sindico.imagemPerfil = myRenamedFile.name;\n\n          try {\n            const fileModel: FileModel = {\n              path: \"images\",\n              file: myRenamedFile,\n              foderName: data.uuid,\n            };\n\n            const uploadStatus =\n              FileUploadService.getInstance().fileUpload(fileModel);\n\n            uploadStatus.then(console.log);\n          } catch (error) {\n            console.log(\"file_upload_error: \", error);\n          }\n        }\n      }\n\n      console.log(\"onSubmit_sindico: \", JSON.stringify(_sindico, null, 4));\n\n      SindicoService.getInstance()\n        .addUpdateSindico(_sindico)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      showSuccessToast();\n    } catch (e) {\n      console.log(\"ERRORS: :-(\\n\\n\" + JSON.stringify(errors));\n    } finally {\n      sleep(100).then(() => {\n        // reset();\n        navigate(\"/sindicos/list\", { replace: true });\n      });\n    }\n  };\n\n  useEffect(() => {\n    const fetchSindicoData = async () => {\n      sindicoDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response = id\n          ? await SindicoService.getInstance().getSindicoById(id)\n          : null;\n        sindicoDataReducer.dispatch({\n          type: \"FETCH_DATA_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        sindicoDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    const fetchCondominioData = async () => {\n      condominioDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response =\n          await CondominioService.getInstance().getAllCondominios();\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        condominioDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    const fetchEnderecoFormatadoData = async () => {\n      enderecoFormatadoDataReducer.dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const response =\n          await EnderecoService.getInstance().getEnderecoFormatado();\n        enderecoFormatadoDataReducer.dispatch({\n          type: \"FETCH_DATA_ARRAY_SUCCESS\",\n          payload: response,\n        });\n      } catch (error) {\n        enderecoFormatadoDataReducer.dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          payload: `error fetching data: ${error}`,\n        });\n      }\n    };\n\n    fetchSindicoData().then((r) => r);\n    fetchCondominioData().then((r) => r);\n    fetchEnderecoFormatadoData().then((r) => r);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Load user image from URL (if available)\n  useEffect(() => {\n    const makeProfileImage = async () => {\n      const sindicoProfileImage = sindicoDataReducer.state.data?.imagemPerfil;\n\n      if (sindicoProfileImage) {\n        try {\n          const foto = await createFileFromUrl(\n            `${IMAGE_UPLOAD_BASE_URL}${sindicoDataReducer.state.data?.uuid}/${sindicoProfileImage}`,\n          );\n          setSindicoImage(foto);\n        } catch (error) {\n          console.error(\"Error loading sindico image:\", error);\n        }\n      }\n    };\n\n    // Populate form fields with condominoData when available\n    if (sindicoDataReducer.state.data) {\n      makeProfileImage().then((r) => r);\n\n      setFormInputs({\n        uuid: sindicoDataReducer.state.data.uuid ?? generateUUID(),\n        nome: sindicoDataReducer.state.data.nome || \"\",\n        email: sindicoDataReducer.state.data.email ?? undefined,\n        cpf: sindicoDataReducer.state.data.cpf ?? undefined,\n        contato: sindicoDataReducer.state.data.contato || \"\",\n        dataEntrada: sindicoDataReducer.state.data.dataEntrada\n          ? formatDate(sindicoDataReducer.state.data.dataEntrada, \"DD/MM/YYYY\")\n          : \"\",\n        dataSaida: sindicoDataReducer.state.data.dataSaida\n          ? formatDate(sindicoDataReducer.state.data.dataSaida, \"DD/MM/YYYY\")\n          : undefined,\n        imagemPerfil: sindicoDataReducer.state.data.imagemPerfil ?? undefined,\n        observacao: sindicoDataReducer.state.data.observacao ?? \"\",\n        tipo: \"S\",\n        ativo: sindicoDataReducer.state.data.ativo || false,\n        idCondominio: sindicoDataReducer.state.data.idCondominio ?? undefined,\n        idEndereco: sindicoDataReducer.state.data.idEndereco ?? undefined,\n      });\n    }\n  }, [sindicoDataReducer.state.data]);\n\n  return (\n    <DefaultLayout title={title ?? `${id ? \"Editar\" : \"Adicionar\"} Condômino`}>\n      <div className=\"card\">\n        <div>\n          {sindicoDataReducer.state.loading ? (\n            <p>Loading...</p>\n          ) : sindicoDataReducer.state.error ? (\n            <p>{sindicoDataReducer.state.error}</p>\n          ) : (\n            <div>\n              <form id=\"form1\" onSubmit={handleSubmit(handleFormSubmit)}>\n                <div className=\"pt-4\">\n                  <div className=\"formgrid grid\">\n                    {/* NOME */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"nome\">Nome</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-user\" />\n                        <Controller\n                          name=\"nome\"\n                          control={control}\n                          defaultValue={formInputs.nome}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id={field.name}\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"nome\")}\n                    </div>\n                    {/* E-MAIL */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"email\">Email</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-at\" />\n                        <Controller\n                          name=\"email\"\n                          control={control}\n                          defaultValue={formInputs.email}\n                          rules={{\n                            pattern: {\n                              value:\n                                /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, // Email pattern\n                              message: \"Endereço de email inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"email\"\n                              type=\"text\"\n                              className={classNames(\"p-inputtext-sm w-full\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"email\")}\n                    </div>\n                    {/* CPF */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"cpf\">CPF</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-id-card\" />\n                        <Controller\n                          name=\"cpf\"\n                          control={control}\n                          defaultValue={formInputs.cpf}\n                          rules={{\n                            validate: (value) =>\n                              (value ? isValidCPF(value) : true) ||\n                              \"CPF inválido\",\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"cpf\"\n                              mask=\"999.999.999-99\"\n                              placeholder=\"000.000.000-00\"\n                              autoClear={false}\n                              unmask\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"cpf\")}\n                    </div>\n                    {/* CONTATO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"contato\">Contato</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-phone\" />\n                        <Controller\n                          name=\"contato\"\n                          control={control}\n                          defaultValue={formInputs.contato}\n                          rules={{\n                            pattern: {\n                              value: /^[0-9]{10,11}$/,\n                              message: \"Contato inválido\",\n                            },\n                            required: requiredFieldError,\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"contato\"\n                              // mask={formInputs.contato.length === 10 ? '(99)9999-9999' : '(99)99999-9999'}\n                              mask={\"(99)9999-9999?9\"}\n                              placeholder=\"(00)0000-00000\"\n                              autoClear={true}\n                              unmask\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"contato\")}\n                    </div>\n                    {/* ENTRADA */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"dataEntrada\">Data Entrada</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"dataEntrada\"\n                          control={control}\n                          defaultValue={formInputs.dataEntrada}\n                          rules={{\n                            required: requiredFieldError,\n                            pattern: {\n                              value:\n                                /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              message: \"Formato de data inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"dataEntrada\"\n                              mask=\"99/99/9999\"\n                              placeholder=\"DD/MM/YYYY\"\n                              slotChar=\"DD/MM/YYYY\"\n                              autoClear={true}\n                              unmask={false}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"dataEntrada\")}\n                    </div>\n                    {/* SAIDA */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"dataSaida\">Data Saída</label>\n                      <span className=\"p-input-icon-left w-full\">\n                        <i className=\"pi pi-calendar\" />\n                        <Controller\n                          name=\"dataSaida\"\n                          control={control}\n                          defaultValue={formInputs.dataSaida}\n                          rules={{\n                            // required: requiredFielError,\n                            pattern: {\n                              value:\n                                /^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[0-2])\\/\\d{4}$/, // DD/MM/YYYY\n                              message: \"Formato de data inválido\",\n                            },\n                          }}\n                          render={({ field, fieldState }) => (\n                            <InputMask\n                              {...field}\n                              id=\"dataSaida\"\n                              mask=\"99/99/9999\"\n                              placeholder=\"DD/MM/YYYY\"\n                              slotChar=\"DD/MM/YYYY\"\n                              autoClear={true}\n                              unmask={false}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              value={field.value}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              readOnly={isReadOnly}\n                            />\n                          )}\n                        />\n                      </span>\n                      {getFormErrorMessage(\"dataSaida\")}\n                    </div>\n                    {/* CONDOMINIO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"bloco\">Condomínio</label>\n                      <Controller\n                        name=\"idCondominio\"\n                        control={control}\n                        defaultValue={formInputs.idCondominio}\n                        rules={{ required: requiredFieldError }}\n                        render={({ field, fieldState }) => (\n                          <Dropdown\n                            id=\"idCondominio\"\n                            options={condominioDataReducer.state.dataArray?.map(\n                              (e) => {\n                                return { value: e.id, label: e.nome };\n                              },\n                            )}\n                            optionLabel=\"label\"\n                            placeholder=\"Selecione\"\n                            className={classNames(\"p-inputtext-sm w-full\", {\n                              \"p-invalid\": fieldState.error,\n                            })}\n                            emptyMessage={\n                              !condominioDataReducer.state.dataArray\n                                ? \"Sem resultados\"\n                                : \"Selecione o condomínio!\"\n                            }\n                            value={field.value}\n                            onChange={(e: DropdownChangeEvent) => {\n                              e.preventDefault();\n                              field.onChange(e.value);\n                            }}\n                            disabled={isReadOnly}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"idCondominio\")}\n                    </div>\n                    {/* ENDERECO */}\n                    <div className=\"field col-12 md:col-3\">\n                      <label htmlFor=\"idEndereco\">Endereço</label>\n                      <Controller\n                        name=\"idEndereco\"\n                        control={control}\n                        defaultValue={formInputs.idEndereco}\n                        rules={{ required: requiredFieldError }}\n                        render={({ field, fieldState }) => (\n                          <Dropdown\n                            id=\"idEndereco\"\n                            options={enderecoFormatadoDataReducer.state.dataArray?.map(\n                              (e) => {\n                                return { value: e.id, label: e.endereco };\n                              },\n                            )}\n                            defaultValue={field.value}\n                            optionLabel=\"label\"\n                            placeholder=\"Selecione\"\n                            className={classNames(\"p-inputtext-sm w-full\", {\n                              \"p-invalid\": fieldState.error,\n                            })}\n                            emptyMessage={\n                              !enderecoFormatadoDataReducer.state.dataArray\n                                ?.length\n                                ? `Sem resultados`\n                                : \"Selecione o endereço!\"\n                            }\n                            value={field.value}\n                            onChange={(e: DropdownChangeEvent) => {\n                              e.preventDefault();\n                              field.onChange(e.value);\n                            }}\n                            disabled={isReadOnly}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"idEndereco\")}\n                    </div>\n                    {/* ATIVO */}\n                    <div className=\"field col-12 md:col-6\">\n                      <label htmlFor=\"ativo\">Está ativo?</label>\n                      <div>\n                        <Controller\n                          name=\"ativo\"\n                          control={control}\n                          defaultValue={formInputs.ativo}\n                          render={({ field, fieldState }) => (\n                            <InputSwitch\n                              id=\"ativo\"\n                              className={classNames(\"p-inputtext-sm\", {\n                                \"p-invalid\": fieldState.error,\n                              })}\n                              checked={field.value}\n                              onChange={(e: InputSwitchChangeEvent) => {\n                                e.preventDefault();\n                                field.onChange(e.value);\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                      </div>\n                      {getFormErrorMessage(\"ativo\")}\n                    </div>\n                    {/* FOTO */}\n                    <div className=\"field col-12\">\n                      <Controller\n                        name=\"imagemPerfil\"\n                        control={control}\n                        defaultValue={formInputs.imagemPerfil}\n                        render={({ field }) => (\n                          <PhotoUploader\n                            label={`Foto${\n                              isReadOnly\n                                ? \"\"\n                                : \" (Clique na imagem para selecionar)\"\n                            }`}\n                            disabled={isReadOnly}\n                            selectedImage={sindicoImage}\n                            setSelectedImage={(imagePath: File | undefined) => {\n                              field.onChange(imagePath);\n                              setSindicoImage(imagePath);\n                            }}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"imagemPerfil\")}\n                    </div>\n                    {/* OBSERVACOES */}\n                    <div className=\"field col-12\">\n                      <label htmlFor=\"observacoes\">Observações</label>\n                      <Controller\n                        name=\"observacao\"\n                        control={control}\n                        defaultValue={formInputs.observacao}\n                        render={({ field, fieldState }) => (\n                          <InputTextarea\n                            id=\"observacoes\"\n                            rows={4}\n                            autoResize\n                            pt={{\n                              root: {\n                                className: classNames(\"p-inputtext-sm w-full\", {\n                                  \"p-invalid\": fieldState.error,\n                                }),\n                              },\n                            }}\n                            value={field.value}\n                            onChange={(\n                              e: React.ChangeEvent<HTMLTextAreaElement>,\n                            ) => {\n                              e.preventDefault();\n                              field.onChange(e.currentTarget.value);\n                            }}\n                            readOnly={isReadOnly}\n                          />\n                        )}\n                      />\n                      {getFormErrorMessage(\"observacao\")}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex align-items-center justify-content-end gap-2\">\n                  {AuthService.userIsCondomino() ? (\n                    <>\n                      {\" \"}\n                      <Button\n                        label=\"Retornar\"\n                        type=\"button\"\n                        severity=\"success\"\n                        icon=\"pi pi-arrow-left\"\n                        onClick={async () => {\n                          await sleep(100).then(() => {\n                            navigate(\"/condominios/list\", { replace: true });\n                          });\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <Button label=\"Submit\" type=\"submit\" icon=\"pi pi-check\" />\n                      <Button\n                        label=\"Resetar\"\n                        type=\"button\"\n                        severity=\"secondary\"\n                        icon=\"pi pi-refresh\"\n                        onClick={() => {\n                          reset(initialFormState);\n                          setSindicoImage(undefined);\n                        }}\n                      />\n                      <Button\n                        label=\"Cancelar\"\n                        type=\"button\"\n                        severity=\"danger\"\n                        icon=\"pi pi-times\"\n                        onClick={async () => {\n                          await sleep(100).then(() => {\n                            navigate(\"/condominos/list\", { replace: true });\n                          });\n                        }}\n                      />{\" \"}\n                    </>\n                  )}\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n}\n","import { getImageUrlOnServer } from \"libs/file-utils.ts\";\nimport React, { useState } from \"react\";\nimport { Avatar } from \"primereact/avatar\";\nimport { Button } from \"primereact/button\";\nimport { type DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { useMountEffect } from \"primereact/hooks\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { classNames } from \"primereact/utils\";\nimport { useLocation } from \"wouter\";\nimport { CondominioService } from \"libs/api/condominio-api.ts\";\nimport AuthService from \"@/services/auth.service.ts\";\n\nexport const sindicoNomeTemplate = (rowData: SindicoData) => {\n  return (\n    <>\n      <div className=\"flex align-items-center gap-2\">\n        <div>\n          <Avatar\n            imageAlt={rowData.nome}\n            image={getImageUrlOnServer(rowData.imagemPerfil, rowData.uuid)}\n            className=\"p-mr-2\"\n            style={{ verticalAlign: \"middle\" }}\n            size=\"large\"\n            shape=\"circle\"\n            icon=\"pi pi-user\"\n            pt={{ image: { width: 32 } }}\n          />\n        </div>\n        <div>\n          <div>\n            <span style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}>\n              {rowData.nome}\n            </span>\n          </div>\n          <div>\n            <span\n              className=\"text-color-secondary text-sm\"\n              style={{ marginLeft: \".5em\", verticalAlign: \"middle\" }}\n            >\n              {rowData.email}\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const sindicoStatusTemplate = (rowData: SindicoData) => {\n  return (\n    <i\n      className={classNames(\"pi\", {\n        \"text-green-500 pi-check-circle\": rowData.ativo,\n        \"text-pink-500 pi-times-circle\": !rowData.ativo,\n      })}\n    ></i>\n  );\n};\n\nexport const sindicoCpfTemplate = (rowData: SindicoData) => {\n  return (\n    <InputMask\n      id=\"cpf\"\n      mask=\"999.999.999-99\"\n      placeholder=\"000.000.000-00\"\n      value={rowData.cpf}\n      autoClear={false}\n      disabled\n      readOnly\n      unmask\n      pt={{\n        root: {\n          className: classNames(\"border-none\", \"pl-0\"),\n        },\n      }}\n    ></InputMask>\n  );\n};\n\nexport const sindicoContatoTemplate = (rowData: SindicoData) => {\n  return (\n    <InputMask\n      id=\"telefone\"\n      mask={rowData.contato.length === 11 ? \"(99)99999-9999\" : \"(99)9999-9999\"}\n      placeholder=\"(00)00000-0000\"\n      value={rowData.contato}\n      autoClear={false}\n      disabled\n      readOnly\n      unmask\n      pt={{\n        root: {\n          className: classNames(\"border-none\", \"pl-0\"),\n        },\n      }}\n    ></InputMask>\n  );\n};\n\nexport const sindicoCondominioTemplate = (rowData: SindicoData) => {\n  return <div>{rowData?.nomeCondominio}</div>;\n};\n\ninterface ExportCondominoHeaderProps {\n  dt: React.RefObject<DataTable<DataTableValueArray>>;\n\n  showModalEdit: () => void;\n\n  setSelectedCondominio: (value?: CondominioData) => void;\n}\n\nexport const useExportHeader = ({\n  dt,\n  showModalEdit: showEditModal,\n  setSelectedCondominio,\n}: ExportCondominoHeaderProps) => {\n  const [condominios, setCondominios] = useState<CondominioData[]>([]);\n  const [currentSelectedCondominio, setCurrentSelectedCondominio] =\n    useState<CondominioData>();\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [, navigate] = useLocation();\n\n  const exportCSV = () => {\n    dt?.current?.exportCSV({ selectionOnly: false });\n  };\n\n  const fetchCondominios = () => {\n    setMessage(\"Carregando...\");\n    CondominioService.getInstance()\n      .getAllCondominios()\n      .then((data) => {\n        setMessage(\"\");\n        setCondominios(data);\n      })\n      .catch((error: { message: string }) => {\n        setMessage(\"Erro: \" + error.message);\n        console.log(\"ERROR: \", message);\n      });\n  };\n\n  useMountEffect(() => {\n    fetchCondominios();\n  });\n\n  return (\n    <>\n      <div className=\"flex align-items-center justify-content-start gap-2\">\n        {AuthService.userIsCondomino() ? null : (\n          <Dropdown\n            id=\"filter-condominio\"\n            options={condominios}\n            optionLabel=\"nome\"\n            placeholder=\"Selecione o Condomínio!\"\n            className={classNames(\"p-inputtext-sm w-full\")}\n            emptyMessage={\n              !condominios ? \"Sem resultados\" : \"Selecione o condominio!\"\n            }\n            value={currentSelectedCondominio}\n            onChange={(e: DropdownChangeEvent) => {\n              setCurrentSelectedCondominio(e.value);\n              setSelectedCondominio(e.value);\n            }}\n            showClear\n          />\n        )}\n        <div className=\"flex align-items-center justify-content-end gap-2\">\n          {AuthService.userIsCondomino() ? null : (\n            <Button\n              type=\"button\"\n              label=\"Novo\"\n              icon=\"pi pi-plus\"\n              rounded\n              onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                e.preventDefault();\n                showEditModal();\n                navigate(\"/sindicos/add\", { replace: true });\n              }}\n              data-pr-tooltip=\"Novo\"\n              size=\"small\"\n            />\n          )}\n          <Button\n            type=\"button\"\n            icon=\"pi pi-file\"\n            severity=\"info\"\n            label=\"CSV\"\n            rounded\n            onClick={() => {\n              exportCSV();\n            }}\n            data-pr-tooltip=\"CSV\"\n            size=\"small\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Column } from \"primereact/column\";\nimport { DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport { useLocation } from \"wouter\";\nimport {\n  sindicoCondominioTemplate,\n  sindicoContatoTemplate,\n  sindicoCpfTemplate,\n  sindicoNomeTemplate,\n  sindicoStatusTemplate,\n  useExportHeader,\n} from \"pages/sindico/table/table-options.tsx\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { Toast } from \"primereact/toast\";\nimport { SindicoService } from \"libs/api/sindico-api.ts\";\nimport { Dialog } from \"primereact/dialog\";\n\ninterface SindicosTableProps {\n  sindicos: SindicoData[] | null;\n  loading: boolean;\n  loadingMessage: string | null;\n\n  reload: (value: boolean) => void;\n\n  exportSelectedCondominio: (value?: string) => void;\n}\n\nexport function SindicoTable({\n  sindicos,\n  loading,\n  loadingMessage,\n  reload,\n  exportSelectedCondominio,\n}: SindicosTableProps) {\n  const sindicodt = useRef<DataTable<DataTableValueArray>>(null);\n  const toast = useRef<Toast>(null);\n\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const [selectedSindico, setSelectedSindico] = useState<SindicoData>();\n  const [selectedCondominio, setSelectedCondominio] =\n    useState<CondominioData>();\n\n  const [fireReload, setFireReload] = useState(false);\n\n  const [, navigate] = useLocation();\n\n  const showModalEdit = (sindico?: SindicoData) => {\n    setShowEditModal(true);\n    setSelectedSindico(sindico);\n  };\n\n  const showModalDelete = (sindico: SindicoData) => {\n    setShowDeleteModal(true);\n    setSelectedSindico(sindico);\n  };\n\n  const deleteSindico = () => {\n    const _sindico = { ...selectedSindico };\n\n    if (_sindico.id) {\n      SindicoService.getInstance()\n        .deleteSindico(_sindico.id)\n        .then(() => {\n          setShowDeleteModal(false);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successo\",\n            detail: \"Síndico Excluido\",\n            life: 3000,\n          });\n        });\n    }\n\n    console.log(\"sindico excluido:\\n\", JSON.stringify(_sindico, null, 4));\n    setFireReload((prev) => !prev);\n  };\n\n  const deleteSindicoDialogFooter = (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          setShowDeleteModal(false);\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={deleteSindico}\n      />\n    </>\n  );\n\n  useEffect(() => {\n    reload(fireReload);\n  }, [fireReload, setFireReload, reload]);\n\n  useEffect(() => {\n    reload(showEditModal);\n  }, [reload, showEditModal]);\n\n  useEffect(() => {\n    reload(showDeleteModal);\n  }, [reload, showDeleteModal]);\n\n  useEffect(() => {\n    setSelectedCondominio(selectedCondominio);\n    exportSelectedCondominio(selectedCondominio?.id?.toString());\n  }, [exportSelectedCondominio, selectedCondominio, setSelectedCondominio]);\n\n  return (\n    <>\n      <div className=\"card\">\n        {loading ? (\n          <div className=\"spinner-wrapper\">\n            {loadingMessage}\n            <ProgressSpinner\n              aria-label=\"Loading\"\n              style={{ width: \"40px\", height: \"40px\", position: \"absolute\" }}\n              pt={{\n                spinner: { style: { animationDuration: \".5s\" } },\n                circle: {\n                  style: {\n                    stroke: \"#2E0357\",\n                    strokeWidth: 2,\n                    animation: \"none\",\n                  },\n                },\n              }}\n            />\n          </div>\n        ) : null}\n        <DataTable\n          value={sindicos ?? undefined}\n          ref={sindicodt}\n          dataKey={\"id\"}\n          header={useExportHeader({\n            dt: sindicodt,\n            showModalEdit,\n            setSelectedCondominio,\n          })}\n          columnResizeMode=\"expand\"\n          resizableColumns\n          showGridlines\n          stripedRows\n          size=\"small\"\n          selectionMode={\"single\"}\n          dragSelection={true}\n          selection={selectedSindico}\n          showSelectAll={true}\n          paginator\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} registro(s)\"\n          rows={10}\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          tableStyle={{ minWidth: \"50rem\" }}\n          onSelectionChange={(e) => {\n            setSelectedSindico(e.value as SindicoData);\n          }}\n        >\n          <Column\n            selectionMode={\"multiple\"}\n            headerStyle={{ width: \"3rem\" }}\n          ></Column>\n\n          <Column\n            field=\"id\"\n            header=\"ID\"\n            sortable\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ maxWidth: \"4rem\" }}\n          />\n          <Column\n            field=\"nome\"\n            header=\"Nome\"\n            sortable\n            style={{ minWidth: \"14rem\" }}\n            body={sindicoNomeTemplate}\n          ></Column>\n          <Column\n            field=\"cpf\"\n            header=\"CPF\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={sindicoCpfTemplate}\n          ></Column>\n          <Column\n            field=\"telefone\"\n            header=\"Contato\"\n            bodyClassName=\"text-center\"\n            style={{ maxWidth: \"8.5rem\" }}\n            body={sindicoContatoTemplate}\n          ></Column>\n          <Column\n            field=\"ativo\"\n            header=\"Ativo\"\n            dataType=\"boolean\"\n            sortable\n            bodyClassName=\"text-center\"\n            style={{ minWidth: \"1rem\" }}\n            body={sindicoStatusTemplate}\n          />\n          <Column\n            field=\"condominioID\"\n            header=\"Condomínio\"\n            bodyClassName=\"text-center text-color-secondary text-sm\"\n            style={{ minWidth: \"1rem\" }}\n            body={sindicoCondominioTemplate}\n          />\n          <Column\n            header=\"Ações\"\n            bodyClassName=\"text-center\"\n            body={(data: SindicoData) => (\n              <span className=\"p-buttonset\">\n                <Button\n                  className=\"mr-2\"\n                  pt={{\n                    root: { style: { fontSize: \"0.75rem\", padding: \"0.4rem\" } },\n                  }}\n                  label={\n                    AuthService.userIsCondomino() ? \"Visualizar\" : \"Editar\"\n                  }\n                  icon=\"pi pi-pencil\"\n                  size=\"small\"\n                  onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                    e.preventDefault();\n                    // showModalEdit(data);\n                    navigate(\"/sindicos/add/\" + data.id, { replace: true });\n                  }}\n                />\n                {!AuthService.userIsCondomino() ? (\n                  <Button\n                    pt={{\n                      root: {\n                        style: { fontSize: \"0.75rem\", padding: \"0.4rem\" },\n                      },\n                    }}\n                    label=\"Excluir\"\n                    icon=\"pi pi-trash\"\n                    severity=\"danger\"\n                    size=\"small\"\n                    onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                      e.preventDefault();\n                      showModalDelete(data);\n                    }}\n                  />\n                ) : null}\n              </span>\n            )}\n          />\n        </DataTable>\n        <Toast ref={toast} />\n        {showDeleteModal && selectedSindico && (\n          <>\n            {/* Delete Financeiro Dialog */}\n            <Dialog\n              visible={showDeleteModal}\n              style={{ width: \"450px\" }}\n              header=\"Confirmação\"\n              modal\n              footer={deleteSindicoDialogFooter}\n              onHide={() => {\n                setShowDeleteModal(false);\n              }}\n            >\n              <div className=\"flex align-items-center justify-content-center\">\n                <i\n                  className=\"pi pi-exclamation-triangle mr-3\"\n                  style={{ fontSize: \"2rem\" }}\n                />\n                {selectedSindico && (\n                  <span>\n                    Você tem certeza que deseja excluir o item{\" \"}\n                    <b>{selectedSindico.nome}</b>?\n                  </span>\n                )}\n              </div>\n            </Dialog>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { useDataReducer } from \"@/libs/data-utils\";\nimport { type FunctionComponent, useEffect, useState } from \"react\";\nimport { type RouteComponentProps } from \"wouter\";\nimport { SindicoTable } from \"./table/table\";\nimport { SindicoService } from \"libs/api/sindico-api.ts\";\nimport AuthService, { UsuarioField } from \"@/services/auth.service.ts\";\nimport { sleep } from \"libs/utils.ts\";\n\ninterface SindicosListProps extends RouteComponentProps {\n  title?: string;\n}\n\nexport const SindicosList: FunctionComponent<SindicosListProps> = ({\n  title = \"Síndicos\",\n}: SindicosListProps) => {\n  const [selectedCondominio, setSelectedCondominio] = useState<string>();\n  const { state, dispatch } = useDataReducer<SindicoData>();\n\n  const [reload, setReload] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        // const response =  await SindicoService.getInstance().getAllSindicos(selectedCondominio);\n        const condominioID = AuthService.getCurrentUserField(\n          UsuarioField.IdCondominio,\n        );\n        let response: SindicoData[] = [];\n\n        if (AuthService.userIsCondomino()) {\n          if (condominioID) {\n            response = await SindicoService.getInstance().getAllSindicos(\n              condominioID as number,\n              1,\n            );\n          }\n        } else if (!AuthService.userIsCondomino()) {\n          response =\n            await SindicoService.getInstance().getAllSindicos(\n              selectedCondominio,\n            );\n        } else {\n          response = [];\n        }\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n  }, [dispatch, selectedCondominio, reload]);\n\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <div>\n          <SindicoTable\n            sindicos={state.dataArray}\n            loading={state.loading}\n            loadingMessage={state.error}\n            reload={(value) => {\n              sleep(1000).then(() => {\n                setReload(value);\n              });\n            }}\n            exportSelectedCondominio={(bloco) => {\n              setSelectedCondominio(bloco);\n            }}\n          />\n        </div>\n      </>\n    </DefaultLayout>\n  );\n};\n","export default \"__VITE_ASSET__7c004a8b__\"","import { InputText } from \"primereact/inputtext\";\nimport { Button } from \"primereact/button\";\nimport { Checkbox, type CheckboxChangeEvent } from \"primereact/checkbox\";\nimport React, { useState } from \"react\";\n\nimport logo from \"@/assets/images/SGCO.2-transparente.png\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { useLocation } from \"wouter\";\nimport { sleep } from \"libs/utils.ts\";\nimport { classNames } from \"primereact/utils\";\n\nexport function LoginDemo3() {\n  const [checked, setChecked] = useState<boolean>(false);\n  const [statusMessage, setStatusMessage] = useState<string>();\n  const [login, setLogin] = useState<string>(\"\");\n  const [senha, setSenha] = useState<string>(\"\");\n  const [, navigate] = useLocation();\n\n  function goToHome(result: boolean) {\n    function refreshPage() {\n      window.location.reload();\n    }\n    sleep(500).then(() => {\n      if (result) navigate(\"/dashboard\", { replace: true });\n      refreshPage();\n    });\n  }\n\n  return (\n    <div className=\"block-content border-round-3xl surface-card shadow-6 m-2 w-full lg:w-30rem md:w-30rem\">\n      <div className=\"flex align-items-center justify-content-center gap-2 border-round-3xl surface-card\">\n        <div className=\"surface-card p-4 border-round-3xl w-full\">\n          <div className=\"text-center mb-5\">\n            <img src={logo} alt=\"logo image\" height={90} className=\"mb-1\" />\n            <div className=\"text-900 text-3xl font-medium mb-1\">Bem vindo!</div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"username\"\n              className=\"block text-900 font-medium mb-2\"\n            >\n              Email\n            </label>\n            <InputText\n              id=\"username\"\n              type=\"text\"\n              autoComplete=\"username\"\n              placeholder=\"Usuário\"\n              className=\"w-full mb-3\"\n              onInput={(e: React.FormEvent<HTMLInputElement>) => {\n                setLogin(e.currentTarget.value);\n              }}\n            />\n\n            <label\n              htmlFor=\"password\"\n              className=\"block text-900 font-medium mb-2\"\n            >\n              Senha\n            </label>\n            <InputText\n              id=\"password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              placeholder=\"Password\"\n              className=\"w-full mb-2\"\n              onInput={(e: React.FormEvent<HTMLInputElement>) => {\n                setSenha(e.currentTarget.value);\n              }}\n            />\n            <div\n              className={classNames({\n                \"mb-3 text-red-400 text-xs\": { statusMessage },\n              })}\n            ></div>\n\n            <div className=\"flex align-items-center justify-content-between mb-3\">\n              <div className=\"flex align-items-center\">\n                <Checkbox\n                  id=\"rememberme\"\n                  onChange={(e: CheckboxChangeEvent) => {\n                    setChecked(e.checked ?? false);\n                  }}\n                  checked={checked}\n                  className=\"mr-2\"\n                />\n                <label htmlFor=\"rememberme\">Lembrar login</label>\n              </div>\n              <a className=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">\n                Esqueceu sua senha?\n              </a>\n            </div>\n            <div className=\"flex align-items-center justify-content-center mb-4\">\n              <div className=\"flex align-items-center\">\n                <span className=\"text-600 font-medium line-height-3 text-xs\">\n                  <b>*</b> Não possui cadastro?\n                </span>\n                <a className=\"font-medium no-underline ml-2 text-blue-500 text-xs cursor-pointer\">\n                  Solicite aqui seu registro!\n                </a>\n              </div>\n            </div>\n\n            <Button\n              label=\"Entrar\"\n              icon=\"pi pi-user\"\n              className=\"w-full\"\n              onClick={() => {\n                // AuthService.login(\"admin2\", \"admin@admin\").then((result) => {\n                AuthService.login(login, senha).then((result) => {\n                  setStatusMessage(\n                    result ? undefined : \"Usuário e/ou senha inválidos!\",\n                  );\n                  goToHome(result);\n                });\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Button } from \"primereact/button\";\nimport { type DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { InputMask } from \"primereact/inputmask\";\nimport { classNames } from \"primereact/utils\";\nimport { Toolbar } from \"primereact/toolbar\";\nimport { formatDate } from \"libs/utils.ts\";\nimport React from \"react\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Tag } from \"primereact/tag\";\nimport AuthService from \"@/services/auth.service.ts\";\n\nexport const tituloTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div className=\"flex align-items-center gap-2\">\n        <InputText\n          id=\"titulo_table\"\n          type=\"text\"\n          value={rowData.titulo}\n          disabled\n          readOnly\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport const valorTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">\n        <InputNumber\n          id=\"valor\"\n          value={rowData.valor}\n          mode=\"currency\"\n          currency=\"BRL\"\n          locale=\"pt-BR\"\n          minFractionDigits={2}\n          disabled\n          readOnly\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n            input: {\n              root: { className: classNames(\"border-none\", \"p-0\") },\n            },\n          }}\n        />\n      </div>\n      {/* <div className=\"flex gap-2\">{formatBrazilianCurrency(rowData.valor)}</div> */}\n    </>\n  );\n};\n\nexport const dataVencimentoTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div>\n        <InputMask\n          id=\"dataVencimento\"\n          mask={\"99/99/9999\"}\n          placeholder=\"00/00/0000\"\n          value={\n            rowData?.dataVencimento\n              ? formatDate(rowData?.dataVencimento, \"DD/MM/YYYY\")\n              : undefined\n          }\n          disabled\n          readOnly\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputMask>\n        {/* {usuario?.dataEntrada ? formatDate(usuario?.dataEntrada) : undefined} */}\n      </div>\n    </>\n  );\n};\n\nexport const dataPagamentoTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div>\n        <InputMask\n          id=\"dataPagamento\"\n          mask={\"99/99/9999\"}\n          placeholder=\"00/00/0000\"\n          value={\n            rowData?.dataPagamento\n              ? formatDate(rowData?.dataPagamento, \"DD/MM/YYYY\")\n              : undefined\n          }\n          disabled\n          readOnly\n          pt={{\n            root: {\n              className: classNames(\"border-none\", \"p-0\"),\n            },\n          }}\n        ></InputMask>\n        {/* {usuario?.dataEntrada ? formatDate(usuario?.dataEntrada) : undefined} */}\n      </div>\n    </>\n  );\n};\n\nexport const statusTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <Tag\n        severity={\n          rowData.statusFinanceiro === \"PAGO\"\n            ? \"success\"\n            : rowData.statusFinanceiro === \"PENDENTE\"\n            ? \"danger\"\n            : \"warning\"\n        }\n        rounded\n      >\n        <div className=\"flex align-items-center gap-2\">\n          <i\n            className={classNames(\"pi\", \"text-xs\", {\n              \"pi-check-circle\": rowData.statusFinanceiro === \"PAGO\",\n              \"pi-times-circle\": rowData.statusFinanceiro === \"PENDENTE\",\n              \"pi-eye\": rowData.statusFinanceiro === \"ANALISE\",\n            })}\n          ></i>\n          <span className=\"text-xs\"> {rowData.statusFinanceiro}</span>\n        </div>\n      </Tag>\n    </>\n  );\n};\n\nexport const tipoTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.tipo}</div>\n    </>\n  );\n};\n\nexport const observacaoTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.observacao}</div>\n    </>\n  );\n};\n\nexport const unidadeTemplate = (rowData: FinanceiroData) => {\n  return (\n    <>\n      <div className=\"flex gap-2\">{rowData.idUnidade}</div>\n    </>\n  );\n};\n\nexport const financeiroTableToolbar = (\n  selectedData: unknown,\n  dt: React.RefObject<DataTable<DataTableValueArray>>,\n  openNew: () => void,\n  confirmDeleteSelected: () => void,\n) => {\n  const leftToolbarTemplate = () => {\n    return (\n      <>\n        <div className=\"my-2\">\n          {AuthService.userIsCondomino() ? null : (\n            <>\n              <Button\n                label=\"Novo\"\n                icon=\"pi pi-plus\"\n                severity=\"success\"\n                size=\"small\"\n                rounded\n                className=\" mr-2\"\n                onClick={openNew}\n              />\n\n              <Button\n                label=\"Excluir\"\n                icon=\"pi pi-trash\"\n                severity=\"danger\"\n                size=\"small\"\n                rounded\n                disabled={\n                  !selectedData || !(selectedData as FinanceiroData[]).length\n                }\n                onClick={confirmDeleteSelected}\n              />\n            </>\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const rightToolbarTemplate = () => {\n    const exportFinanceiroCSV = () => {\n      dt.current?.exportCSV({\n        selectionOnly: !((selectedData as FinanceiroData[]).length > 1),\n      });\n    };\n    return (\n      <>\n        <Button\n          label=\"Exportar CSV\"\n          icon=\"pi pi-upload\"\n          severity=\"help\"\n          size=\"small\"\n          rounded\n          onClick={() => {\n            exportFinanceiroCSV();\n          }}\n        />\n      </>\n    );\n  };\n\n  return (\n    <Toolbar\n      className=\"mb-4\"\n      start={leftToolbarTemplate}\n      end={rightToolbarTemplate}\n    ></Toolbar>\n  );\n};\n","import { APIError } from \"libs/errors.ts\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\nimport { type AxiosResponse } from \"axios\";\n\n// import phpApi from \"libs/api/php-api.ts\";\n\nexport class FinanceiroService {\n  private static instance: FinanceiroService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): FinanceiroService {\n    if (!FinanceiroService.instance) {\n      FinanceiroService.instance = new FinanceiroService();\n    }\n    return FinanceiroService.instance;\n  }\n\n  getAllFinanceiroData = async (\n    anoCalendario?: string,\n  ): Promise<FinanceiroData[]> => {\n    const request: AxiosResponse<FinanceiroData[]> = await apiInstance({\n      method: \"GET\",\n      url: anoCalendario\n        ? `${baseApi}/financeiro?filter=anoCalendario,eq,${anoCalendario}`\n        : `${baseApi}/financeiro?page=0,100`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n    return request.data;\n  };\n\n  getFinanceiroByID = async (id: string | number): Promise<FinanceiroData> => {\n    const request: AxiosResponse<FinanceiroData> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/financeiro/${id}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getFinanceiroByStatus = async (\n    status: \"PENDENTE\" | \"PAGO\",\n    anoCalendario?: string,\n  ): Promise<FinanceiroData[]> => {\n    const request: AxiosResponse<FinanceiroData[]> = await apiInstance({\n      method: \"GET\",\n      url: anoCalendario\n        ? `${baseApi}/financeiro?filter=status,eq,${status}&filter=anoCalendario,eq,${anoCalendario}`\n        : `${baseApi}/financeiro?filter=status,eq,${status}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getFinanceiroByTipo = async (\n    tipo: \"RECEITA\" | \"DESPESA\",\n    anoCalendario?: string,\n  ): Promise<FinanceiroData[]> => {\n    const request: AxiosResponse<FinanceiroData[]> = await apiInstance({\n      method: \"GET\",\n      url: anoCalendario\n        ? `${baseApi}/financeiro?filter=tipo,eq,${tipo}&filter=anoCalendario,eq,${anoCalendario}`\n        : `${baseApi}/financeiro?filter=tipo,eq,${tipo}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getFinanceiroMensalidade = async (\n    idUnidade?: string | number,\n    anoCalendario?: string,\n    perPage?: PerPage,\n  ): Promise<FinanceiroData[]> => {\n    const _perPage: string = perPage\n      ? `page=${perPage.start},${perPage.end}`\n      : \"page=0,100\";\n    const request: AxiosResponse<FinanceiroData[]> = await apiInstance({\n      method: \"GET\",\n      url: anoCalendario\n        ? `${baseApi}/financeiro?filter=idUnidade,eq,${idUnidade}&filter=anoCalendario,eq,${anoCalendario}`\n        : idUnidade\n        ? `${baseApi}/financeiro?filter=idUnidade,eq,${idUnidade}&${_perPage}`\n        : `${baseApi}/mensalidade?${_perPage}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getFinanceiroByUnidade = async (\n    idUnidade?: string | number,\n    anoCalendario?: string,\n  ): Promise<FinanceiroData[]> => {\n    const request: AxiosResponse<FinanceiroData[]> = await apiInstance({\n      method: \"GET\",\n      url: anoCalendario\n        ? `${baseApi}/financeiro?filter=idUnidade,eq,${idUnidade}&filter=anoCalendario,eq,${anoCalendario}`\n        : `${baseApi}/financeiro?filter=idUnidade,eq,${idUnidade}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao localizar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  addUpdateFinanceiro = async (\n    financeiro: FinanceiroData,\n  ): Promise<FinanceiroData> => {\n    const request: AxiosResponse<FinanceiroData> = await apiInstance({\n      method: financeiro.id ? \"PUT\" : \"POST\",\n      url: financeiro.id\n        ? `${baseApi}/financeiro/${financeiro.id}`\n        : `${baseApi}/financeiro`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n      data: financeiro,\n    });\n\n    if (request.status !== 200) {\n      console.log(request.status);\n      console.log(request);\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao ${\n          financeiro.id ? \"atualizar\" : \"salvar\"\n        } o Financeiro.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  deleteFinanceiro = async (\n    financeiroID: number | string | number[] | string[],\n  ) =>\n    await apiInstance({\n      method: \"DELETE\",\n      url: `${baseApi}/financeiro/${financeiroID}`,\n      params: {}, // headers: { 'content-type': 'multipart/form-data' },\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Column } from \"primereact/column\";\nimport { DataTable, type DataTableValueArray } from \"primereact/datatable\";\nimport { ProgressSpinner } from \"primereact/progressspinner\";\nimport {\n  capitalize,\n  FILE_UPLOAD_BASE_URL,\n  formatDate,\n  generateUUID,\n  getCurrentYear,\n  makeYearArray,\n  validateFileSize,\n} from \"libs/utils.ts\";\nimport {\n  dataPagamentoTemplate,\n  dataVencimentoTemplate,\n  financeiroTableToolbar,\n  observacaoTemplate,\n  statusTemplate,\n  tipoTemplate,\n  tituloTemplate,\n  unidadeTemplate,\n  valorTemplate,\n} from \"pages/financeiro/table/table-options.tsx\";\nimport { InputText } from \"primereact/inputtext\";\nimport { Toast } from \"primereact/toast\";\nimport { Dialog } from \"primereact/dialog\";\nimport {\n  InputNumber,\n  type InputNumberValueChangeEvent,\n} from \"primereact/inputnumber\";\nimport { classNames } from \"primereact/utils\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { Controller, type FieldErrors, useForm } from \"react-hook-form\";\nimport { FinanceiroService } from \"libs/api/financeiro-api.ts\";\nimport jscrudapi from \"js-crud-api\";\nimport AuthService, { API_URL } from \"@/services/auth.service.ts\";\nimport { Calendar } from \"primereact/calendar\";\nimport { FileUpload, type FileUploadSelectEvent } from \"primereact/fileupload\";\nimport { Messages } from \"primereact/messages\";\nimport { FileUploadService } from \"libs/api/file-upload-api.ts\";\nimport { fileExistsOnServer } from \"libs/file-utils.ts\";\nimport { ScrollPanel } from \"primereact/scrollpanel\";\n\ninterface FinanceiroTableProps {\n  financeirosData: FinanceiroData[] | null;\n  loading: boolean;\n  loadingMessage: string | null;\n  tipo?: \"RECEITA\" | \"DESPESA\";\n\n  exportAnoCalendario: (value?: string) => void;\n  reload: (value: boolean) => void;\n}\n\nexport function FinanceiroTable({\n  financeirosData,\n  loading,\n  loadingMessage,\n  tipo,\n  exportAnoCalendario,\n  reload,\n}: FinanceiroTableProps) {\n  const emptyFinanceiro: FinanceiroData = {\n    uuid: generateUUID(),\n    titulo: \"\",\n    valor: 0,\n    dataVencimento: \"\",\n    tipo,\n  };\n\n  const dt = useRef<DataTable<DataTableValueArray>>(null);\n  const msgs = useRef<Messages>(null);\n  const toast = useRef<Toast>(null);\n\n  const [selectedFinanceiro, setSelectedFinanceiro] =\n    useState<FinanceiroData>();\n\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const [, setSubmitted] = useState(false);\n\n  const [financeiroDialog, setFinanceiroDialog] = useState(false);\n  const [deleteFinanceiroDialog, setDeleteFinanceiroDialog] = useState(false);\n  const [deleteFinanceirosDialog, setDeleteFinanceirosDialog] = useState(false);\n\n  const [financeiros, setFinanceiros] = useState<FinanceiroData[]>([]);\n  const [financeiro, setFinanceiro] = useState<FinanceiroData>(emptyFinanceiro);\n\n  const [unidades, setUnidades] = useState<ApartamentoData[]>([]);\n\n  const [comprovante, setComprovante] = useState<File[] | undefined>();\n\n  const [anoCalendario, setAnoCalendario] = useState<string>();\n\n  const [fireReload, setFireReload] = useState(false);\n\n  const isReadOnly = AuthService.userIsCondomino();\n\n  const {\n    control,\n    handleSubmit,\n    // reset,\n    formState: { errors },\n  } = useForm<FinanceiroData>({\n    mode: \"onChange\",\n    defaultValues: emptyFinanceiro,\n    values: financeiro,\n  });\n  const getFormErrorMessage = (name: keyof FieldErrors<FinanceiroData>) => {\n    return errors[name] ? (\n      <small className=\"p-error\">{errors[name]?.message}</small>\n    ) : null;\n  };\n\n  const requiredFieldError = \"Este campo é obrigatório.\";\n\n  const openNew = () => {\n    setFinanceiro(emptyFinanceiro);\n    setSubmitted(false);\n    setFinanceiroDialog(true);\n  };\n\n  const hideDialog = () => {\n    setSubmitted(false);\n    setFinanceiroDialog(false);\n  };\n\n  const hideDeleteFinanceiroDialog = () => {\n    setDeleteFinanceiroDialog(false);\n  };\n\n  const hideDeleteFinanceirosDialog = () => {\n    setDeleteFinanceirosDialog(false);\n  };\n\n  const editFinanceiro = (data: FinanceiroData) => {\n    setFinanceiro(data);\n    setFinanceiroDialog(true);\n  };\n\n  const confirmDeleteFinanceiro = (data: FinanceiroData) => {\n    setFinanceiro(data);\n    setDeleteFinanceiroDialog(true);\n  };\n  const confirmDeleteSelected = () => {\n    setDeleteFinanceirosDialog(true);\n  };\n\n  const deleteFinanceiro = () => {\n    const _financeiro = { ...financeiro };\n\n    if (_financeiro.id) {\n      FinanceiroService.getInstance()\n        .deleteFinanceiro(_financeiro.id)\n        .then(() => {\n          setDeleteFinanceiroDialog(false);\n          setFinanceiro(emptyFinanceiro);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successo\",\n            detail: \"Financeiro Excluido\",\n            life: 3000,\n          });\n        });\n    }\n\n    console.log(\"financeiro excluido:\\n\", JSON.stringify(_financeiro, null, 4));\n    setFireReload((prev) => !prev);\n  };\n\n  const deleteSelectedFinanceiros = () => {\n    const _financeiros = [...financeiros];\n\n    if (_financeiros) {\n      const ids: number[] = [];\n      _financeiros.forEach((e) => {\n        if (e.id) {\n          return ids.push(e.id);\n        }\n      });\n      if (ids.length) {\n        FinanceiroService.getInstance()\n          .deleteFinanceiro(ids)\n          .then(() => {\n            setDeleteFinanceirosDialog(false);\n            toast.current?.show({\n              severity: \"success\",\n              summary: \"Successo\",\n              detail: \"Financeiros Excluidos\",\n              life: 3000,\n            });\n          });\n      } else {\n        toast.current?.show({\n          severity: \"error\",\n          summary: \"Erro\",\n          detail: \"Seleção vazia!\",\n          life: 3000,\n        });\n      }\n    } else {\n      toast.current?.show({\n        severity: \"error\",\n        summary: \"Erro\",\n        detail: \"Seleção inválida!\",\n        life: 3000,\n      });\n    }\n\n    setFireReload((prev) => !prev);\n  };\n\n  const saveFinanceiro = (data: FinanceiroData) => {\n    const verifiedUuid = financeiro.uuid ?? generateUUID();\n\n    const _financeiros = [...financeiros];\n    const vencimento = formatDate(data.dataVencimento);\n    const pagamento = data.dataPagamento\n      ? formatDate(data.dataPagamento)\n      : undefined;\n    let _financeiro = {\n      ...data,\n      id: financeiro?.id,\n      uuid: verifiedUuid,\n      anoCalendario: getCurrentYear(),\n      dataVencimento: vencimento,\n      dataPagamento: pagamento,\n    };\n\n    try {\n      if (comprovante) {\n        const renamedFile = new File(\n          [comprovante[0]],\n          Date.now() + \"_\" + comprovante[0].name,\n        );\n        _financeiro = { ..._financeiro, comprovante: renamedFile.name };\n        setFinanceiro(_financeiro);\n\n        const fileModel: FileModel = {\n          path: \"archives\",\n          file: renamedFile,\n          foderName: verifiedUuid,\n        };\n\n        const uploadStatus =\n          FileUploadService.getInstance().fileUpload(fileModel);\n\n        uploadStatus.then(console.log);\n      }\n    } catch (error) {\n      console.log(\"file_upload_error: \", error);\n    }\n\n    setFinanceiro(_financeiro);\n\n    FinanceiroService.getInstance()\n      .addUpdateFinanceiro(_financeiro)\n      .then(() => {\n        if (financeiro.id) {\n          const index = findIndexById(financeiro.id);\n          _financeiros[index] = _financeiro;\n\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successful\",\n            detail: \"Financeiro Atualizado\",\n            life: 3000,\n          });\n        } else {\n          _financeiros.push(_financeiro);\n          toast.current?.show({\n            severity: \"success\",\n            summary: \"Successful\",\n            detail: \"Financeiro Criado\",\n            life: 3000,\n          });\n        }\n\n        setFinanceiros(_financeiros);\n        setFinanceiroDialog(false);\n        setFinanceiro(emptyFinanceiro);\n        setSubmitted(true);\n      });\n\n    setFireReload((prev) => !prev);\n    console.log(\"financeiro:\\n\", JSON.stringify(_financeiro, null, 4));\n  };\n\n  const findIndexById = (id: number) => {\n    let index = -1;\n    for (let i = 0; i < financeiros?.length; i++) {\n      if (financeiros[i].id === id) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  };\n\n  const deleteFinanceiroDialogFooter = (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          hideDeleteFinanceiroDialog();\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={deleteFinanceiro}\n      />\n    </>\n  );\n\n  const deleteFinanceirosDialogFooter = (\n    <>\n      <Button\n        label=\"Não\"\n        icon=\"pi pi-times\"\n        severity=\"info\"\n        onClick={() => {\n          hideDeleteFinanceirosDialog();\n          toast.current?.show({\n            severity: \"info\",\n            summary: \"Cancelado\",\n            detail: \"Ação cancelada!\",\n            life: 3000,\n          });\n        }}\n      />\n      <Button\n        label=\"Sim\"\n        icon=\"pi pi-check\"\n        severity=\"danger\"\n        onClick={deleteSelectedFinanceiros}\n      />\n    </>\n  );\n  const financeiroTableHeader = () => {\n    return (\n      <div>\n        <div className=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\n          <h5 className=\"m-0\">\n            Gerenciar {tipo ? capitalize(tipo.toLowerCase()) : \"Mensalidade\"}s\n          </h5>\n          <span className=\"block mt-2 md:mt-0 p-input-icon-left ml-2\">\n            <i className=\"pi pi-search\" />\n            <Dropdown\n              id=\"tipo\"\n              value={anoCalendario ?? getCurrentYear()}\n              options={makeYearArray()}\n              optionLabel=\"\"\n              placeholder=\"Selecione...\"\n              emptyMessage={`Sem resultados`}\n              pt={{\n                root: {\n                  className: classNames(\"p-inputtext-sm\", \"w-full\"),\n                },\n              }}\n              onChange={(e: DropdownChangeEvent) => {\n                e.preventDefault();\n                setAnoCalendario(e.value);\n              }}\n            />\n          </span>\n          <span className=\"block mt-2 md:mt-0 p-input-icon-left\">\n            <i className=\"pi pi-search\" />\n            <InputText\n              type=\"search\"\n              onInput={(e: React.FormEvent<HTMLInputElement>) => {\n                setGlobalFilter(e.currentTarget.value);\n              }}\n              placeholder=\"Pesquisar...\"\n            />\n          </span>\n        </div>\n        <div></div>\n      </div>\n    );\n  };\n\n  const fileurl = () => (\n    <>\n      {financeiro.uuid &&\n        financeiro.comprovante &&\n        fileExistsOnServer(\n          `${FILE_UPLOAD_BASE_URL}${financeiro.uuid}/${financeiro.comprovante}`,\n        ) && (\n          <a\n            href={`${FILE_UPLOAD_BASE_URL}${financeiro.uuid}/${financeiro.comprovante}`}\n            target={\"_blank\"}\n            rel=\"noreferrer\"\n          >\n            {financeiro.comprovante}\n          </a>\n        )}\n    </>\n  );\n\n  useEffect(() => {\n    const jca = jscrudapi<UsuarioData>(API_URL);\n    const getUnidades = async () => {\n      const response = await jca.list(\"apartamentosformatados\");\n      setUnidades(response.records);\n    };\n\n    getUnidades().then((r) => r);\n\n    setAnoCalendario(getCurrentYear());\n  }, []);\n\n  useEffect(() => {\n    reload(fireReload);\n  }, [fireReload, setFireReload, reload]);\n\n  useEffect(() => {\n    exportAnoCalendario(anoCalendario);\n  }, [anoCalendario, setAnoCalendario, exportAnoCalendario]);\n\n  return (\n    <>\n      <div className=\"grid\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            {loading ? (\n              <div className=\"spinner-wrapper\">\n                {loadingMessage}\n                <ProgressSpinner\n                  aria-label=\"Loading\"\n                  style={{\n                    width: \"40px\",\n                    height: \"40px\",\n                    position: \"absolute\",\n                  }}\n                  pt={{\n                    spinner: { style: { animationDuration: \".5s\" } },\n                    circle: {\n                      style: {\n                        stroke: \"#2E0357\",\n                        strokeWidth: 2,\n                        animation: \"none\",\n                      },\n                    },\n                  }}\n                />\n              </div>\n            ) : null}\n            {financeiroTableToolbar(\n              selectedFinanceiro,\n              dt,\n              openNew,\n              confirmDeleteSelected,\n            )}\n            <Toast ref={toast} />\n            <DataTable\n              value={financeirosData ?? undefined}\n              ref={dt}\n              dataKey={\"id\"}\n              header={financeiroTableHeader()}\n              columnResizeMode=\"expand\"\n              resizableColumns\n              showGridlines\n              stripedRows\n              size=\"small\"\n              selectionMode={\"single\"}\n              // selectAll={true}\n              dragSelection={true}\n              selection={selectedFinanceiro}\n              showSelectAll={true}\n              paginator\n              paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n              currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords} registro(s)\"\n              globalFilter={globalFilter}\n              emptyMessage=\"Nenhum registro encontrado.\"\n              rows={10}\n              rowsPerPageOptions={[5, 10, 25, 50]}\n              tableStyle={{ minWidth: \"50rem\" }}\n              className=\"datatable-responsive\"\n              scrollable={true}\n              scrollHeight={\"400px\"}\n              onSelectionChange={(e) => {\n                setSelectedFinanceiro(e.value as FinanceiroData);\n                if (e.value.length > 1) {\n                  setFinanceiros(e.value as FinanceiroData[]);\n                }\n              }}\n            >\n              <Column\n                selectionMode={\"multiple\"}\n                headerStyle={{ width: \"3rem\" }}\n              ></Column>\n\n              <Column\n                field=\"id\"\n                header=\"ID\"\n                sortable\n                bodyClassName=\"text-center text-color-secondary text-sm\"\n                style={{ maxWidth: \"4rem\" }}\n              />\n              <Column\n                field=\"titulo\"\n                header=\"Título\"\n                sortable\n                style={{ minWidth: \"14rem\" }}\n                bodyClassName=\"text-color-secondary text-sm\"\n                body={tituloTemplate}\n              ></Column>\n              <Column\n                field=\"valor\"\n                header=\"Valor\"\n                bodyClassName=\"text-center\"\n                style={{ maxWidth: \"6.5rem\" }}\n                body={valorTemplate}\n              ></Column>\n              <Column\n                field=\"dataVencimento\"\n                header=\"Vencimento\"\n                bodyClassName=\"text-center\"\n                style={{ maxWidth: \"8.5rem\" }}\n                body={dataVencimentoTemplate}\n              ></Column>\n              <Column\n                field=\"dataPagamento\"\n                header=\"Pagamento\"\n                bodyClassName=\"text-color-secondary text-sm\"\n                style={{ maxWidth: \"8.5rem\" }}\n                body={dataPagamentoTemplate}\n              />\n              <Column\n                field=\"statusFinanceiro\"\n                header=\"Status\"\n                bodyClassName=\"text-color-secondary text-sm\"\n                style={{ minWidth: \"1rem\" }}\n                body={statusTemplate}\n              />\n              {!AuthService.userIsCondomino() && (\n                <Column\n                  field=\"tipo\"\n                  header=\"Tipo\"\n                  bodyClassName=\"text-color-secondary text-sm\"\n                  style={{ minWidth: \"1rem\" }}\n                  body={tipoTemplate}\n                />\n              )}\n              <Column\n                field=\"observacao\"\n                header=\"Observações\"\n                bodyClassName=\"text-color-secondary text-sm\"\n                style={{ minWidth: \"1rem\" }}\n                body={observacaoTemplate}\n              />\n              <Column\n                field=\"unidade\"\n                header=\"Unidade\"\n                bodyClassName=\"text-color-secondary text-sm\"\n                style={{ minWidth: \"1rem\" }}\n                body={unidadeTemplate}\n              />\n              <Column\n                key={generateUUID()}\n                header=\"Ações\"\n                bodyClassName=\"text-center\"\n                body={(rowData: FinanceiroData) => (\n                  <span className=\"p-buttonset\">\n                    <Button\n                      icon={`pi ${\n                        AuthService.userIsCondomino() ? \"pi-eye\" : \"pi-pencil\"\n                      }`}\n                      size=\"small\"\n                      rounded\n                      className=\"mr-2\"\n                      onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                        e.preventDefault();\n                        editFinanceiro(rowData);\n                      }}\n                    />\n                    {!AuthService.userIsCondomino() ? (\n                      <Button\n                        icon=\"pi pi-trash\"\n                        severity=\"danger\"\n                        size=\"small\"\n                        rounded\n                        onClick={(e: React.MouseEvent<HTMLButtonElement>) => {\n                          e.preventDefault();\n                          confirmDeleteFinanceiro(rowData);\n                        }}\n                      />\n                    ) : null}\n                  </span>\n                )}\n              />\n            </DataTable>\n            {/* Edit Financeiro Dialog */}\n            <div className=\"card flex justify-content-center\">\n              <Dialog\n                visible={financeiroDialog}\n                // style={{ width: \"450px\" }}\n                style={{ width: \"50vw\", marginLeft: \"10%\", marginRight: \"10%\" }}\n                breakpoints={{ \"960px\": \"75vw\", \"641px\": \"100vw\" }}\n                contentStyle={{\n                  width: \"auto\",\n                  height: \"auto\",\n                  padding: \"0 1.5rem\",\n                }}\n                headerStyle={{\n                  width: \"auto\",\n                  height: \"auto\",\n                  padding: \"1.5rem 1.5rem 0rem\",\n                }}\n                header={\n                  isReadOnly && !tipo\n                    ? \"Informar Pagamento\"\n                    : financeiro.id\n                    ? \"Editar\"\n                    : \"Nova \" + capitalize(tipo ? tipo.toLowerCase() : \"\")\n                }\n                modal\n                maximizable\n                className=\"p-fluid\"\n                onHide={hideDialog}\n              >\n                <form id=\"form1\" onSubmit={handleSubmit(saveFinanceiro)}>\n                  <div className=\"pt-4 ml-4 mr-4\">\n                    <div className=\"formgrid grid\">\n                      {/* TITULO */}\n                      <div className=\"field col-12\">\n                        <label htmlFor=\"titulo\">Título</label>\n                        <Controller\n                          name=\"titulo\"\n                          control={control}\n                          defaultValue={financeiro.titulo}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputText\n                              {...field}\n                              id=\"titulo\"\n                              type=\"text\"\n                              value={field.value}\n                              autoFocus\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              onInput={(\n                                e: React.FormEvent<HTMLInputElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e);\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                        {getFormErrorMessage(\"titulo\")}\n                      </div>\n                      {/* VALOR */}\n                      <div className=\"field col-12\">\n                        <label htmlFor=\"valor\">Valor</label>\n                        <Controller\n                          name=\"valor\"\n                          control={control}\n                          defaultValue={financeiro.valor}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <InputNumber\n                              id=\"valor\"\n                              value={field.value}\n                              mode=\"currency\"\n                              currency=\"BRL\"\n                              locale=\"pt-BR\"\n                              minFractionDigits={2}\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              onValueChange={(\n                                e: InputNumberValueChangeEvent,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e);\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                        {getFormErrorMessage(\"valor\")}\n                      </div>\n                      {/* DATA VENCIMENTO */}\n                      <div className=\"field col-12 md:col-6\">\n                        <label htmlFor=\"dataVencimento\">Vencimento</label>\n                        <Controller\n                          name=\"dataVencimento\"\n                          control={control}\n                          defaultValue={formatDate(\n                            financeiro.dataVencimento,\n                            \"DD/MM/YYYY\",\n                          )}\n                          rules={{ required: requiredFieldError }}\n                          render={({ field, fieldState }) => (\n                            <>\n                              <Calendar\n                                {...field}\n                                id=\"dataVencimento\"\n                                value={new Date(Date.parse(field.value))}\n                                mask=\"99/99/9999\"\n                                placeholder=\"DD/MM/YYYY\"\n                                dateFormat=\"dd/mm/yy\"\n                                locale=\"pt\"\n                                showIcon\n                                showButtonBar\n                                pt={{\n                                  input: {\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm w-full\",\n                                        {\n                                          \"p-invalid\": fieldState.error,\n                                        },\n                                      ),\n                                    },\n                                  },\n                                }}\n                                onChange={(e) => {\n                                  e.preventDefault();\n                                  if (e.value) {\n                                    field.onChange(\n                                      formatDate(\n                                        new Date(e.value).toLocaleDateString(),\n                                        \"YYYY-MM-DD HH:mm:ss\",\n                                      ),\n                                    );\n                                  } else {\n                                    field.onChange(e.value);\n                                  }\n                                }}\n                                disabled={isReadOnly}\n                              />\n                            </>\n                          )}\n                        />\n                        {getFormErrorMessage(\"dataVencimento\")}\n                      </div>\n                      {/* DATA PAGAMENTO */}\n                      <div className=\"field col-12 md:col-6\">\n                        <label htmlFor=\"dataPagamento\">Pagamento</label>\n                        <Controller\n                          name=\"dataPagamento\"\n                          control={control}\n                          defaultValue={\n                            financeiro.dataPagamento\n                              ? formatDate(\n                                  financeiro.dataPagamento,\n                                  \"DD/MM/YYYY\",\n                                )\n                              : undefined\n                          }\n                          render={({ field, fieldState }) => (\n                            <>\n                              <Calendar\n                                {...field}\n                                id=\"dataPagamento\"\n                                value={\n                                  field.value\n                                    ? new Date(Date.parse(field.value))\n                                    : undefined\n                                }\n                                mask=\"99/99/9999\"\n                                placeholder=\"DD/MM/YYYY\"\n                                dateFormat=\"dd/mm/yy\"\n                                locale=\"pt\"\n                                showIcon\n                                showButtonBar\n                                pt={{\n                                  input: {\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm w-full\",\n                                        {\n                                          \"p-invalid\": fieldState.error,\n                                        },\n                                      ),\n                                    },\n                                  },\n                                }}\n                                onChange={(e) => {\n                                  e.preventDefault();\n                                  if (e.value) {\n                                    field.onChange(\n                                      formatDate(\n                                        new Date(e.value).toLocaleDateString(),\n                                        \"YYYY-MM-DD HH:mm:ss\",\n                                      ),\n                                    );\n                                  } else {\n                                    field.onChange(e.value);\n                                  }\n                                }}\n                              />\n                            </>\n                          )}\n                        />\n                        {getFormErrorMessage(\"dataPagamento\")}\n                      </div>\n                      {/* STATUS/TIPO */}\n                      <div className=\"field col-12\">\n                        <div className=\"formgrid grid\">\n                          {/* TIPO */}\n                          <div className=\"col-6\">\n                            <label htmlFor=\"tipo\">Tipo</label>\n                            <Controller\n                              name=\"tipo\"\n                              control={control}\n                              defaultValue={financeiro.tipo}\n                              rules={{ required: requiredFieldError }}\n                              render={({ field, fieldState }) => (\n                                <Dropdown\n                                  id=\"tipo\"\n                                  value={field.value}\n                                  options={[\"RECEITA\", \"DESPESA\"]}\n                                  optionLabel=\"\"\n                                  placeholder=\"Selecione...\"\n                                  emptyMessage={`Sem resultados`}\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm w-full\",\n                                        {\n                                          \"p-invalid\": fieldState.error,\n                                        },\n                                      ),\n                                    },\n                                  }}\n                                  onChange={(e: DropdownChangeEvent) => {\n                                    e.preventDefault();\n                                    field.onChange(e.value);\n                                  }}\n                                  disabled\n                                />\n                              )}\n                            />\n                            {getFormErrorMessage(\"tipo\")}\n                          </div>\n                          {/* STATUS */}\n                          <div className=\"col-6\">\n                            <label htmlFor=\"statusFinanceiro\">Status</label>\n                            <Controller\n                              name=\"statusFinanceiro\"\n                              control={control}\n                              defaultValue={financeiro.statusFinanceiro}\n                              rules={{ required: requiredFieldError }}\n                              render={({ field, fieldState }) => (\n                                <Dropdown\n                                  id=\"statusFinanceiro\"\n                                  value={field.value}\n                                  options={[\"PENDENTE\", \"PAGO\"]}\n                                  optionLabel=\"\"\n                                  placeholder=\"Selecione...\"\n                                  emptyMessage={`Sem resultados`}\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm w-full\",\n                                        {\n                                          \"p-invalid\": fieldState.error,\n                                        },\n                                      ),\n                                    },\n                                  }}\n                                  onChange={(e: DropdownChangeEvent) => {\n                                    e.preventDefault();\n                                    field.onChange(e.value);\n                                  }}\n                                  disabled={isReadOnly}\n                                />\n                              )}\n                            />\n                            {getFormErrorMessage(\"statusFinanceiro\")}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"field col-12\">\n                        <div>\n                          <label htmlFor=\"idUnidade\">Unidade</label>\n                          <Controller\n                            name=\"idUnidade\"\n                            control={control}\n                            defaultValue={financeiro.idUnidade}\n                            render={({ field, fieldState }) => (\n                              <Dropdown\n                                id=\"idUnidade\"\n                                value={field.value}\n                                options={unidades}\n                                optionLabel=\"label\"\n                                placeholder=\"Selecione...\"\n                                emptyMessage={`Sem resultados`}\n                                pt={{\n                                  root: {\n                                    className: classNames(\n                                      \"p-inputtext-sm w-full\",\n                                      {\n                                        \"p-invalid\": fieldState.error,\n                                      },\n                                    ),\n                                  },\n                                }}\n                                onChange={(e: DropdownChangeEvent) => {\n                                  e.preventDefault();\n                                  field.onChange(e.value);\n                                }}\n                                disabled={isReadOnly}\n                              />\n                            )}\n                          />\n                          {getFormErrorMessage(\"idUnidade\")}\n                        </div>\n                      </div>\n                      {/* COMPROVANTE */}\n                      <div className=\"field col-12\">\n                        <Controller\n                          name=\"comprovante\"\n                          control={control}\n                          defaultValue={financeiro.comprovante}\n                          render={({ field, fieldState }) => (\n                            <FileUpload\n                              {...field}\n                              id=\"comprovante\"\n                              mode=\"basic\"\n                              multiple={false}\n                              name=\"file\"\n                              url=\"/api/upload\"\n                              accept=\"image/jpeg,image/png,application/pdf\"\n                              maxFileSize={3 * 1024 * 1024}\n                              chooseLabel=\"Escolha o arquivo! (max. 3MB)\"\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              onValidationFail={(file: File) => {\n                                console.log(\"onValidationFail: \", file);\n                                const valid = validateFileSize(\n                                  file,\n                                  3 * 1024 * 1024,\n                                );\n                                if (!valid.status) {\n                                  msgs.current?.show([\n                                    {\n                                      severity: \"error\",\n                                      summary: valid.message?.summary,\n                                      detail: valid.message?.detail,\n                                    },\n                                  ]);\n                                }\n                              }}\n                              onSelect={(e: FileUploadSelectEvent) => {\n                                e.originalEvent.preventDefault();\n                                field.onChange(e);\n                                setComprovante(e.files);\n                              }}\n                            />\n                          )}\n                        />\n                        <Messages\n                          ref={msgs}\n                          id=\"size-message-error\"\n                          pt={{\n                            wrapper: { className: \"p-1\" },\n                            summary: { className: \"text-sm\" },\n                            detail: { className: \"text-sm\" },\n                          }}\n                        />\n                        {fileurl()}\n                        {getFormErrorMessage(\"comprovante\")}\n                      </div>\n                      <div className=\"field col-12\">\n                        <label htmlFor=\"observacao\">Observações</label>\n                        <Controller\n                          name=\"observacao\"\n                          control={control}\n                          defaultValue={financeiro.observacao}\n                          render={({ field, fieldState }) => (\n                            <InputTextarea\n                              id=\"observacao\"\n                              value={field.value}\n                              rows={3}\n                              cols={20}\n                              autoResize\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm w-full\",\n                                    {\n                                      \"p-invalid\": fieldState.error,\n                                    },\n                                  ),\n                                },\n                              }}\n                              onInput={(\n                                e: React.FormEvent<HTMLTextAreaElement>,\n                              ) => {\n                                e.preventDefault();\n                                field.onChange(e.currentTarget.value);\n                              }}\n                              disabled={isReadOnly}\n                            />\n                          )}\n                        />\n                        {getFormErrorMessage(\"observacao\")}\n                      </div>\n                      <div className=\"flex align-items-center justify-content-end gap-2 mb-4\">\n                        <Button\n                          label=\"Cancelar\"\n                          severity=\"danger\"\n                          icon=\"pi pi-times\"\n                          onClick={hideDialog}\n                        />\n                        <Button\n                          label=\"Salvar\"\n                          type=\"submit\"\n                          icon=\"pi pi-check\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </Dialog>{\" \"}\n            </div>\n            {/* Delete Financeiro Dialog */}\n            <Dialog\n              visible={deleteFinanceiroDialog}\n              style={{ width: \"450px\" }}\n              header=\"Confirmação\"\n              modal\n              footer={deleteFinanceiroDialogFooter}\n              onHide={hideDeleteFinanceiroDialog}\n            >\n              <div className=\"flex align-items-center justify-content-center\">\n                <i\n                  className=\"pi pi-exclamation-triangle mr-3\"\n                  style={{ fontSize: \"2rem\" }}\n                />\n                {financeiro && (\n                  <span>\n                    Você tem certeza que deseja excluir o item{\" \"}\n                    <b>{financeiro.titulo}</b>?\n                  </span>\n                )}\n              </div>\n            </Dialog>\n            {/* Delete Financeiros Dialog */}\n            <Dialog\n              visible={deleteFinanceirosDialog}\n              style={{ width: \"450px\" }}\n              header=\"Confirmação\"\n              modal\n              footer={deleteFinanceirosDialogFooter}\n              onHide={hideDeleteFinanceirosDialog}\n            >\n              <div className=\"flex align-items-center justify-content-center\">\n                <i\n                  className=\"pi pi-exclamation-triangle mr-3\"\n                  style={{ fontSize: \"2rem\" }}\n                />\n                {financeiro && (\n                  <span>\n                    Tem certeza que deseja excluir todos os{\" \"}\n                    {financeiros.length ? <b>{financeiros.length}</b> : \"\"}{\" \"}\n                    itens selecionados?\n                    <ScrollPanel style={{ width: \"100%\", height: \"150px\" }}>\n                      <ul>\n                        {financeiros.length &&\n                          financeiros.map((f) => {\n                            return (\n                              <>\n                                <li>\n                                  <code key={generateUUID()}>{f.titulo}</code>\n                                </li>\n                              </>\n                            );\n                          })}\n                      </ul>\n                    </ScrollPanel>\n                  </span>\n                )}\n              </div>\n            </Dialog>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","// Copyright 2023 Alberto Paiva.\n// SPDX-License-Identifier: MIT\n\nimport { DefaultLayout } from \"@/layouts/DefaultLayout\";\nimport { useDataReducer } from \"@/libs/data-utils\";\nimport { useEffect, useState } from \"react\";\nimport { FinanceiroTable } from \"pages/financeiro/table/base-table.tsx\";\nimport { FinanceiroService } from \"libs/api/financeiro-api.ts\";\nimport AuthService, { UsuarioField } from \"@/services/auth.service.ts\";\nimport { sleep } from \"libs/utils.ts\";\n\ninterface FinanceiroListProps {\n  title?: string;\n  tipo?: \"RECEITA\" | \"DESPESA\";\n}\n\nexport const FinanceirosList = ({\n  title = \"Financeiro\",\n  tipo,\n}: FinanceiroListProps) => {\n  const [selectedFinanceiro] = useState<string>();\n  const { state, dispatch } = useDataReducer<FinanceiroData>();\n  const [reload, setReload] = useState<boolean>(false);\n  const [selectedAnoCalendario, setSelectedAnoCalendario] = useState<string>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const unidadeID = AuthService.getCurrentUserField(\n          UsuarioField.IdUnidade,\n        );\n        let response: FinanceiroData[] = [];\n\n        if (AuthService.userIsCondomino()) {\n          if (unidadeID) {\n            response =\n              await FinanceiroService.getInstance().getFinanceiroMensalidade(\n                unidadeID as number,\n                selectedAnoCalendario,\n              );\n          }\n        } else if (!AuthService.userIsCondomino()) {\n          response = tipo\n            ? await FinanceiroService.getInstance().getFinanceiroByTipo(\n                tipo,\n                selectedAnoCalendario,\n              )\n            : await FinanceiroService.getInstance().getAllFinanceiroData(\n                selectedAnoCalendario,\n              );\n        } else {\n          response = [];\n        }\n\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n\n    fetchData().then((r) => r);\n  }, [dispatch, selectedFinanceiro, tipo, reload, selectedAnoCalendario]);\n\n  return (\n    <DefaultLayout title={title}>\n      <>\n        <div>\n          <FinanceiroTable\n            financeirosData={state.dataArray}\n            loading={state.loading}\n            loadingMessage={state.error}\n            tipo={tipo}\n            reload={(value) => {\n              sleep(1000).then(() => {\n                setReload(value);\n              });\n            }}\n            exportAnoCalendario={(ano) => {\n              setSelectedAnoCalendario(ano);\n            }}\n          />\n        </div>\n      </>\n    </DefaultLayout>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { FinanceiroService } from \"libs/api/financeiro-api.ts\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { DefaultLayout } from \"layouts/DefaultLayout.tsx\";\nimport { Button } from \"primereact/button\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { generateUUID, getCurrentYear, makeYearArray } from \"libs/utils.ts\";\nimport { InputText } from \"primereact/inputtext\";\nimport { classNames } from \"primereact/utils\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { InputNumber } from \"primereact/inputnumber\";\nimport { Calendar } from \"primereact/calendar\";\nimport jscrudapi from \"js-crud-api\";\nimport AuthService, { API_URL, UsuarioField } from \"@/services/auth.service.ts\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\n\nexport const FinanceiroReport = () => {\n  const { state, dispatch } = useDataReducer<FinanceiroData>();\n\n  const [financeiros, setFinanceiros] = useState<FinanceiroData[]>([]);\n  const [unidades, setUnidades] = useState<UnidadeData[]>([]);\n\n  const [anoCalendario, setAnoCalendario] = useState<string>();\n\n  const componentRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        const unidadeID = AuthService.getCurrentUserField(\n          UsuarioField.IdUnidade,\n        );\n\n        let response: FinanceiroData[] = [];\n\n        if (AuthService.userIsCondomino()) {\n          if (unidadeID) {\n            response =\n              await FinanceiroService.getInstance().getFinanceiroByUnidade(\n                unidadeID as number,\n                anoCalendario,\n              );\n          }\n        } else if (!AuthService.userIsCondomino()) {\n          response =\n            await FinanceiroService.getInstance().getAllFinanceiroData(\n              anoCalendario,\n            );\n        } else {\n          response = [];\n        }\n\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n    fetchData().then((r) => r);\n  }, [anoCalendario]);\n\n  useEffect(() => {\n    setFinanceiros(state.dataArray ?? []);\n  }, [financeiros, state]);\n\n  useEffect(() => {\n    const jca = jscrudapi<UnidadeData>(API_URL);\n    const getUnidades = async () => {\n      const response = await jca.list(\"unidadescompletas\");\n      setUnidades(response.records);\n    };\n\n    getUnidades().then((r) => r);\n  }, []);\n\n  useEffect(() => {\n    setAnoCalendario(getCurrentYear());\n  }, []);\n\n  const makeUnidadeLabelById = (id?: number) => {\n    let unidade = null;\n    for (let i = 0; i < unidades?.length; i++) {\n      if (unidades[i].id === id) {\n        unidade = unidades[i];\n        break;\n      }\n    }\n    return unidade\n      ? `${unidade?.nomeCondominio}. Bl.${unidade?.numero} - Ap.${unidade?.bloco}`\n      : \"\";\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    documentTitle: \"RelatórioFinanceiro.pdf\",\n    copyStyles: true,\n    onAfterPrint: () => {\n      console.log(\"Printed PDF successfully!\");\n    },\n  });\n\n  return (\n    <>\n      <DefaultLayout>\n        <div className=\"card md:justify-content-start md:align-items-center\">\n          <h5 className=\"m-0\">Ano Calendário {anoCalendario}</h5>\n          <hr />\n          <div>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left ml-2\">\n              <i className=\"pi pi-search\" />\n              <Dropdown\n                id=\"tipo\"\n                value={anoCalendario ?? getCurrentYear()}\n                options={makeYearArray()}\n                optionLabel=\"\"\n                placeholder=\"Selecione...\"\n                emptyMessage={`Sem resultados`}\n                pt={{\n                  root: {\n                    className: classNames(\"p-inputtext-sm\", \"w-full\"),\n                  },\n                }}\n                onChange={(e: DropdownChangeEvent) => {\n                  e.preventDefault();\n                  setAnoCalendario(e.value);\n                }}\n              />\n            </span>\n          </div>\n        </div>\n        <div ref={componentRef} style={{ width: \"100%\", height: \"100%\" }}>\n          <div>\n            {financeiros.length ? (\n              <div className=\"ml-4 mr-4 \">\n                <div className=\"formgrid grid\">\n                  {financeiros?.map((f) => {\n                    return (\n                      <>\n                        <section\n                          key={generateUUID()}\n                          className=\"card noborder mt-2\"\n                        >\n                          {/* TITULO */}\n                          <div className=\"field col-12\">\n                            <label htmlFor=\"titulo\">Título</label>\n                            <InputText\n                              id=\"titulo\"\n                              type=\"text\"\n                              value={f.titulo}\n                              readOnly\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                  ),\n                                },\n                              }}\n                            />\n                          </div>\n                          {/* */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              {/* VALOR */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"valor\">Valor</label>\n                                <InputNumber\n                                  id=\"valor\"\n                                  value={f.valor}\n                                  mode=\"currency\"\n                                  currency=\"BRL\"\n                                  locale=\"pt-BR\"\n                                  minFractionDigits={2}\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                              {/* DATA VENCIMENTO */}\n                              <div className=\"col-3\">\n                                <label htmlFor=\"dataVencimento\">\n                                  Vencimento\n                                </label>\n\n                                <Calendar\n                                  id=\"dataVencimento\"\n                                  value={new Date(Date.parse(f.dataVencimento))}\n                                  mask=\"99/99/9999\"\n                                  placeholder=\"DD/MM/YYYY\"\n                                  dateFormat=\"dd/mm/yy\"\n                                  locale=\"pt\"\n                                  readOnlyInput\n                                  disabled\n                                  pt={{\n                                    input: {\n                                      root: {\n                                        className: classNames(\n                                          \"p-inputtext-sm\",\n                                          \"w-full\",\n                                        ),\n                                      },\n                                    },\n                                  }}\n                                />\n                              </div>\n                              {/* DATA PAGAMENTO */}\n                              <div className=\"col-3\">\n                                <label htmlFor=\"dataPagamento\">Pagamento</label>\n                                <Calendar\n                                  id=\"dataPagamento\"\n                                  value={\n                                    f.dataPagamento\n                                      ? new Date(Date.parse(f.dataPagamento))\n                                      : undefined\n                                  }\n                                  mask=\"99/99/9999\"\n                                  placeholder=\"DD/MM/YYYY\"\n                                  dateFormat=\"dd/mm/yy\"\n                                  locale=\"pt\"\n                                  readOnlyInput\n                                  disabled\n                                  pt={{\n                                    input: {\n                                      root: {\n                                        className: classNames(\n                                          \"p-inputtext-sm\",\n                                          \"w-full\",\n                                        ),\n                                      },\n                                    },\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {/* STATUS/TIPO */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              {/* TIPO */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"tipo\">Tipo</label>\n                                <InputText\n                                  id=\"tipo\"\n                                  type=\"text\"\n                                  value={f.tipo}\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                              {/* STATUS */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"statusFinanceiro\">Status</label>\n                                <InputText\n                                  id=\"status\"\n                                  type=\"text\"\n                                  value={f.statusFinanceiro}\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {/* UNIDADE */}\n                          <div className=\"field col-12\">\n                            <div>\n                              <label htmlFor=\"idUnidade\">Unidade</label>\n                              <InputText\n                                id=\"idUnidade\"\n                                type=\"text\"\n                                value={makeUnidadeLabelById(f?.idUnidade)}\n                                readOnly\n                                pt={{\n                                  root: {\n                                    className: classNames(\n                                      \"p-inputtext-sm\",\n                                      \"w-full\",\n                                    ),\n                                  },\n                                }}\n                              />\n                            </div>\n                          </div>\n                          {/* COMPROVANTE */}\n                          <div className=\"field col-12\">\n                            <div>\n                              <label htmlFor=\"comprovante\">Comprovante</label>\n                              <InputText\n                                id=\"comprovante\"\n                                type=\"text\"\n                                value={f.comprovante}\n                                readOnly\n                                pt={{\n                                  root: {\n                                    className: classNames(\n                                      \"p-inputtext-sm\",\n                                      \"w-full\",\n                                    ),\n                                  },\n                                }}\n                              />\n                            </div>\n                          </div>\n                          {/* OBSERVACOES */}\n                          <div className=\"field col-12\">\n                            <label htmlFor=\"observacao\">Observações</label>\n                            <InputTextarea\n                              id=\"observacao\"\n                              value={f.observacao}\n                              rows={3}\n                              cols={20}\n                              autoResize\n                              readOnly\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                  ),\n                                },\n                              }}\n                            />\n                          </div>\n                        </section>\n                        <div className=\"page-break\"></div>\n                      </>\n                    );\n                  })}\n                </div>\n                <div className=\"flex align-items-center justify-content-start gap-2 mb-4 hide-print\">\n                  <Button\n                    label=\"Imprimir\"\n                    className=\"hide-print\"\n                    onClick={handlePrint}\n                  ></Button>\n                  {/* <Button label=\"Salvar\" type=\"submit\" icon=\"pi pi-check\" /> */}\n                </div>\n              </div>\n            ) : (\n              <div className=\"ml-4 mr-4 cent\">\n                <div className=\"formgrid grid\">\n                  <div className=\"card md:justify-content-start md:align-items-center\">\n                    <h5 className=\"m-0\">\n                      <div className=\"cent\">\n                        Sem registros para o ano de {anoCalendario}\n                      </div>\n                    </h5>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </DefaultLayout>\n    </>\n  );\n};\n","import { type AxiosResponse } from \"axios\";\nimport { APIError } from \"libs/errors.ts\";\nimport { apiInstance, baseApi } from \"libs/api/base-api.ts\";\n\nexport class UsuarioService {\n  private static instance: UsuarioService | null = null;\n\n  private constructor() {\n    // Private constructor to prevent external instantiation.\n  }\n\n  public static getInstance(): UsuarioService {\n    if (!UsuarioService.instance) {\n      UsuarioService.instance = new UsuarioService();\n    }\n    return UsuarioService.instance;\n  }\n\n  getAllUsuariosCondominos = async (): Promise<UsuarioData[]> => {\n    const request: AxiosResponse<UsuarioData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/usuarioscondominos`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n\n  getAllUsuariosSindicos = async (): Promise<UsuarioData[]> => {\n    const request: AxiosResponse<UsuarioData[]> = await apiInstance({\n      method: \"GET\",\n      url: `${baseApi}/usuariossindicos?page=0,100`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    if (request.status !== 200) {\n      throw new APIError({\n        name: \"GET_ERROR\",\n        message: `Ocorreu um erro ao carregar os dados.`,\n        cause: request.statusText,\n        details: {\n          errorCode: request.status,\n          additionalInfo: \"Failed to fetch data\",\n        },\n      });\n    }\n\n    return request.data;\n  };\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { DefaultLayout } from \"layouts/DefaultLayout.tsx\";\nimport { Button } from \"primereact/button\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { generateUUID } from \"libs/utils.ts\";\nimport { InputText } from \"primereact/inputtext\";\nimport { classNames } from \"primereact/utils\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { Calendar } from \"primereact/calendar\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { UsuarioService } from \"libs/api/usuario-api.ts\";\nimport { Avatar } from \"primereact/avatar\";\nimport { getImageUrlOnServer } from \"libs/file-utils.ts\";\nimport { InputMask } from \"primereact/inputmask\";\n\nexport const CondominoReport = () => {\n  const { state, dispatch } = useDataReducer<UsuarioData>();\n\n  const [condominos, setCondominos] = useState<UsuarioData[]>([]);\n\n  const componentRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        let response: UsuarioData[] = [];\n\n        if (!AuthService.userIsCondomino()) {\n          response =\n            await UsuarioService.getInstance().getAllUsuariosCondominos();\n        } else {\n          response = [];\n        }\n\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n    fetchData().then((r) => r);\n  }, []);\n\n  useEffect(() => {\n    setCondominos(state.dataArray ?? []);\n  }, [condominos, state]);\n\n  const makeUnidadeLabelById = (id?: number) => {\n    let condomino = null;\n    for (let i = 0; i < condominos?.length; i++) {\n      if (condominos[i].id === id) {\n        condomino = condominos[i];\n        break;\n      }\n    }\n    return condomino\n      ? `Bl.${condomino?.numero} - Ap.${condomino?.bloco}. ${condomino?.nomeCondominio}.`\n      : \"\";\n  };\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    documentTitle: \"RelatórioCondominos.pdf\",\n    copyStyles: true,\n    onAfterPrint: () => {\n      console.log(\"Printed PDF successfully!\");\n    },\n  });\n\n  return (\n    <>\n      <DefaultLayout>\n        <div ref={componentRef} style={{ width: \"100%\", height: \"100%\" }}>\n          <div>\n            {condominos.length ? (\n              <div className=\"ml-4 mr-4\">\n                <div className=\"formgrid grid\">\n                  {condominos?.map((c) => {\n                    return (\n                      <>\n                        <section\n                          key={generateUUID()}\n                          className=\"card noborder mt-2\"\n                        >\n                          {/* Nome */}\n                          <div className=\"field col-12\">\n                            <div className=\"flex align-items-center gap-2\">\n                              <div>\n                                <Avatar\n                                  imageAlt={c.nome}\n                                  image={\n                                    c.imagemPerfil && c.uuid\n                                      ? getImageUrlOnServer(\n                                          c.imagemPerfil,\n                                          c.uuid,\n                                        )\n                                      : \"\"\n                                  }\n                                  className=\"p-mr-2\"\n                                  style={{ verticalAlign: \"middle\" }}\n                                  size=\"large\"\n                                  shape=\"circle\"\n                                  icon=\"pi pi-user\"\n                                  pt={{ image: { width: 32 } }}\n                                />\n                              </div>\n                              <div>\n                                <div>\n                                  <span\n                                    style={{\n                                      marginLeft: \".5em\",\n                                      verticalAlign: \"middle\",\n                                    }}\n                                  >\n                                    {c.nome}\n                                  </span>\n                                </div>\n                                <div>\n                                  <span\n                                    className=\"text-color-secondary text-sm\"\n                                    style={{\n                                      marginLeft: \".5em\",\n                                      verticalAlign: \"middle\",\n                                    }}\n                                  >\n                                    {c.email}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          {/* CPF/CONTATO */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              {/* CPF */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"cpf\">CPF</label>\n                                <InputMask\n                                  id=\"cpf\"\n                                  value={c.cpf}\n                                  mask=\"999.999.999-99\"\n                                  placeholder=\"000.000.000-00\"\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                              {/* CONTATO */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"contato\">Contato</label>\n                                <InputMask\n                                  id=\"contato\"\n                                  value={c.contato}\n                                  mask={\n                                    c.contato.length === 11\n                                      ? \"(99)99999-9999\"\n                                      : \"(99)9999-9999\"\n                                  }\n                                  placeholder=\"(00)00000-0000\"\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {/* ENTRADA/SAIDA */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              {/* DATA ENTRADA */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"dataEntrada\">Entrada</label>\n\n                                <Calendar\n                                  id=\"dataEntrada\"\n                                  value={new Date(Date.parse(c.dataEntrada))}\n                                  mask=\"99/99/9999\"\n                                  placeholder=\"DD/MM/YYYY\"\n                                  dateFormat=\"dd/mm/yy\"\n                                  locale=\"pt\"\n                                  readOnlyInput\n                                  disabled\n                                  pt={{\n                                    input: {\n                                      root: {\n                                        className: classNames(\n                                          \"p-inputtext-sm\",\n                                          \"w-full\",\n                                        ),\n                                      },\n                                    },\n                                  }}\n                                />\n                              </div>\n                              {/* DATA SAIDA */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"dataSaida\">Saída</label>\n                                <Calendar\n                                  id=\"dataSaida\"\n                                  value={\n                                    c.dataSaida\n                                      ? new Date(Date.parse(c.dataSaida))\n                                      : undefined\n                                  }\n                                  mask=\"99/99/9999\"\n                                  placeholder=\"DD/MM/YYYY\"\n                                  dateFormat=\"dd/mm/yy\"\n                                  locale=\"pt\"\n                                  readOnlyInput\n                                  disabled\n                                  pt={{\n                                    input: {\n                                      root: {\n                                        className: classNames(\n                                          \"p-inputtext-sm\",\n                                          \"w-full\",\n                                        ),\n                                      },\n                                    },\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {/* STATUS/UNIDADE */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              {/* STATUS */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"proprietario\">\n                                  Proprietário\n                                </label>\n                                <i\n                                  className={classNames(\"pi\", {\n                                    \"text-green-500 pi-check-circle\":\n                                      c.proprietario,\n                                    \"text-pink-500 pi-times-circle\":\n                                      !c.proprietario,\n                                  })}\n                                ></i>\n                              </div>\n                              {/* UNIDADE */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"statusFinanceiro\">Status</label>\n                                <InputText\n                                  id=\"status\"\n                                  type=\"text\"\n                                  value={makeUnidadeLabelById(c.id)}\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {/* OBSERVACOES */}\n                          <div className=\"field col-12\">\n                            <label htmlFor=\"observacao\">Observações</label>\n                            <InputTextarea\n                              id=\"observacao\"\n                              value={c.observacao}\n                              rows={3}\n                              cols={20}\n                              autoResize\n                              readOnly\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                  ),\n                                },\n                              }}\n                            />\n                          </div>\n                        </section>\n                        <div className=\"page-break\"></div>\n                      </>\n                    );\n                  })}\n                </div>\n                <div className=\"flex align-items-center justify-content-start gap-2 mb-4 hide-print\">\n                  <Button\n                    label=\"Imprimir\"\n                    className=\"hide-print\"\n                    onClick={handlePrint}\n                  ></Button>\n                  {/* <Button label=\"Salvar\" type=\"submit\" icon=\"pi pi-check\" /> */}\n                </div>\n              </div>\n            ) : (\n              <div className=\"ml-4 mr-4 cent\">\n                <div className=\"formgrid grid\">\n                  <div className=\"card md:justify-content-start md:align-items-center\">\n                    <h5 className=\"m-0\">\n                      <div className=\"cent\">Sem registros</div>\n                    </h5>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </DefaultLayout>\n    </>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { useDataReducer } from \"libs/data-utils.ts\";\nimport { DefaultLayout } from \"layouts/DefaultLayout.tsx\";\nimport { Button } from \"primereact/button\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { generateUUID } from \"libs/utils.ts\";\nimport { InputText } from \"primereact/inputtext\";\nimport { classNames } from \"primereact/utils\";\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport AuthService, { API_URL } from \"@/services/auth.service.ts\";\nimport { UnidadeService } from \"libs/api/unidade-api.ts\";\nimport { Dropdown, type DropdownChangeEvent } from \"primereact/dropdown\";\nimport jscrudapi from \"js-crud-api\";\n\nexport const UnidadeReport = () => {\n  const { state, dispatch } = useDataReducer<UnidadeData>();\n\n  const [unidades, setUnidades] = useState<UnidadeData[]>([]);\n\n  const [condominios, setCondominios] = useState<CondominioDistinctData[]>();\n  const [condominio, setCondominio] = useState<CondominioDistinctData>();\n\n  const componentRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_DATA_REQUEST\" });\n      try {\n        let response: UnidadeData[] = [];\n\n        if (!AuthService.userIsCondomino()) {\n          response = await UnidadeService.getInstance().getAllUnidades(\n            condominio?.id,\n          );\n        } else {\n          response = [];\n        }\n\n        dispatch({ type: \"FETCH_DATA_ARRAY_SUCCESS\", payload: response });\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_DATA_FAILURE\",\n          // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n          payload: \"error fetching data: \" + error,\n        });\n      }\n    };\n    fetchData().then((r) => r);\n  }, [condominio]);\n\n  useEffect(() => {\n    setUnidades(state.dataArray ?? []);\n  }, [unidades, state]);\n\n  useEffect(() => {\n    const jca = jscrudapi<CondominioDistinctData>(API_URL);\n    const getCondominios = async () => {\n      const response = await jca.list(\"condominiosdistinct\");\n      setCondominios(response.records);\n    };\n\n    getCondominios().then((r) => r);\n  }, []);\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    documentTitle: \"RelatórioCondominos.pdf\",\n    copyStyles: true,\n    onAfterPrint: () => {\n      console.log(\"Printed PDF successfully!\");\n    },\n  });\n\n  return (\n    <>\n      <DefaultLayout>\n        <div className=\"card md:justify-content-start md:align-items-center\">\n          <h5 className=\"m-0\">\n            {condominio?.nome ? condominio.nome : \"Todos os Condomínios\"}\n          </h5>\n          <hr />\n          <div>\n            <span className=\"block mt-2 md:mt-0 p-input-icon-left ml-2\">\n              <i className=\"pi pi-search\" />\n              <Dropdown\n                id=\"tipo\"\n                value={condominio}\n                options={condominios}\n                optionLabel=\"nome\"\n                placeholder=\"Selecione...\"\n                emptyMessage={`Sem resultados`}\n                pt={{\n                  root: {\n                    className: classNames(\"p-inputtext-sm\", \"w-full\"),\n                  },\n                }}\n                onChange={(e: DropdownChangeEvent) => {\n                  e.preventDefault();\n                  setCondominio(e.value);\n                }}\n              />\n            </span>\n          </div>\n        </div>\n        <div ref={componentRef} style={{ width: \"100%\", height: \"100%\" }}>\n          <div>\n            {unidades.length ? (\n              <div className=\"ml-4 mr-4\">\n                <div className=\"formgrid grid\">\n                  {unidades?.map((u) => {\n                    return (\n                      <>\n                        <section\n                          key={generateUUID()}\n                          className=\"card noborder mt-2\"\n                        >\n                          {/* BLOCO/NUMERO */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              {/* CPF */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"bloco\">Bloco</label>\n                                <InputText\n                                  id=\"bloco\"\n                                  value={`Bl.${u.bloco}`}\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                              {/* CONTATO */}\n                              <div className=\"col-6\">\n                                <label htmlFor=\"numero\">Apartamento</label>\n                                <InputText\n                                  id=\"numero\"\n                                  value={`Ap.${u.numero}`}\n                                  readOnly\n                                  pt={{\n                                    root: {\n                                      className: classNames(\n                                        \"p-inputtext-sm\",\n                                        \"w-full\",\n                                      ),\n                                    },\n                                  }}\n                                />\n                              </div>\n                            </div>\n                          </div>\n                          {/* CONDOMINIO */}\n                          <div className=\"field col-12\">\n                            <div className=\"formgrid grid\">\n                              <label htmlFor=\"condominio\">Condomínio</label>\n                              <InputText\n                                id=\"condominio\"\n                                value={u.nomeCondominio}\n                                readOnly\n                                pt={{\n                                  root: {\n                                    className: classNames(\n                                      \"p-inputtext-sm\",\n                                      \"w-full\",\n                                    ),\n                                  },\n                                }}\n                              />\n                            </div>\n                          </div>\n                          {/* OBSERVACOES */}\n                          <div className=\"field col-12\">\n                            <label htmlFor=\"observacao\">Observações</label>\n                            <InputTextarea\n                              id=\"observacao\"\n                              value={u.observacao}\n                              rows={3}\n                              cols={20}\n                              autoResize\n                              readOnly\n                              pt={{\n                                root: {\n                                  className: classNames(\n                                    \"p-inputtext-sm\",\n                                    \"w-full\",\n                                  ),\n                                },\n                              }}\n                            />\n                          </div>\n                        </section>\n                        <div className=\"page-break\"></div>\n                      </>\n                    );\n                  })}\n                </div>\n                <div className=\"flex align-items-center justify-content-start gap-2 mb-4 hide-print\">\n                  <Button\n                    label=\"Imprimir\"\n                    className=\"hide-print\"\n                    onClick={handlePrint}\n                  ></Button>\n                  {/* <Button label=\"Salvar\" type=\"submit\" icon=\"pi pi-check\" /> */}\n                </div>\n              </div>\n            ) : (\n              <div className=\"ml-4 mr-4 cent\">\n                <div className=\"formgrid grid\">\n                  <div className=\"card md:justify-content-start md:align-items-center\">\n                    <h5 className=\"m-0\">\n                      <div className=\"cent\">Sem registros</div>\n                    </h5>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </DefaultLayout>\n    </>\n  );\n};\n","// import reactLogo from \"./assets/react.svg\";\n// import viteLogo from \"/vite.svg\";\nimport { Route, Router, Switch } from \"wouter\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { navigate, useLocationProperty } from \"wouter/use-location\";\n\nimport \"./App.css\";\nimport { NotFound404 } from \"pages/_404.tsx\";\nimport { CondominosAdd } from \"pages/condominos/add.tsx\";\nimport { CondominosList } from \"pages/condominos/list.tsx\";\nimport { MensagensList } from \"pages/mensagens/list.tsx\";\nimport { Dashboard } from \"pages/dashboard/Dashboard.tsx\";\nimport { CondominiosAdd } from \"pages/condominio/add.tsx\";\nimport { CondominiosList } from \"pages/condominio/list.tsx\";\nimport { EnderecosList } from \"pages/endereco/list.tsx\";\nimport { EnderecosAdd } from \"pages/endereco/add.tsx\";\nimport { UnidadesAdd } from \"pages/unidades/add.tsx\";\nimport { UnidadesList } from \"pages/unidades/list.tsx\";\nimport { SindicosAdd } from \"pages/sindico/add.tsx\";\nimport { SindicosList } from \"pages/sindico/list.tsx\";\nimport { LoginDemo3 } from \"pages/auth/login.tsx\";\nimport { useEffect, useState } from \"react\";\nimport AuthService from \"@/services/auth.service.ts\";\nimport { FinanceirosList } from \"pages/financeiro/list.tsx\";\nimport { addLocale } from \"primereact/api\";\n\nimport customLocale from \"./assets/pt.json\";\nimport { FinanceiroReport } from \"pages/relatorios/financeiro/financeiro_report.tsx\";\nimport { CondominoReport } from \"pages/relatorios/condomino/condomino_report.tsx\";\nimport { UnidadeReport } from \"pages/relatorios/unidade/unidade_report.tsx\";\n\nhistory.replaceState(0, \"\", \"/sgco/app/#/\"); // url defaults to `/sgco/app/#/`\n\ndayjs.extend(customParseFormat);\n\nfunction App() {\n  // returns the current hash location in a normalized form\n  // excluding the leading '#' symbol\n  const hashLocation = () => window.location.hash.replace(/^#/, \"\") || \"/\";\n\n  const hashNavigate = (to: string | URL) => {\n    navigate(\"#\" + to.toString());\n  };\n\n  const useHashLocation = (): [string, (to: string) => void] => {\n    const location = useLocationProperty(hashLocation);\n    return [location, hashNavigate];\n  };\n\n  const [loggedInUser, setLoggedInUser] = useState<UsuarioData>();\n\n  addLocale(\"pt\", customLocale.pt);\n\n  useEffect(() => {\n    const userStr = localStorage.getItem(AuthService.USER_KEY);\n    if (userStr) {\n      setLoggedInUser(JSON.parse(userStr));\n    }\n  }, []);\n\n  return (\n    <>\n      <Router hook={useHashLocation}>\n        <Switch>\n          <Route path=\"/\">\n            {() => (!loggedInUser ? <LoginDemo3 /> : <Dashboard title={\"\"} />)}\n          </Route>\n          <Route path=\"/dashboard\">{() => <Dashboard />}</Route>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/mensagens/list\" component={MensagensList} />\n          <Route path=\"/condominos/list\" component={CondominosList} />\n          <Route path=\"/condominos/add/:id\">\n            {(params) => <CondominosAdd id={params.id} />}\n          </Route>\n          <Route path=\"/condominos/add\">\n            <CondominosAdd id={null} />\n          </Route>\n          <Route path=\"/condominios/list\" component={CondominiosList} />\n          <Route path=\"/condominios/add/:id\">\n            {(params) => <CondominiosAdd id={params.id} />}\n          </Route>\n          <Route path=\"/condominios/add\">\n            <CondominiosAdd id={null} />\n          </Route>\n          <Route path=\"/enderecos/list\" component={EnderecosList} />\n          <Route path=\"/enderecos/add/:id\">\n            {(params) => <EnderecosAdd id={params.id} />}\n          </Route>\n          <Route path=\"/enderecos/add\">\n            <EnderecosAdd id={null} />\n          </Route>\n          <Route path=\"/enderecos/list\" component={EnderecosList} />\n          <Route path=\"/enderecos/add/:id\">\n            {(params) => <EnderecosAdd id={params.id} />}\n          </Route>\n          <Route path=\"/enderecos/add\">\n            <EnderecosAdd id={null} />\n          </Route>\n          <Route path=\"/mensalidades/list\">{() => <FinanceirosList />}</Route>\n          <Route path=\"/receitas/list\">\n            {() => <FinanceirosList tipo={\"RECEITA\"} />}\n          </Route>\n          <Route path=\"/despesas/list\">\n            {() => <FinanceirosList tipo={\"DESPESA\"} />}\n          </Route>\n          <Route path=\"/enderecos/add/:id\">\n            {(params) => <EnderecosAdd id={params.id} />}\n          </Route>\n          <Route path=\"/unidades/list\" component={UnidadesList} />\n          <Route path=\"/unidades/add/:id\">\n            {(params) => <UnidadesAdd id={params.id} />}\n          </Route>\n          <Route path=\"/unidades/add\">\n            <UnidadesAdd id={null} />\n          </Route>\n          <Route path=\"/sindicos/list\" component={SindicosList} />\n          <Route path=\"/sindicos/add/:id\">\n            {(params) => <SindicosAdd id={params.id} />}\n          </Route>\n          <Route path=\"/sindicos/add\">\n            <SindicosAdd id={null} />\n          </Route>\n          <Route path=\"/login\" component={LoginDemo3} />\n          <Route path=\"/relatorios/financeiro\">\n            <FinanceiroReport />\n          </Route>\n          <Route path=\"/relatorios/condominos\">\n            <CondominoReport />\n          </Route>\n          <Route path=\"/relatorios/unidades\">\n            <UnidadeReport />\n          </Route>\n          <Route component={NotFound404}></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nconst About = () => <div>Your About component content</div>;\nexport default App;\n","import { type ReportCallback } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportCallback) => {\n  if (onPerfEntry) {\n    import(\"web-vitals\").then(({ onCLS, onFID, onFCP, onLCP, onTTFB }) => {\n      onCLS(onPerfEntry);\n      onFID(onPerfEntry);\n      onFCP(onPerfEntry);\n      onLCP(onPerfEntry);\n      onTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App.tsx\";\nimport \"./index.css\";\nimport reportWebVitals from \"@/reportWebVitals.ts\";\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"file":"assets/index-3146f0f8.js"}